{
  "swagger": "2.0",
  "info": {
    "title": "VMware SD-WAN Orchestrator API v1",
    "version": "5.0.0",
    "contact": {
      "name": "VMware SD-WAN by VeloCloud",
      "url": "https://www.vmware.com/products/sd-wan-by-velocloud.html"
    },
    "description": "## <p><em>**Please Note**: The 4.2.0 VMware SD-WAN Orchestrator release introduces a <a target=\"_blank\" href=\"https://developer.vmware.com/apis/vmware-sase-platform/vmware-sdwan/latest/\">new SD-WAN Orchestration API</a>, informally referred to as \"API v2\" because it is intended to gradually replace the API described in this document as the primary interface supported for Partner and Customer development of SD-WAN orchestration solutions. Designed with extensive input from users of the \"v1\" iteration of the API described below, APIv2 offers an improved developer experience to new and experienced users alike. We encourage all users to try APIv2 and welcome any and all feedback regarding its design via VMware SD-WAN Support. We intend to iteratively add functionality to APIv2 with each VCO software release until it achieves feature parity with the Portal API (\"v1\"), at which time we expect to cease further development of the Portal API. According to our current plan, the Portal API will remain supported until at least mid-CY23. As always, feedback and questions regarding our APIs and relevant roadmap initiatives may be directed to VMware SD-WAN Support.</em></p> <p>The VMware SD-WAN Orchestrator (VCO) powers the management plane in the VMware SD-WAN solution. It offers a broad range of configuration, monitoring and troubleshooting functionality to service providers and enterprises alike. The principal web service with which users interact in order to exercise this functionality is called the <strong>VCO Portal</strong>.</p> <h2>The VCO Portal</h2> <p>The VCO Portal allows network administrators (or scripts and applications acting on their behalf) to manage network and device configuration and query current or historical network and device state. API clients may interact with the Portal via a JSON-RPC interface or a REST-like interface. It is possible to invoke all of the methods described in this document using either interface; there is no Portal functionality for which access is constrained exclusively to either JSON-RPC clients or REST-like ones.</p> <p>Both interfaces accept <strong>exclusively HTTP POST</strong> requests. Both also expect that request bodies, when present, are JSON-formatted -- consistent with RFC 2616, clients are furthermore expected to formally assert where this is the case using the `Content-Type` request header, e.g. `Content-Type: application/json`.</p> <h3>JSON-RPC Interface</h3> <p>The JSON-RPC API accepts calls via the `/portal` URL path (e.g. vco.velocloud.net/portal). Consistent with <a target=\"_blank\" href=\"https://www.jsonrpc.org/specification\">v2.0 of the JSON-RPC specification</a>, the API expects JSON-encoded request payloads that consist of a method name (`method`), a parameters object (`params`), a user-specified unique request identifier (`id`, by convention an integer such as a millisecond-precision epoch timestamp), and a JSON-RPC specification version identifier (`jsonrpc`). The VCO supports only the 2.0 iteration of the JSON-RPC specification, and so the value of the `jsonrpc` parameter should always be the string `\"2.0\"`. A sample request follows:</p> <pre>curl --header 'Content-Type: application/json' --data '{\"jsonrpc\":\"2.0\",\"method\":\"event/getEnterpriseEvents\",\"params\":{\"enterpriseId\":1},\"id\":1}' --cookie cookies.txt -X POST https://vco.velocloud.net/portal/</pre> <h3>REST-like Interface</h3> <p>The REST-like interface eliminates some of the protocol \"overhead\" imposed by the JSON-RPC interface, and may feel more familiar to those familiar with URL-based REST semantics. It also offers a greater degree of interoperability with a range of client-side tools designed for use with traditional REST APIs. The interface is accessible via the `/portal/rest/` base path. In processing REST-like requests, the VCO parses the method name from the portion of the URL path that follows the base path. The request body need contain only the method parameters, e.g.:</p> <pre>curl --header 'Content-Type: application/json' --data '{\"enterpriseId\":1}' --cookie cookies.txt -X POST https://vco.velocloud.net/portal/rest/event/getEnterpriseEvents</pre> <h2>Authentication</h2> <h3> API Tokens </h3> <p>As of the 3.4.0 release the Orchestrator supports a token-based authentication scheme based on the HTTP `Authorization` header, in addition to the cookie-based authentication scheme it has historically supported. Where privileges allow, users may provision and download API tokens via the \"Account\" page on the Orchestrator Web UI. API tokens may be downloaded only once, and should be treated as sensitive, just as you would treat a password. API tokens are typically longer-lived than session cookies, but clients may refresh them when required using either the Orchestrator Web UI or the underlying token management API methods.</p> <p>Tokens are passed to the server in an HTTP `Authorization` header. For example:</p> <pre>curl --header 'Content-Type: application/json' --header 'Authorization: Token &lt;token&gt;' --data '{\"enterpriseId\":1}' -X POST https://vco.velocloud.net/portal/rest/event/getEnterpriseEvents</pre> <h3>Cookie-Based Authentication</h3> <p>The VCO API supports cookie-based authentication. Most programming languages and HTTP client applications expose libraries or options that facilitate the management and use of session cookies, which clients are free to leverage in working with the VCO (e.g. curl exposes the `--cookie-jar` and `--cookie` options, Python's `requests` library <a target=\"_blank\" href=\"https://requests.readthedocs.io/en/master/user/advanced/#session-objects\">exposes a Session interface</a>, etc.). Numerous code samples, wherein authentication is demonstrated in a variety of programming languages, are available via <a target=\"_blank\" href=\"https://code.vmware.com/samples?categories=Sample&keywords=velocloud\">VMware Sample Exchange</a>.</p> <p>Clients initiate sessions by invoking either the `login/enterpriseLogin` or the `login/operatorLogin` method, depending on the user type associated with the client's credentials (Partner and Customer Admins should use the former method, and Operator Admins the latter). In the event of a successful authentication call, the API responds with an HTTP 200 status code and embeds a `velocloud.session` cookie in a `Set-Cookie` response header. When authentication is unsuccessful, the API responds with an HTTP 302 status code and includes a short message elaborating on the failure in a `velocloud.message` cookie. A sample authentication call is demonstrated with the curl command-line utility below (response truncated for brevity):</p> <pre>curl --cookie-jar /tmp/cookie.txt -i -X POST https://vco.velocloud.net/portal/rest/login/enterpriseLogin --data '{\"username\":\"admin@velocloud.net\",\"password\":\"'$SECRET'\"}'<br/>&lt; HTTP/1.1 200 OK<br/>&lt; Set-Cookie: velocloud.session=&lt;token&gt;; &lt;attributes&gt;</pre> <p>Once a client has successfully retrieved a session cookie, it may begin to make API calls to API methods that require authentication by embedding the `velocloud.session` cookie in a `Cookie` request header (programming languages and other client utilities typically provide interfaces that simplify this).</p> <p>Session cookies typically expire after a period of 24 hours (though liftetimes are configurable and may vary across VCO deployments). It is considered best practice to invalidate cookies whenever they are no longer required by initiating a call to the `logout` API method:</p> <pre>curl --cookie /tmp/cookie.txt -X POST https://vco.velocloud.net/portal/rest/logout</pre> <h2>Data Model & Terminology</h2> <p>The terminology of the VCO API schema doesn't always align with the terminology of the Web Console. Consider this a \"cheat sheat\" to aid in interpreting API constructs:</p> <ul><li><strong>Enterprise</strong>: Customer</li><li><strong>Enterprise Proxy</strong>: Partner</li><li><strong>Network</strong>: The Network construct encapsulates all resources in the VCO Operator scope. In typical environments, each VCO has exactly one Network (to which all Partners and Customers belong), and the ID of that Network is 1. Methods in the `/network` namespace are generally reserved exclusively for Operator use.</li><li><strong>Configuration</strong>: Device configurations are modeled in the API schema as a composition of \"Configuration\" entities. There are effectively three distinct types of Configurations: Operator Profiles (also referred to as \"Software Images\"), Customers Profiles (referred to in the API schema as \"Enterprise Configurations\"), and Edge-Specific Profiles.</li><li><strong>Configuration Module</strong>: Each configuration is composed of a set of modules (e.g. `deviceSettings`, `QOS`, `firewall`, `controlPlane`, etc.), wherein the actual configuration `data` resides. In the current version of the API, configuration changes must always be applied at the module level (i.e. via calls to the `configuration/updateConfigurationModule` API method). Partial updates on specific sections of Configuration Module `data` are not (yet) supported.</li><li><strong>Refs</strong>: `refs` are associations between a Network Service (e.g. DNS providers, authentication services, VPN hubs, etc.) and a Configuration (more precisely, a Configuration Module). They should generally be treated as read-only.</li></ul> <h2>Common Parameters</h2> <p>A few parameters appear repeatedly throughout the API schema:</p> <h3>`enterpriseId`</h3> <p>The Portal API enforces that an `enterpriseId` parameter is <strong>required on any request initiated by an Operator or Partner Administrator that accesses, or operates upon, a Customer-managed resource</strong> (e.g. Edges, Profiles, network services). `enterpriseId` is never required for API calls initiated by Customer Administrators (in such cases it is inferred based on the user's credential).</p> <h3>`enterpriseProxyId`</h3> <p>Similar to the `enterpriseId` parameter, the Portal API enforces that an `enterpriseProxyId` parameter is <strong>required on any request initiated by an Operator Administrator that accesses, or operates upon, a Partner-managed resource</strong> (e.g. Partner Events, Partner Gateway Pools, etc.). `enterpriseProxyId` is never required for API calls initiated by Partner Administrators (in such cases it is inferred based on the user's credential).</p> <h3>`networkId`</h3> <p>Some API methods accept a `networkId` parameter, which determines the Network context in which a request is processed. <strong>Partner and Customer Administrators need never use this parameter</strong>, as those user types exist within the context of a single Network which is trivially inferred by the VCO. Meanwhile, Operator Administrators need only specify a value for this parameter in highly-atypical multi-Network VCO deployments (e.g. test environments).</p> <h3>`with`</h3> <p>Many \"fetch\" API methods support a `with` parameter, which allows the user to optionally resolve related entities. `recentLinks` is a special instance of one such option that is supported by methods that fetch Edges, which will cause the API to resolve WAN links for which activity has been recorded in the last 24 hours. This should generally be preferred to the `links` option on methods where it is supported.</p> <h3>`interval`</h3> <p>Many methods, such as those that query events or volumetric flow data, support a query `interval`. The default query interval, inferred by the server when none is otherwise specified, is the most recent 12 hour period.</p> <p>The VCO exposes time series data (e.g. device system health metrics such as CPU and memory usage, network metrics such as latency/jitter/loss, volumetric traffic flow data) via various API methods that accept query intervals. By default, Edges and Gateways report new statistics to the Orchestrator every five minutes. Due to various factors (clock drift, network jitter, server-side processing delays), statistics associated with a given interval beginning at time `t` are often not reflected in API output until time `t + 10 minutes`. As such, we do not recommend using query intervals smaller than 10 minutes in time for these methods.</p> <h2>Datetimes</h2> <p>The Orchestrator API uses UTC time universally. Whenever a method request schema calls for a datetime value, and whenever a response includes a datetime value, the timezone should be inferred to be UTC.</p> <p>The VCO accepts the following datetime formats:</p> <ul><li>13-digit millisecond-precision epoch timestamps (e.g. `1500000000000`)</li><li>Datetime strings formatted consistently with RFC 3339. (e.g. `\"2017-01-01T00:00:00.000Z\"`)</li></ul>  <h2>Rate Limits</h2> <p>The VCO makes use of a rate-limiting mechanism to ensure an equitable allocation of server resources among API clients and safeguard overall system stability. The VCO supports two kinds of API rate limits:</p> <ul><li><strong>Concurrency limits</strong> govern the maximum number of requests that the server processes on behalf of a client or tenant at any given moment.</li><li><strong>Leaky-bucket limits</strong> prevent bursty client activity by limiting the number of requests processed by the server on behalf of a particular client or tenant within a short time period (5 seconds, by default).</li></ul> <p>Rate limiting policies are configurable at the discretion of the VCO Operator, and as such can vary from one environment to the next. <strong>Questions regarding the policies applicable to your environment should be directed to your VCO Operator.</strong></p> <p>When an API client is rate limited, it incurs a \"penalty\" whereby the server refuses to process new requests on its behalf for a brief period of time (5 seconds, by default). During this time, the server issues responses bearing the HTTP 429 status code (Too Many Requests) to the rate-limited client.</p> <p>Developers are advised to take the following steps to (1) avoid triggering defensive rate limiter responses, and (2) mitigate the impact of rate limiter penalties.</p> <ul><li>Handle HTTP 429 responses by implementing a constant-time \"backoff\" (i.e. wait 5 seconds) before attempting another request.</li><li>Limit the number of requests in flight at any given time to no more than a handful.</li><li>Limit polling frequency based on the rate at which source data is refreshed on the server (5 minutes for device statistics, 30s for most other data points).</li><li>When a use case requires querying multiple sites, prefer \"aggregate\" query methods (e.g. `monitoring/getAggregateEdgeLinkMetrics`) to those that query one site at a time (e.g. `metrics/getEdgeLinkMetrics`), wherever possible.</li></ul> <h2>Backward Compatibility</h2> <p>We endeavor not to introduce backward-incompatible changes in the API unless we consider such a change to be essential to the security or stability of the product. We view the following classes of changes as backward-compatible:</p> <ul><li>Changes that introduce new API methods</li><li>Changes that introduce new optional request parameters</li><li>Changes that introduce new response parameters</li><li>Changes that add support for new values to existing enumerations (i.e. properties that have a discrete range of possible values)</li><li>Changes to the format of opaque (i.e. server-generated) strings (e.g. entity identifiers)</li><li>Changes to API error messages</li><li>Changes to Event `message`s and `detail`s</li><li>Changes to the content of alert messages (except where that content is specifically dictated by the user, e.g. for Webhooks)</li></ul> <br>\n"
  },
  "basePath": "/portal/rest",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/login/operatorLogin": {
      "post": {
        "operationId": "login_operator_login",
        "summary": "Authenticate operator user",
        "description": "Authenticates an operator user and, upon successful login, returns a velocloud.session cookie. Pass this session cookie in the authentication header in subsequent VCO calls.\n If you are using an HTTP client (e.g. Postman) that is configured to automatically follow HTTP redirects, a successful authentication request will cause your client to follow an HTTP 302 redirect to the portal 'Home' web page. Your session cookie can then be used to make VCO API calls. \n Note that session cookies expire after a period of time specified in the VCO configuration (default is 24 hours).",
        "tags": [
          "all",
          "login"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/auth_param"
          }
        ],
        "responses": {
          "200": {
            "description": "If you are using an HTTP client that is configured to automatically follow HTTP redirects (e.g. Postman), a successful authentication request will cause your client to follow a HTTP 302 redirect to the portal 'Home' web page. Your session cookie may then be used to make API calls."
          },
          "302": {
            "description": "An HTTP 302 response is returned on both successful and failed authentication attempts. If the response includes a Set-Cookie header specifying a non-empty velocloud.session cookie, authentication was successful and this cookie may be used to make API calls."
          }
        }
      }
    },
    "/login/enterpriseLogin": {
      "post": {
        "operationId": "login_enterprise_login",
        "summary": "Authenticate enterprise or partner (MSP) user",
        "description": "Authenticates an enterprise or partner (MSP) user and, upon successful login, returns a velocloud.session cookie. Pass this session cookie in the authentication header in subsequent VCO calls.\n If you are using an HTTP client (e.g. Postman) that is configured to automatically follow HTTP redirects, a successful authentication request will cause your client to follow an HTTP 302 redirect to the portal 'Home' web page. Your session cookie can then be used to make VCO API calls.\n Note that session cookies expire after a period of time specified in the VCO configuration (default is 24 hours).",
        "tags": [
          "all",
          "login"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/auth_param"
          }
        ],
        "responses": {
          "200": {
            "description": "If you are using an HTTP client that is configured to automatically follow HTTP redirects (e.g. Postman), a successful authentication request will cause your client to follow an HTTP 302 redirect to the portal 'Home' web page. Your session cookie may then be used to make API calls."
          },
          "302": {
            "description": "An HTTP 302 response is returned on both successful and failed authentication attempts. If the response includes a Set-Cookie header specifying a non-empty velocloud.session cookie, authentication was successful and this cookie may be used to make API calls."
          }
        }
      }
    },
    "/logout": {
      "post": {
        "operationId": "logout",
        "summary": "Logout and invalidate authorization session cookie",
        "description": "Logs out the VCO API user and invalidates the session cookie.",
        "tags": [
          "all",
          "login"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "If you are using an HTTP client that is configured to automatically follow HTTP redirects (e.g. Postman), a successful logout request will cause your client to follow an HTTP 302 redirect to the portal login web page."
          },
          "302": {
            "description": "An HTTP 302 (redirect) response is returned on both successful and failed logout attempts."
          }
        }
      }
    },
    "/enterprise/getEnterpriseAlertDefinitions": {
      "post": {
        "summary": "Get enterprise alert definitions",
        "description": "List the alerts - and their respective default configuration settings - supported for the target Enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_alert_definitions",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_alert_definitions",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_alert_definitions_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/clientDevice/setClientDeviceHostName": {
      "post": {
        "summary": "Set hostname for client device",
        "description": "Sets the `hostName` for client device\n\nPrivileges required:\n\n`UPDATE` `CLIENT_DEVICE`",
        "tags": [
          "clientDevice",
          "all"
        ],
        "operationId": "set_client_device_host_name",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "CLIENT_DEVICE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "set_client_device_host_name",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "hostName": {
                  "type": "string"
                },
                "clientDeviceId": {
                  "type": "integer"
                },
                "macAddress": {
                  "type": "string"
                },
                "ipAddress": {
                  "type": "string"
                }
              },
              "required": [
                "hostName"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/set_client_device_host_name_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/createByEnterprise": {
      "post": {
        "summary": "Create composite role by an Enterprise",
        "tags": [
          "all",
          "compositeRole",
          "operator",
          "create"
        ],
        "description": "Creates a composite role based on the role params provided by the enterprise\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_SCOPED_ROLE`",
        "operationId": "create_composite_role_by_enterprise",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "create_composite_role_by_enterprise",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "ENTERPRISE"
                  ]
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "functionalRoleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "userType",
                "enterpriseId",
                "name",
                "description",
                "functionalRoleIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/createByEnterpriseProxy": {
      "post": {
        "summary": "Create composite role by an MSP",
        "tags": [
          "all",
          "compositeRole",
          "msp",
          "create"
        ],
        "description": "Creates a composite role based on the role params provided by the MSP\n\nPrivileges required:\n\n`CREATE` `MSP_SCOPED_ROLE`",
        "operationId": "create_composite_role_by_msp",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "MSP_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "create_composite_role_by_msp",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "MSP",
                    "ENTERPRISE"
                  ]
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "functionalRoleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "userType",
                "enterpriseProxyId",
                "name",
                "description",
                "functionalRoleIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/createByOperator": {
      "post": {
        "summary": "Create composite role by an Operator",
        "tags": [
          "all",
          "compositeRole",
          "operator",
          "create"
        ],
        "description": "Creates a composite role based on the role params provided by operator\n\nPrivileges required:\n\n`CREATE` `OPERATOR_SCOPED_ROLE`",
        "operationId": "create_composite_role_by_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "OPERATOR_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "create_composite_role_by_operator",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "OPERATOR",
                    "MSP",
                    "ENTERPRISE"
                  ]
                },
                "networkId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "functionalRoleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "userType",
                "networkId",
                "name",
                "description",
                "functionalRoleIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/deleteByEnterprise": {
      "post": {
        "summary": "Delete a composite role",
        "tags": [
          "all",
          "compositeRole",
          "enterprise",
          "delete"
        ],
        "description": "Deletes composite role with the given role Ids\n\nPrivileges required:\n\n`DELETE` `ENTERPRISE_SCOPED_ROLE`",
        "operationId": "delete_composite_roles_by_enterprise",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "ENTERPRISE_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "delete_composite_roles_by_enterprise",
              "properties": {
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {},
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/deleteByEnterpriseProxy": {
      "post": {
        "summary": "Delete a composite role",
        "tags": [
          "all",
          "compositeRole",
          "msp",
          "delete"
        ],
        "description": "Deletes composite role with the given role Ids\n\nPrivileges required:\n\n`DELETE` `MSP_SCOPED_ROLE`",
        "operationId": "delete_composite_roles_by_msp",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "MSP_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "delete_composite_roles_by_msp",
              "properties": {
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {},
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/deleteByOperator": {
      "post": {
        "summary": "Delete a composite role",
        "tags": [
          "all",
          "compositeRole",
          "operator",
          "delete"
        ],
        "description": "Deletes composite role with the given role Ids\n\nPrivileges required:\n\n`DELETE` `OPERATOR_SCOPED_ROLE`",
        "operationId": "delete_composite_roles_by_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "OPERATOR_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "delete_composite_roles_by_operator",
              "properties": {
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "networkId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {},
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/getByEnterprise": {
      "post": {
        "summary": "Get composite roles by an Enterprise",
        "tags": [
          "all",
          "compositeRole",
          "enterprise",
          "get"
        ],
        "description": "Returns all composite roles defined with the specified userTypes and enterpriseId.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_SCOPED_ROLE`",
        "operationId": "get_composite_roles_by_enterprise",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ENTERPRISE_USER",
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_composite_roles_by_enterprise",
              "properties": {
                "userTypes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ENTERPRISE"
                    ]
                  }
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "userTypes"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "get_composite_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_composite_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/getByEnterpriseProxy": {
      "post": {
        "summary": "Get composite roles by an Msp",
        "tags": [
          "all",
          "compositeRole",
          "msp",
          "get"
        ],
        "description": "Returns all composite roles defined with the specified userTypes and enterpriseProxyId.\n\nPrivileges required:\n\n`READ` `MSP_SCOPED_ROLE`",
        "operationId": "get_composite_roles_by_msp",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "MSP_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_composite_roles_by_msp",
              "properties": {
                "userTypes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "MSP",
                      "ENTERPRISE"
                    ]
                  }
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "userTypes"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "get_composite_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_composite_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/getByOperator": {
      "post": {
        "summary": "Get composite roles by operator",
        "tags": [
          "all",
          "compositeRole",
          "operator",
          "get"
        ],
        "description": "Returns all composite roles defined with the specified userTypes and networkId.\n\nPrivileges required:\n\n`READ` `OPERATOR_SCOPED_ROLE`",
        "operationId": "get_composite_roles_by_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_composite_roles_by_operator",
              "properties": {
                "userTypes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "OPERATOR",
                      "MSP",
                      "ENTERPRISE"
                    ]
                  }
                },
                "networkId": {
                  "type": "integer"
                },
                "roleIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "userTypes"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "get_composite_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_composite_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/updateByEnterprise": {
      "post": {
        "summary": "Updates a composite role by an enterprise",
        "tags": [
          "all",
          "compositeRole",
          "enterprise",
          "update"
        ],
        "description": "Updates the composite role based on the update attributes and role id provided\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_SCOPED_ROLE`",
        "operationId": "update_composite_role_by_enterprise",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "update_composite_role_by_enterprise",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "roleId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "functionalRoleIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {}
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/updateByEnterpriseProxy": {
      "post": {
        "summary": "Updates a composite role by an Msp",
        "tags": [
          "all",
          "compositeRole",
          "msp",
          "update"
        ],
        "description": "Updates the composite role based on the update attributes and role id provided\n\nPrivileges required:\n\n`UPDATE` `MSP_SCOPED_ROLE`",
        "operationId": "update_composite_role_by_msp",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "MSP_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "update_composite_role_by_msp",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "roleId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "functionalRoleIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {}
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/compositeRole/updateByOperator": {
      "post": {
        "summary": "Updates a composite role by an Operator",
        "tags": [
          "all",
          "compositeRole",
          "operator",
          "update"
        ],
        "description": "Updates the composite role based on the update attributes and role id provided\n\nPrivileges required:\n\n`UPDATE` `OPERATOR_SCOPED_ROLE`",
        "operationId": "update_composite_role_by_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "OPERATOR_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "update_composite_role_by_operator",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "roleId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "functionalRoleIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {}
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/cloneAndConvertConfiguration": {
      "post": {
        "summary": "Create new segment-based profile from existing network-based profile",
        "description": "Clones and converts the specified network configuration (by `configurationId`). Accepts an `enterpriseId` or `networkId` to associate the new configuration with an enterprise or network. On success, returns the ID of the newly created configuration object.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_PROFILE`, or\n\n`CREATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_clone_and_convert_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "CREATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_clone_and_convert_configuration",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "guestVLANSegmentObjectId": {
                  "type": "integer"
                }
              },
              "required": [
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_clone_and_convert_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/cloneConfiguration": {
      "post": {
        "summary": "Clone configuration profile",
        "description": "Clones the specified configuration (by `configurationId`) and all associated configuration modules. Accepts an `enterpriseId` or `networkId` to associate the new configuration with an enterprise or network. Select modules may also be specified. On success, returns the `id` of the newly created configuration object.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_PROFILE`, or\n\n`CREATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_clone_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "CREATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_clone_configuration",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "Alias for `configurationId`"
                },
                "networkId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_clone_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/cloneEnterpriseTemplate": {
      "post": {
        "summary": "Clone default enterprise configuration profile",
        "description": "Creates a new enterprise configuration from the enterprise default configuration. On success, returns the `id` of the newly created configuration object.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_PROFILE`, or\n\n`CREATE` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_clone_enterprise_template",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "CREATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_clone_enterprise_template",
              "properties": {
                "enterpriseId": {
                  "type": "integer",
                  "description": "Required if called from the operator or MSP context, identifies the target enterprise of the API call."
                },
                "configurationType": {
                  "type": "string",
                  "enum": [
                    "SEGMENT_BASED",
                    "NETWORK_BASED"
                  ],
                  "description": "If both network and segment based functionality is granted to the enterprise, chose which template type to clone. If not specified the type of the operator profile assigned to the enterprise will be used."
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_clone_enterprise_template_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/deleteConfiguration": {
      "post": {
        "summary": "Delete configuration profile",
        "description": "Deletes the specified configuration profile (by `id`). On success, returns an object indicating the number of objects (rows) deleted (1 or 0).\n\nPrivileges required:\n\n`DELETE` `ENTERPRISE_PROFILE`, or\n\n`DELETE` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_delete_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "DELETE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_delete_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_delete_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/getConfiguration": {
      "post": {
        "summary": "Get configuration profile",
        "description": "Gets the specified configuration profile, optionally with module details.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`, or\n\n`READ` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_get_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_get_configuration",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "modules",
                      "edgeCount",
                      "enterprises",
                      "enterpriseCount",
                      "counts"
                    ]
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_get_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/getConfigurationModules": {
      "post": {
        "summary": "Get configuration profile modules",
        "description": "Gets all configuration modules for the specified configuration profile.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`, or\n\n`READ` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_get_configuration_modules",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_get_configuration_modules",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "noData": {
                  "type": "boolean"
                },
                "modules": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "imageUpdate",
                      "controlPlane",
                      "managementPlane",
                      "firewall",
                      "QOS",
                      "deviceSettings",
                      "WAN",
                      "metaData",
                      "properties",
                      "analyticsSettings"
                    ]
                  }
                }
              },
              "required": [
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "configuration_get_configuration_modules_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/configuration_get_configuration_modules_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/getIdentifiableApplications": {
      "post": {
        "summary": "Get the applications that are identifiable through DPI.",
        "description": "Gets all applications that are identifiable through DPI. If called from an operator or MSP context, then `enterpriseId` is required. Optionally, specify `edgeId` to get the map for a specific Edge.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`, or\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_get_identifiable_applications",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "ENTERPRISE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_get_identifiable_applications",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "applicationIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_get_identifiable_applications_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/getRoutableApplications": {
      "post": {
        "summary": "Get first packet routable applications",
        "description": "Gets all applications that are first packet routable. If called from an operator or MSP context, then `enterpriseId` is required.Optionally, specify `edgeId` to get the map for a specific Edge.\n\nPrivileges required:\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_get_routable_applications",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "VIEW_FLOW_STATS",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_get_routable_applications",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_get_routable_applications_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/insertConfigurationModule": {
      "post": {
        "summary": "Create configuration module",
        "description": "Creates a new configuration module for the specified configuration profile.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`, or\n\n`UPDATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_insert_configuration_module",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "UPDATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_insert_configuration_module",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "imageUpdate",
                    "controlPlane",
                    "managementPlane",
                    "firewall",
                    "QOS",
                    "deviceSettings",
                    "WAN",
                    "metaData",
                    "properties",
                    "analyticsSettings"
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "ENTERPRISE",
                    "OPERATOR",
                    "GATEWAY"
                  ]
                },
                "description": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "configurationId": {
                  "type": "integer"
                },
                "version": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "data",
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/insertion_confirmation"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/removeOperatorConfigurationAssocFromEnterprises": {
      "post": {
        "summary": "Removes operator configuration association from all enterprises",
        "description": "Unassigns operator profile from edge image management enabled enterprises\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "network_remove_operator_config_assoc_from_all_enterprises",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_remove_operator_config_assoc_from_all_enterprises",
              "properties": {
                "configurationId": {
                  "type": "integer"
                }
              },
              "required": [
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "remove_network_config_from_enterprises",
              "properties": {
                "rowsAffected": {
                  "type": "integer"
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/updateApplicationMapContent": {
      "post": {
        "summary": "Refresh Application Map(s)",
        "description": "Update Application Map IP and port mappings for select applications to ensure they are consistent with the current authoritative mappings maintained by the application provider. On success, returns a list consisting of the `id`s, `name`s and `logicalId`s of the updated application maps.\n\nPrivileges required:\n\n`UPDATE` `SOFTWARE_PACKAGE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_update_application_map_content",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "SOFTWARE_PACKAGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_update_application_map_content",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "A list of Application Map `id`s"
                },
                "checkOnly": {
                  "type": "boolean",
                  "default": false,
                  "description": "When `true`, the server initiates the network calls necessary to update the target application maps and writes the results to the VCO system logs. This allows users with access to the logs to perform a \"dry run\" and assess the impact of the change in a risk-off manner."
                },
                "updateProfiles": {
                  "type": "boolean",
                  "default": false,
                  "description": "When `true`, causes the resulting changes to be propagated to Edges immediately (meaning on their next heartbeats)."
                }
              },
              "required": [
                "ids"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_update_application_map_content_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/updateApplicationMapProfiles": {
      "post": {
        "summary": "Refresh Application Map and push updates to Edges",
        "description": "Update Application Map IP and port mappings for select applications to ensure they are consistent with the current authoritative mappings maintained by the application provider AND push the resulting changes to the Edges assigned the updated Application Maps *immediately*. On success, returns an object identifying the `profiles` and `enterprises` updated.\n\nPrivileges required:\n\n`UPDATE` `SOFTWARE_PACKAGE`",
        "tags": [
          "all",
          "configuration"
        ],
        "operationId": "configuration_update_application_map_profiles",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "SOFTWARE_PACKAGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_update_application_map_profiles",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The `id` of the Application Map to be updated"
                },
                "checkOnly": {
                  "type": "boolean",
                  "default": false,
                  "description": "When `true`, causes the server to return the list of profiles that would be updated, without actually executing the update or configuration push. This allows users to perform a \"dry run\" and assess the impact of the change in a risk-off manner."
                },
                "updateContent": {
                  "type": "boolean",
                  "default": true,
                  "description": "When `false`, the Application Map is simply \"pushed\" in its current state to the Edges to which it is assigned (the server skips performing a \"refresh\")."
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_update_application_map_profiles_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/updateConfiguration": {
      "post": {
        "summary": "Update configuration profile",
        "description": "Updates the specified configuration profile record according to the attribute:value mappings specified in the `_update` object.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`, or\n\n`UPDATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_update_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "UPDATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_update_configuration",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "effective": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "id",
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/rows_modified_confirmation"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/configuration/updateConfigurationModule": {
      "post": {
        "summary": "Update configuration module",
        "description": "Updates the specified configuration module and/or modifies its network service associations (`refs`). Example use cases include:\n- Create a new firewall rule or modify an existing one\n- Create a business policy or modify an existing one\n- Configure device settings such as high availability, Cloud VPN, etc.\n- (Operator-only) Configure Operator Profile settings such as application maps.\n\nThis method requires an `_update` parameter - an object specifying the module attribute(s) to be updated and their corresponding value(s).\n\nIn the cases where it is necessary to modify network service assocations (e.g. when configuring a VPN hub or cloud security provider, adding a network segment to a profile, etc.), the `_update` payload should consist of the updated module `data` and `refs`. For historical reasons, we advise that `refs` should also be included <b>any time</b> a user means to update a `deviceSettings` configuration module where partner gateways are configured (regardless of whether or not the user intends to change the partner gateway assignments or the order thereof with that update).\n\nFor use cases where it is *not* necessary to modify network service associations, `data` should be the only attribute that appears in the `_update` payload.\n\n<b>Notes and Limitations</b>\n- <b>This method does not support partial or patch-like updates on any sub-section of the `data` or `refs` objects.</b> Generally speaking, an update involves retrieving a module, making incremental changes to the `data` (and/or `refs`, if required), and passing the modified `data`/`refs` objects back to the server <b>in their entirety</b> as part of the `_update` spec.\n- Due to a limitation of the Swagger language, the request body schema model that appears below does not reference each of the `data` and `refs` schema definitions for the various module types. Those models may however be found in the model reference below (`segmentBasedDeviceSettings`, `firewall`, `QOS`, `WAN`, `controlPlane`, `imageUpdate`, `managementPlane`, `metaData`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`, or\n\n`UPDATE` `OPERATOR_PROFILE`",
        "tags": [
          "configuration",
          "all"
        ],
        "operationId": "configuration_update_configuration_module",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE",
              "sufficient": true
            },
            {
              "action": "UPDATE",
              "object": "OPERATOR_PROFILE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "configuration_update_configuration_module",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Alias for `configurationModuleId`"
                },
                "configurationModuleId": {
                  "type": "integer",
                  "description": "The `id` of the target configuration module. This parameter, or its alias `id`, is required."
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "basic": {
                  "type": "boolean",
                  "default": false
                },
                "_update": {
                  "$ref": "#/definitions/configuration_module"
                }
              },
              "example": {
                "enterpriseId": 4,
                "configurationModuleId": 5161,
                "_update": {
                  "data": {
                    "firewall_enabled": true,
                    "firewall_logging_enabled": true,
                    "inboundLoggingEnabled": false,
                    "inbound": [],
                    "stateful_firewall_enabled": false,
                    "syslog_forwarding": false,
                    "segments": [
                      {
                        "segment": {
                          "segmentId": 0,
                          "name": "Global Segment",
                          "type": "REGULAR",
                          "segmentLogicalId": "0f966250-942d-48cc-be87-d656734f6449"
                        },
                        "firewall_logging_enabled": false,
                        "outbound": [
                          {
                            "name": "Block Google DNS",
                            "match": {
                              "ipVersion": "IPv4v6",
                              "appid": -1,
                              "classid": -1,
                              "dscp": -1,
                              "sip": "any",
                              "smac": "any",
                              "sport_high": -1,
                              "sport_low": -1,
                              "ssm": "255.255.255.255",
                              "svlan": -1,
                              "os_version": -1,
                              "hostname": "",
                              "dip": "8.8.8.8",
                              "dport_low": 53,
                              "dport_high": 53,
                              "dsm": "255.255.255.255",
                              "dvlan": -1,
                              "proto": 6,
                              "s_rule_type": "prefix",
                              "d_rule_type": "exact"
                            },
                            "action": {
                              "allow_or_deny": "deny"
                            },
                            "loggingEnabled": false
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/configuration_update_configuration_module_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/configureActiveForReplication": {
      "post": {
        "summary": "Configure current VCO for disaster recovery",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Configures the current Orchestrator to be active and the specified Orchestrator to be standby for Orchestrator disaster recovery replication. Required attributes: 1) `standbyList`, a single-entry array containing the `standbyAddress` and `standbyUuid`, 2) `drVCOUser`, a Orchestrator super user available on both the active and standby VCOs, and 3) `drVCOPassword`, the password of `drVCOUser` on the standby Orchestrator (unless the `autoConfigStandby` option is specified as `false`). The call sets up the active Orchestrator to allow replication from the standby and then (unless `autoConfigStandby` is `false`) makes a `transitionToStandby` API call to the specified standby, expected to have been previously placed in `STANDBY_CANDIDATE` state via `prepareForStandby`. After this call, the active and standby VCOs should be polled via `getReplicationStatus` until they  both reach `STANDBY_RUNNING` `drState` (or a configuration error is reported).  (Note: `drVCOPassword` is not persisted.)\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_configure_active_for_replication",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_configure_active_for_replication",
              "properties": {
                "standbyList": {
                  "type": "array",
                  "items": {
                    "title": "standby_vco_designee",
                    "type": "object",
                    "properties": {
                      "standbyAddress": {
                        "type": "string"
                      },
                      "standbyAddressV6": {
                        "type": "string"
                      },
                      "standbyReplicationAddress": {
                        "type": "string"
                      },
                      "standbyUuid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "standbyAddress",
                      "standbyUuid"
                    ]
                  }
                },
                "autoConfigStandby": {
                  "type": "boolean",
                  "default": true
                },
                "drVCOUser": {
                  "type": "string"
                },
                "drVCOPassword": {
                  "type": "string"
                }
              },
              "required": [
                "standbyList",
                "drVCOUser",
                "drVCOPassword"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_configure_active_for_replication_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/demoteActive": {
      "post": {
        "summary": "Demote current VCO from active to zombie",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Demotes the current VCO from active to zombie. No input parameters are required. The active server is expected to be in the `drState` `FAILURE_GET_STANDBY_STATUS` or `FAILURE_MYSQL_ACTIVE_STATUS`, meaning that DR protection had been engaged (with the last successful replication status observed at `lastDRProtectedTime`) but that active failed a health check since that time.  If the active server is in the `drState` `STANDBY_RUNNING`, meaning that it has detected no problems in interacting with the standby server, the operator can force demotion of the active using the optional `force` parameter passed with value of `true`; in this case, the operator must ensure that the standby server has already been successfully promoted.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_demote_active",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_demote_active",
              "properties": {
                "force": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_demote_active_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/getReplicationBlob": {
      "post": {
        "summary": "Get blob needed to configure VCO replication on standby",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Gets from the active Orchestrator the blob needed to configure replication on the standby. Used only when `configureActiveForReplication` was called with `autoConfigStandby` set to `false` [`true` by default].\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_get_replication_blob",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/disaster_recovery_get_replication_blob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_get_replication_blob_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/getReplicationStatus": {
      "post": {
        "summary": "Get disaster recovery status",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Gets the disaster recovery replication status, optionally with client contact, state transition history, and storage information. No input parameters are required.  Can optionally specify one or more of the following `with` parameters: `clientContact`, `clientCount`, `stateHistory`, and `storageInfo`.\n\nPrivileges required:\n\n`READ` `REPLICATION`",
        "operationId": "disaster_recovery_get_replication_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_get_replication_status",
              "properties": {
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "clientContact",
                      "stateHistory",
                      "clientCount",
                      "storageInfo"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_get_replication_status_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/prepareForStandby": {
      "post": {
        "summary": "Designate current VCO as DR standby candidate",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Transitions the current Orchestrator to a quiesced state, ready to be configured as a standby system. No input parameters are required.  After this call, the Orchestrator will be restarted in standby mode. The caller should subsequently poll `getReplicationStatus` until `drState` is `STANDBY_CANDIDATE`.  This is the first step in configuring Orchestrator disaster recovery.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_prepare_for_standby",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/disaster_recovery_prepare_for_standby"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_prepare_for_standby_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/promoteStandbyToActive": {
      "post": {
        "summary": "Promote standby VCO to active",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Promotes the current server to take over as the single standalone VCO. The current server is expected to be a standby in the `drState` `FAILURE_MYSQL_STANDBY_STATUS`, meaning that DR protection had been engaged (with the last successful replication status observed at `lastDRProtectedTime`), but that standby has been unable to replicate since that time. \n If the standby server is in the `drState` `STANDBY_RUNNING`, meaning that it has detected no problems in replicating from the active server, the operator can force promotion of the standby using the optional `force` parameter passed with a value of `true`. In this case, the standby server will call `demoteActive/force` on the active server.  The operator should, if possible, ensure that the formerly active server is demoted by running `demoteServer` directly on that server if the standby server was unable to do so successfully.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_promote_standby_to_active",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_promote_standby_to_active",
              "properties": {
                "force": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_promote_standby_to_active_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/removeStandby": {
      "post": {
        "summary": "Remove VCO disaster recovery on current server",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Removes disaster recovery on the current server. In addition, makes a best-effort call to `removeStandby` on the paired disaster recovery server. No input parameters are required.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_remove_standby",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/disaster_recovery_remove_standby"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_remove_standby_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/disasterRecovery/transitionToStandby": {
      "post": {
        "summary": "Transition VCO to standby",
        "tags": [
          "all",
          "disasterRecovery"
        ],
        "description": "Configures the current Orchestrator to transition to standby in a disaster recovery active/standby pair. Requires the `activeAccessFromStandby` parameter that contains the data needed to configure standby. This data is produced by `configureActiveForReplication`, which by default automatically calls `transitionToStandby`; an explicit call is needed (with a blob obtained from `getReplicationBlob`), only if `configureActiveForReplication` is called with `autoConfigStandby` set to `false`.\n\nPrivileges required:\n\n`CREATE` `REPLICATION`",
        "operationId": "disaster_recovery_transition_to_standby",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "REPLICATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "disaster_recovery_transition_to_standby",
              "properties": {
                "activeAccessFromStandby": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/disaster_recovery_transition_to_standby_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/deleteEdge": {
      "post": {
        "summary": "Delete Edge",
        "description": "Deletes the specified Edge(s) (by `id` or an array of `ids`).\n\nPrivileges required:\n\n`DELETE` `EDGE`",
        "tags": [
          "all",
          "edge"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "edge_delete_edge",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_delete_edge",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "edgeIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_delete_edge_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/deleteEdgeBgpNeighborRecords": {
      "post": {
        "summary": "Delete Edge BGP neighbor records",
        "description": "Deletes BGP record(s) matching the specified record keys (`neighborIp`) on the Edges with the specified `edgeId`s, if they exist.\n\nPrivileges required:\n\n`DELETE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "edge"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "edge_delete_edge_bgp_neighbor_records",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_delete_edge_bgp_neighbor_records",
              "properties": {
                "records": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "edgeId": {
                        "type": "integer"
                      },
                      "neighborIp": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_delete_edge_bgp_neighbor_records_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/edgeCancelReactivation": {
      "post": {
        "summary": "Cancel pending Edge reactivation request",
        "tags": [
          "edge",
          "all"
        ],
        "description": "Cancels a pending Edge reactivation request for the specified Edge (by `edgeId`).\n\nPrivileges required:\n\n`CREATE` `EDGE`",
        "operationId": "edge_edge_cancel_reactivation",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_edge_cancel_reactivation",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId",
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_edge_cancel_reactivation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/edgeProvision": {
      "post": {
        "summary": "Provision Edge",
        "description": "Provisions an Edge before activation.\n\nPrivileges required:\n\n`CREATE` `EDGE`",
        "operationId": "edge_edge_provision",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edge_edge_provision"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_edge_provision_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/edgeRequestReactivation": {
      "post": {
        "summary": "Prepare Edge for reactivation",
        "description": "Updates the activation state of the specified Edge to `REACTIVATION_PENDING`.\n\nPrivileges required:\n\n`CREATE` `EDGE`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_edge_request_reactivation",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_edge_request_reactivation",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId",
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_edge_request_reactivation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getClientVisibilityMode": {
      "post": {
        "summary": "Get an edge's client visibility mode",
        "description": "Retrieve an edge's client visibility mode.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "operationId": "edge_get_client_visibility_mode",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "forceEnterpriseContext": true,
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_get_client_visibility_mode",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "edge_get_client_visibility_mode_result",
              "type": "object",
              "properties": {
                "edgeClientVisibilityMode": {
                  "type": "string",
                  "enum": [
                    "MAC",
                    "IP"
                  ]
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getEdge": {
      "post": {
        "summary": "Get Edge",
        "tags": [
          "edge",
          "all"
        ],
        "description": "Gets the specified Edge with optional link, site, configuration, certificate, orenterprise details. Supports queries by Edge `id`, `deviceId`, `activationKey`, and `logicalId`.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "edge_get_edge",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_get_edge",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "logicalId": {
                  "type": "string"
                },
                "activationKey": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "recentLinks",
                      "links",
                      "serviceGroups",
                      "site",
                      "enterprise",
                      "configuration",
                      "configurationWithModules",
                      "selfHealing"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_get_edge_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getEdgeConfigurationModules": {
      "post": {
        "summary": "Get effective Edge configuration",
        "description": "Returns the \"composite\" configuration modules for the specified Edge (by `edgeId`), in precisely the same format that those modules are dispatched to the Edge.\nThis method operates by reconciling elements from the various profile- and edge-level modules that comprise an Edge's configuration stack (see `edge/getEdgeConfigurationStack`). For example, the \"effective\" set of firewall rules for a given segment is determined by concatenating the rule sets defined in the profile-level `firewall` module for that segment, and those defined in the Edge-specific `firewall` module for the same segment (if any).\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`READ` `ENTERPRISE_PROFILE`",
        "operationId": "edge_get_edge_configuration_modules",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/edge_get_edge_configuration_modules"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "edge_get_edge_configuration_modules_result",
              "type": "object",
              "properties": {
                "deviceSettings": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "schemaVersion": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ENTERPRISE",
                        "OPERATOR",
                        "GATEWAY"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/edgeDeviceSettingsData"
                    }
                  },
                  "required": [
                    "version",
                    "schemaVersion",
                    "type",
                    "data"
                  ]
                },
                "firewall": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "schemaVersion": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ENTERPRISE",
                        "OPERATOR",
                        "GATEWAY"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/firewall_data"
                    }
                  },
                  "required": [
                    "version",
                    "schemaVersion",
                    "type",
                    "data"
                  ]
                },
                "QOS": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "schemaVersion": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ENTERPRISE",
                        "OPERATOR",
                        "GATEWAY"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/QOSData"
                    }
                  },
                  "required": [
                    "version",
                    "schemaVersion",
                    "type",
                    "data"
                  ]
                },
                "WAN": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "schemaVersion": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ENTERPRISE",
                        "OPERATOR",
                        "GATEWAY"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/WAN_data"
                    }
                  },
                  "required": [
                    "version",
                    "schemaVersion",
                    "type",
                    "data"
                  ]
                },
                "controlPlane": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "schemaVersion": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ENTERPRISE",
                        "OPERATOR",
                        "GATEWAY"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/control_plane_data"
                    }
                  },
                  "required": [
                    "version",
                    "schemaVersion",
                    "type",
                    "data"
                  ]
                },
                "managementPlane": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "schemaVersion": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ENTERPRISE",
                        "OPERATOR",
                        "GATEWAY"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/management_plane_data"
                    }
                  },
                  "required": [
                    "version",
                    "schemaVersion",
                    "type",
                    "data"
                  ]
                },
                "imageUpdate": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "string"
                    },
                    "schemaVersion": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ENTERPRISE",
                        "OPERATOR",
                        "GATEWAY"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/image_update_data"
                    }
                  },
                  "required": [
                    "version",
                    "schemaVersion",
                    "type",
                    "data"
                  ]
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getEdgeConfigurationStack": {
      "post": {
        "summary": "Get Edge configuration stack",
        "description": "Gets the complete configuration profile (including all modules) of the specified Edge (by `edgeId`).\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`READ` `ENTERPRISE_PROFILE`",
        "operationId": "edge_get_edge_configuration_stack",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_get_edge_configuration_stack",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "edge_get_edge_configuration_stack_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_get_edge_configuration_stack_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/getEdgeSDWANPeers": {
      "post": {
        "summary": "Get an edge's SD-WAN peers",
        "description": "Gets an edge's SD-WAN peers that have established paths. Optionally, use a filter object to limit the number of SD-WAN peers returned. Additionally, specify a time interval with an interval object. If no end date is specified, then the default is the current date. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "edge_get_edge_sdwan_peers",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_get_edge_sdwan_peers",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "quickSearch": {
                  "$ref": "#/definitions/quick_search"
                },
                "filters": {
                  "$ref": "#/definitions/get_edge_sdwan_peers_filters"
                },
                "limit": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 2048
                },
                "sortBy": {
                  "$ref": "#/definitions/api_sorting"
                },
                "_count": {
                  "type": "boolean"
                },
                "_filterSpec": {
                  "type": "boolean"
                }
              },
              "required": [
                "edgeId"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "edge_get_edge_sdwan_peers_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_get_edge_sdwan_peers_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/setEdgeBastionState": {
      "post": {
        "summary": "Set the edge bastion state",
        "description": "Advance the edge bastion state machine for the specified edge (by `id`).\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_set_bastion_state",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_set_bastion_state",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "bastionState": {
                  "type": "string",
                  "enum": [
                    "STAGE_REQUESTED",
                    "UNSTAGE_REQUESTED",
                    "PROMOTION_REQUESTED"
                  ]
                }
              },
              "required": [
                "edgeId",
                "enterpriseId",
                "bastionState"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_set_edge_bastion_state_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/setEdgeEnterpriseConfiguration": {
      "post": {
        "summary": "Apply configuration profile to Edge",
        "tags": [
          "all",
          "edge"
        ],
        "description": "Sets the enterprise configuration for the specified Edge (by `edgeId`).\n\nPrivileges required:\n\n`UPDATE` `EDGE`\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "operationId": "edge_set_edge_enterprise_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            },
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_set_edge_enterprise_configuration",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "alias for edgeId"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                },
                "skipEdgeRoutingUpdates": {
                  "type": "boolean"
                }
              },
              "required": [
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_set_edge_enterprise_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/setEdgeHandOffGateways": {
      "post": {
        "summary": "Set Edge on premise hand-off gateway(s)",
        "description": "Sets the on-premise hand off gateways for the specified Edge (by `edgeId`). A primary and secondary gateway are defined. The primary is required, the secondary is optional. Moves all existing Edge-gateway hand-off relationships and replaces them with the specified primary and secondary gateways.\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "all",
          "edge"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "edge_set_edge_hand_off_gateways",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_set_edge_hand_off_gateways",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "gateways": {
                  "type": "object",
                  "properties": {
                    "primary": {
                      "type": "integer"
                    },
                    "primaryIpsecDetail": {
                      "$ref": "#/definitions/gateway_handoff_ipsec_gateway_detail"
                    },
                    "secondary": {
                      "type": "integer"
                    },
                    "secondaryIpsecDetail": {
                      "$ref": "#/definitions/gateway_handoff_ipsec_gateway_detail"
                    }
                  },
                  "required": [
                    "primary"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_set_edge_hand_off_gateways_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/setEdgeOperatorConfiguration": {
      "post": {
        "summary": "Apply an Operator Profile to an Edge",
        "tags": [
          "all",
          "edge"
        ],
        "description": "Sets the Operator Profile (Software Image) for the specified Edge. If the Edge is configured to inherit the Enterprise-default Operator Profile (as is the case for newly-provisioned devices, by default), this action overrides that relationship.\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "operationId": "edge_set_edge_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "conditionalAuthTypes": [
            {
              "authType": "ENTERPRISE_USER"
            }
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_set_edge_operator_configuration",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId",
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_set_edge_operator_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/unsetEdgeOperatorConfiguration": {
      "post": {
        "summary": "Unset an Edge's Operator Profile",
        "tags": [
          "all",
          "edge"
        ],
        "description": "Unsets the Operator Profile for the specified Edge, restoring the Enterprise-default Operator Profile.\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "operationId": "edge_unset_edge_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "conditionalAuthTypes": [
            {
              "authType": "ENTERPRISE_USER"
            }
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_unset_edge_operator_configuration",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId",
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/edge_unset_edge_operator_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/updateAnalyticsSettingsForEdges": {
      "post": {
        "summary": "Update Edge Analytics Settings",
        "description": "Update Edge Analytics Settings - analyticsMode, analyticsSelfHealing and isDynamicIP (by `id` or an array of `ids`)\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_update_analytics_settings_for_edges",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_update_analytics_settings_for_edges",
              "properties": {
                "edgeId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "configData": {
                  "type": "object",
                  "properties": {
                    "analyticsMode": {
                      "type": "string"
                    },
                    "analyticsSelfHealing": {
                      "type": "boolean"
                    },
                    "isDynamicIP": {
                      "type": "boolean"
                    }
                  }
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/update_analytics_settings_for_edges_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/updateEdgeAdminPassword": {
      "post": {
        "summary": "Update Edge local UI authentication credentials",
        "description": "Requests an update to the Edge's local UI authentication credentials. On success, returns a JSON object with the ID of the action queued, the status of which can be queried using the `edgeAction/getEdgeAction` API.\n\nPrivileges required:\n\n`UPDATE` `EDGE`\n\n`UPDATE` `ENTERPRISE_KEYS`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_update_edge_admin_password",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            },
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_update_edge_admin_password",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_update_edge_admin_password_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/updateEdgeAttributes": {
      "post": {
        "summary": "Update Edge attributes",
        "description": "Updates basic attributes (including Edge name, description, site information, and serial number) for the specified Edge. Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "edge",
          "all"
        ],
        "operationId": "edge_update_edge_attributes",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_update_edge_attributes",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "site": {
                      "$ref": "#/definitions/site"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "serialNumber": {
                      "type": "string"
                    },
                    "customInfo": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_update_edge_attributes_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/edge/updateEdgeCredentialsByConfiguration": {
      "post": {
        "summary": "Update Edge local UI credentials by configuration profile",
        "tags": [
          "edge",
          "all"
        ],
        "description": "Requests an update to the Edge-local UI authentication credentials for all Edges belonging to the specified configuration profile. On success, returns a JSON object containing a list of each of the action IDs queued.\n\nPrivileges required:\n\n`UPDATE` `EDGE`\n\n`UPDATE` `ENTERPRISE_KEYS`",
        "operationId": "edge_update_edge_credentials_by_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            },
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "edge_update_edge_credentials_by_configuration",
              "properties": {
                "configurationId": {
                  "type": "integer"
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "configurationId",
                "credentials"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_update_edge_credentials_by_configuration_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/addEnterpriseOperatorConfiguration": {
      "post": {
        "summary": "Adds an operator profile to multiple enterprises",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "add_enterprise_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [
            "ANY"
          ],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/add_enterprise_operator_configuration_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/add_enterprise_operator_configuration_response"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`"
      }
    },
    "/enterprise/assignEnterpriseOperatorConfigurations": {
      "post": {
        "summary": "Assigns one or more operator configurations to an enterprise",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_assign_enterprise_operator_configurations",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [
            "ANY"
          ],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_assign_enterprise_operator_configurations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationIds": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_assign_enterprise_operator_configurations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_assign_enterprise_operator_configurations_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`"
      }
    },
    "/enterprise/cloneEnterpriseV2": {
      "post": {
        "summary": "Clone an enterprise, owned by the operator or an MSP.",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_clone_enterprise_v2",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clone_enterprise_v2_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE`"
      }
    },
    "/enterprise/createApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Create Enterprise API Token",
        "description": "Creates an API Token according to the information specified . Lifetime should be in milliseconds. [ Token Lifetime should be less than or equal to 12 months] \n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_TOKEN`",
        "operationId": "enterprise_create_api_token",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_create_api_token",
              "properties": {
                "enterpriseUserId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "lifetimeMs": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseUserId",
                "name",
                "lifetimeMs"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/create_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/decodeEnterpriseKey": {
      "post": {
        "summary": "Decrypt an enterprise key",
        "tags": [
          "enterprise",
          "all"
        ],
        "description": "Decrypt an enterprise key\n\nPrivileges required:\n\n`READ` `ENTERPRISE_KEYS`",
        "operationId": "enterprise_decode_enterprise_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_decode_enterprise_key",
              "properties": {
                "key": {
                  "type": "string"
                }
              },
              "required": [
                "key"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_decode_enterprise_key_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterprise": {
      "post": {
        "summary": "Delete enterprise",
        "description": "Deletes the specified enterprise (by `id` or `enterpriseId`).\n\nPrivileges required:\n\n`DELETE` `ENTERPRISE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_delete_enterprise",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterpriseGatewayRecords": {
      "post": {
        "summary": "Delete gateway BGP neighbor record(s) for enterprise",
        "description": "Deletes the enterprise gateway BGP neighbor record(s) matching the specified gateway id(s) (`gatewayId`) and neighbor IP addresses (`neighborIp`).\n\nPrivileges required:\n\n`DELETE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_delete_enterprise_gateway_records",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise_gateway_records",
              "properties": {
                "records": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/enterprise_delete_enterprise_delete_enterprise_gateway_records_record"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_gateway_records_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Delete enterprise network allocation",
        "description": "Deletes the specified enterprise network allocation (by `id`).\n\nPrivileges required:\n\n`DELETE` `NETWORK_ALLOCATION`",
        "operationId": "enterprise_delete_enterprise_network_allocation",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise_network_allocation",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterpriseNetworkSegment": {
      "post": {
        "summary": "Delete an enterprise network segment",
        "description": "Delete an enterprise network segment, by id.\n\nPrivileges required:\n\n`DELETE` `NETWORK_ALLOCATION`",
        "operationId": "enterprise_delete_enterprise_network_segment",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise_network_segment",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/deletion_confirmation"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteEnterpriseService": {
      "post": {
        "summary": "Delete enterprise network service",
        "description": "Deletes the specified enterprise network service (by `id`).\n\nPrivileges required:\n\n`DELETE` `NETWORK_SERVICE`",
        "operationId": "enterprise_delete_enterprise_service",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_enterprise_service",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "logicalId": {
                  "type": "string"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_delete_enterprise_service_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/deleteObjectGroup": {
      "post": {
        "summary": "Delete an enterprise object group",
        "description": "Deletes an enterprise object group.\n\nPrivileges required:\n\n`DELETE` `OBJECT_GROUP`",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "OBJECT_GROUP"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_delete_object_group",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_delete_object_group",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/deletion_confirmation"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/disableClusterForEdgeHub": {
      "post": {
        "summary": "Unconfigure cluster as a VPN hub",
        "description": "Unconfigure cluster as a VPN hub for a profile.\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_disable_cluster_for_edge_hub",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_disable_cluster_for_edge_hub",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "`id` of the cluster enterprise service"
                },
                "configurationId": {
                  "type": "integer",
                  "description": "`id` of the profile on which the cluster should be unconfigured as a VPN hub"
                },
                "moduleId": {
                  "type": "integer",
                  "description": "`id` of the deviceSettings configuration module for the target profile"
                },
                "segmentObjectId": {
                  "type": "integer",
                  "description": "`id` of the target segment object, required if the profile is segment-based"
                }
              },
              "required": [
                "id",
                "configurationId",
                "moduleId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/enterprise_object_base"
                }
              ]
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/downloadApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Download/Generate API Token",
        "description": "Generates an API token (a JWT) which may be passed to the Orchestrator in an HTTP Authorization header on future API requests in order to authenticate the current user (e.g. Authorization: Token: <token>). An API token may be downloaded only once.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_TOKEN`",
        "operationId": "enterprise_download_api_token",
        "x-privileges": {
          "excludeAuthTypes": [
            "ANY"
          ],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_download_api_token",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_download_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/enableClusterForEdgeHub": {
      "post": {
        "summary": "Configure cluster as a VPN hub",
        "description": "Configure cluster as a VPN hub for a profile.\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_enable_cluster_for_edge_hub",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_enable_cluster_for_edge_hub",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "`id` of the cluster enterprise service"
                },
                "configurationId": {
                  "type": "integer",
                  "description": "`id` of the profile on which the cluster should be configured as a VPN hub"
                },
                "moduleId": {
                  "type": "integer",
                  "description": "`id` of the deviceSettings configuration module for the target profile"
                },
                "segmentObjectId": {
                  "type": "integer",
                  "description": "`id` of the target segment object, required if the profile is segment-based"
                }
              },
              "required": [
                "id",
                "configurationId",
                "moduleId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/enterprise_object_base"
                }
              ]
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/encodeEnterpriseKey": {
      "post": {
        "summary": "Encrypt an enterprise key",
        "tags": [
          "enterprise",
          "all"
        ],
        "description": "Encrypt an enterprise key\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_KEYS`",
        "operationId": "enterprise_encode_enterprise_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_KEYS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_encode_enterprise_key",
              "properties": {
                "key": {
                  "type": "string"
                }
              },
              "required": [
                "key"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_encode_enterprise_key_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/generateNsdViaEdgeServiceConfiguration": {
      "post": {
        "summary": "Get Enterprise Default Edge Direct Provider Service Data",
        "description": "Get default service data for the backend API user\n\nPrivileges required:\n\n`CREATE` `NETWORK_SERVICE`",
        "operationId": "enterprise_generate_nsd_via_edge_service_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_generate_nsd_via_edge_service_configuration",
              "type": "object",
              "properties": {
                "provider": {
                  "type": "string",
                  "enum": [
                    "genericIKEv2Router",
                    "genericIKEv1Router",
                    "microsoftAzureVirtualWan",
                    "Zscaler"
                  ]
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "provider"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/nvs_from_edge_service_provider_data"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getAnalyticsConfiguration": {
      "post": {
        "summary": "Get enterprise analytics configuration details",
        "description": "Gets the analytics configuration of an enterprise\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ENTERPRISE_USER",
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_analytics_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_analytics_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_analytics_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getApiTokens": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Get API Tokens of a network, enterprise or enterprise Proxy",
        "description": "Returns tokens based on parameters\n\nPrivileges required:\n\n`READ` `ENTERPRISE_TOKEN`",
        "operationId": "enterprise_get_api_tokens",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_api_tokens",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_get_api_tokens_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterprise": {
      "post": {
        "summary": "Get enterprise",
        "description": "Gets data for the specified enterprise with optional proxy (partner) detail.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_get_enterprise",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_get_enterprise",
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "enterpriseProxy"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAddresses": {
      "post": {
        "summary": "Get enterprise IP address(es)",
        "description": "Gets all public IP address information for the management and control entities associated with the specified enterprise, including Orchestrator(s), Gateway(s), and datacenter(s).\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "operationId": "enterprise_get_enterprise_addresses",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_addresses",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_addresses_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_addresses_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAlertConfigurations": {
      "post": {
        "summary": "Get enterprise alert configuration(s)",
        "description": "Gets all alert configuration(s) for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_alert_configurations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_alert_configurations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_alert_configurations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_alert_configurations_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAlerts": {
      "post": {
        "summary": "Get triggered enterprise alerts",
        "description": "Gets past triggered alerts for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_ALERT`",
        "operationId": "enterprise_get_enterprise_alerts",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_alerts",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 512
                    }
                  }
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "notifications"
                    ]
                  }
                }
              },
              "example": {
                "enterpriseId": 4,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                },
                "with": [
                  "notifications"
                ]
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_alerts_result",
              "type": "object",
              "properties": {
                "metaData": {
                  "$ref": "#/definitions/list_metadata"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/enterprise_get_enterprise_alerts_result_item"
                  }
                }
              },
              "required": [
                "metaData",
                "data"
              ]
            },
            "examples": {
              "application/json": {
                "metaData": {
                  "limit": 512,
                  "more": false
                },
                "data": [
                  {
                    "id": 1060996,
                    "created": "2019-01-01T00:00:00.000Z",
                    "triggerTime": "2019-01-01T00:00:00.000Z",
                    "enterpriseAlertConfigurationId": 34,
                    "enterpriseId": 4,
                    "edgeId": 512,
                    "edgeName": "Palo Alto Edge",
                    "linkId": null,
                    "linkName": null,
                    "enterpriseObjectId": null,
                    "enterpriseObjectName": null,
                    "name": "EDGE_DOWN",
                    "type": "EDGE_DOWN",
                    "state": "CLOSED",
                    "stateSetTime": "2019-01-01T00:03:00.000Z",
                    "lastContact": "2019-01-01T00:00:00.000Z",
                    "firstNotificationSeconds": 180,
                    "maxNotifications": 1,
                    "notificationIntervalSeconds": 300,
                    "resetIntervalSeconds": 3600,
                    "comment": "Edge returned to CONNECTED state",
                    "nextNotificationTime": "2019-01-01T00:05:00.000Z",
                    "remainingNotifications": 1,
                    "timezone": "America/Los_Angeles",
                    "locale": "en-US",
                    "modified": "2019-01-01T00:03:00.000Z",
                    "notifications": [
                      {
                        "enterpriseAlertTriggerId": 1060996,
                        "smsList": [],
                        "emailList": [
                          "user@vmware.com"
                        ],
                        "enterpriseUserList": [],
                        "mobileList": [],
                        "snmpList": [],
                        "webhookList": [],
                        "notificationTime": "2019-01-01T00:03:00.000Z"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseAllAlertsRecipients": {
      "post": {
        "summary": "Get recipients receiving all enterprise alerts",
        "description": "Gets all recipients configured to receive all alerts for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_all_alert_recipients",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_all_alert_recipients",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_all_alert_recipients_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseCapabilities": {
      "post": {
        "summary": "Get enterprise capabilities",
        "description": "Gets all enterprise capabilities (e.g. BGP, COS mapping, PKI, etc.) currently enabled/disabled for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_capabilities",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_capabilities",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_capabilities_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseConfigurations": {
      "post": {
        "summary": "Get enterprise configuration profiles",
        "description": "Gets all configuration profiles, with optional Edge and/or module details, for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "operationId": "enterprise_get_enterprise_configurations",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_configurations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationType": {
                  "type": "string",
                  "enum": [
                    "NETWORK_BASED",
                    "SEGMENT_BASED"
                  ]
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "modules",
                      "edgeCount",
                      "refs",
                      "deviceSettings"
                    ]
                  }
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_configurations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_configurations_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseDefaultOperatorConfiguration": {
      "post": {
        "summary": "Gets the default operator configration for an enterprise",
        "description": "Gets the default operator configration for an enterprise\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "enterprise_get_default_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_default_operator_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/model_configuration"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseDistributedCostCalculation": {
      "post": {
        "summary": "Get distributed cost calculation property for an enterprise",
        "description": "Gets distributed cost calculation property for specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_distributed_cost_calculation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_distributed_cost_calculation",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_property_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseEdges": {
      "post": {
        "summary": "Get enterprise Edges",
        "tags": [
          "enterprise",
          "all"
        ],
        "description": "Gets all Edges associated with the specified enterprise, including optional site, link, and configuration details.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "enterprise_get_enterprise_edges",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_edges",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "site",
                      "links",
                      "recentLinks",
                      "configuration",
                      "cloudServices",
                      "cloudServiceSiteStatus",
                      "nvsFromEdge",
                      "vnfs",
                      "certificates",
                      "licenses"
                    ]
                  }
                },
                "limit": {
                  "type": "integer",
                  "minimum": 0
                },
                "nextPageLink": {
                  "type": "string"
                },
                "prevPageLink": {
                  "type": "string"
                },
                "_count": {
                  "type": "boolean"
                },
                "quickSearch": {
                  "$ref": "#/definitions/quick_search"
                },
                "filters": {
                  "$ref": "#/definitions/enterprise_get_enterprise_edges_filters"
                },
                "_filterSpec": {
                  "type": "boolean"
                },
                "fieldsNeeded": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_edges_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_edges_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseGatewayHandoff": {
      "post": {
        "summary": "Get enterprise gateway handoff configuration",
        "description": "Gets the gateway handoff configuration for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_gateway_handoff",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_get_enterprise_gateway_handoff",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_gateway_handoff_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseMaximumSegments": {
      "post": {
        "summary": "Get enterprise maximum segment",
        "description": "Gets maximum segments for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_maximum_segments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_maximum_segments",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_property_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Get enterprise network allocation",
        "description": "Gets the specified network allocation object (by `id`) for the specified enterprise.\n\nPrivileges required:\n\n`READ` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_network_allocation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_network_allocation",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "profileCount"
                    ]
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseNetworkAllocations": {
      "post": {
        "summary": "Get enterprise network allocations",
        "description": "Gets all network allocations for the specified enterprise.\n\nPrivileges required:\n\n`READ` `NETWORK_ALLOCATION`",
        "operationId": "enterprise_get_enterprise_network_allocations",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_network_allocations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "profileCount"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_network_allocations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_network_allocations_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseNetworkSegments": {
      "post": {
        "summary": "Get all network segment objects defined on an enterprise",
        "description": "Retrieve a list of all of the network segments defined forthe given enterprise.\n\nPrivileges required:\n\n`READ` `NETWORK_ALLOCATION`",
        "operationId": "enterprise_get_enterprise_network_segments",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "tags": [
          "all",
          "enterprise"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_network_segments",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "profileCount",
                      "edgeUsage",
                      "configuration",
                      "handoffUsage",
                      "mpgUsage"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_network_segments_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_network_segments_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseOperatorConfiguration": {
      "post": {
        "summary": "Get the Operator Profile assigned to an Enterprise",
        "description": "Fetch the Operator Profile assigned to the target Enterprise, with optional module details.\n\nPrivileges required:\n\n`READ` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "operationId": "enterprise_get_enterprise_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_operator_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "string",
                  "enum": [
                    "modules"
                  ]
                },
                "noData": {
                  "type": "boolean",
                  "description": "Option to selectively omit configuration module `data` from the response (applicable only when the `with: \"modules\"` option is specified)"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_operator_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseProperty": {
      "post": {
        "summary": "Get enterprise property",
        "description": "Get a enterprise property by object id or other attribute.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "operationId": "enterprise_get_enterprise_property",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_property",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseRateLimits": {
      "post": {
        "summary": "Get enterprise rate limits",
        "description": "Gets rate limits for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_rate_limits",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_rate_limits",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_property_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseRouteConfiguration": {
      "post": {
        "summary": "Get enterprise global routing preferences",
        "description": "Gets all global routing preferences for the specified enterprise, incuding enterprise route advertisement, routing preferences, OSPF, and BGP advertisement policy.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_route_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_get_enterprise_route_configuration",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_route_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseRouteTable": {
      "post": {
        "summary": "Get enterprise route table",
        "description": "Gets the composite enterprise route table, optionally scoped by profile(s). The returned routes include static routes, directly connected routes, and learned routes.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_route_table",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_route_table",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "profiles": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "default": 0
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "subnet",
                              "segmentId",
                              "preferredExitName",
                              "routeType",
                              "routeState",
                              "routeProtocol",
                              "ipVersion"
                            ]
                          },
                          "op": {
                            "type": "string",
                            "enum": [
                              "is",
                              "is not",
                              "isNot",
                              "isNull",
                              "isNotNull",
                              "startsWith",
                              "notStartsWith",
                              "endsWith",
                              "notEndsWith",
                              "contains",
                              "notContains",
                              "greaterOrEquals",
                              "lesserOrEquals",
                              "in",
                              "notIn",
                              "subnetContainsAddress"
                            ]
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "field",
                          "op",
                          "values"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprise_route_table_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseServices": {
      "post": {
        "summary": "Get enterprise network services",
        "description": "Gets all network service JSON objects defined for the specified enterprise.\n\nPrivileges required:\n\n`READ` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_get_enterprise_services",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_services",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "profileCount",
                      "edgeUsage",
                      "configuration",
                      "groupCount",
                      "edgeQOSUsage",
                      "saUsage"
                    ]
                  }
                },
                "name": {
                  "type": "string"
                },
                "includePartnerGateways": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_get_enterprise_services_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_services_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseSpecificOperatorConfigurations": {
      "post": {
        "summary": "Gets the enterprise assigned operator configurations",
        "description": "Gets the enterprise assigned operator configurations\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "enterprise_get_enterprise_specific_operator_configs",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_specific_operator_configs",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "withModules": {
                  "type": "boolean"
                },
                "withEdgeCount": {
                  "type": "boolean"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "title": "enterprise_get_enterprise_specific_operator_configs",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/model_configuration"
                  },
                  {
                    "properties": {
                      "configurationAssociationId": {
                        "type": "integer"
                      },
                      "isTemplate": {
                        "type": "integer"
                      }
                    }
                  }
                ]
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseUseNSDPolicy": {
      "post": {
        "summary": "Get Use NSD policy property of an enterprise",
        "description": "To determine whether NSD can be considered in ofc routing.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_get_use_nsd_policy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_use_nsd_policy",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_use_nsd_policy_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseUsers": {
      "post": {
        "tags": [
          "userMaintenance",
          "all"
        ],
        "summary": "Get enterprise users",
        "description": "Gets all enterprise users for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `ENTERPRISE_USER`",
        "operationId": "enterprise_get_enterprise_users",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprise_users",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_get_enterprise_users_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterprisesMissingGateway": {
      "post": {
        "summary": "Gets the list of Enterprises with missing Gateway Type",
        "description": "Gets the list of Enterprises with missing Gateway Type\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`\n\n`READ` `GATEWAY`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "operationId": "enterprise_get_enterprises_missinggateway",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_enterprises_missinggateway",
              "properties": {
                "gatewayType": {
                  "type": "string",
                  "enum": [
                    "SUPER_ALT"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_delete_edge_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterprisesWithProperty": {
      "post": {
        "summary": "Gets all enterprises having a particular property and a value",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_get_enterprises_with_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [
            "ANY"
          ],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprises_with_property_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprises_with_property_response"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`READ` `ENTERPRISE`"
      }
    },
    "/enterprise/getNSDConfiguration": {
      "post": {
        "summary": "Update NSD BGP configuration for the specified enterprise",
        "description": "Update NSD BGP configuration for the specified enterprise\n\nPrivileges required:\n\n`UPDATE` `NETWORK_SERVICE`",
        "operationId": "enterprise_update_nsd_bgp_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_nsd_bgp_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/upstream_api_response"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getObjectGroups": {
      "post": {
        "summary": "Get enterprise object group(s)",
        "description": "Get enterprise object group(s).\n\nPrivileges required:\n\n`READ` `OBJECT_GROUP`",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OBJECT_GROUP"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_get_object_groups",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_get_object_groups",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "address_group",
                    "port_group"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_get_object_group_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/object_group"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterprise": {
      "post": {
        "summary": "Create enterprise",
        "description": "Creates a new enterprise, which is owned by the operator.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseEdgeCluster": {
      "post": {
        "summary": "Insert enterprise edge cluster ",
        "description": "Insert enterprise edge cluster\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise_edge_cluster",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_insert_enterprise_edge_cluster",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "description": "`name` of the edge cluster"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "edgeHubCluster",
                    "edgeBranchCluster"
                  ],
                  "default": "edgeHubCluster"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "autoRebalance": {
                      "type": "boolean"
                    }
                  }
                },
                "description": {
                  "type": "string"
                },
                "edges": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/enterprise_object_base"
                }
              ]
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Create enterprise network allocation",
        "description": "Creates a new network allocation for the specified enterprise.\n\nPrivileges required:\n\n`CREATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise_network_allocation",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_enterprise_network_allocation",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "spaces": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/enterprise_network_space"
                      }
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseNetworkSegment": {
      "post": {
        "summary": "Create enterprise network segment",
        "description": "Creates a new network segment for the specified enterprise.\n\nPrivileges required:\n\n`CREATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise_network_segment",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_enterprise_network_segment",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "REGULAR",
                    "CDE",
                    "PRIVATE"
                  ]
                },
                "data": {
                  "$ref": "#/definitions/network_segment_data"
                }
              },
              "required": [
                "name",
                "type",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_network_segment_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseService": {
      "post": {
        "summary": "Create enterprise service",
        "description": "Creates a new enterprise service for the specified enterprise.\n\nPrivileges required:\n\n`CREATE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_insert_enterprise_service",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_enterprise_service",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "data": {
                  "type": "object"
                },
                "edgeId": {
                  "type": "integer"
                },
                "parentGroupId": {
                  "type": "integer"
                }
              },
              "required": [
                "type",
                "name",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_service_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertEnterpriseUser": {
      "post": {
        "summary": "Create enterprise user",
        "description": "Creates a new enterprise user.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_USER`",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "tags": [
          "userMaintenance",
          "all"
        ],
        "operationId": "enterprise_insert_enterprise_user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/new_enterprise_user"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_insert_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertObjectGroup": {
      "post": {
        "summary": "Create enterprise object group",
        "description": "Creates a new enterprise object group.\n\nPrivileges required:\n\n`CREATE` `OBJECT_GROUP`",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "OBJECT_GROUP"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_insert_object_group",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_object_group",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "address_group",
                    "port_group"
                  ],
                  "default": "port_group"
                },
                "description": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/definitions/object_group_data"
                }
              },
              "required": [
                "name",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/insertion_confirmation"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateAnalyticsConfiguration": {
      "post": {
        "summary": "Inserts/updates analytics configuration of an enterprise",
        "description": "Inserts/updates analytics configuration of an enterprise\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE`\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE"
            },
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_analytics_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_or_update_analytics_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "analyticsCapability": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "APPLICATION_BRANCH"
                  ]
                },
                "analyticsEdgeLimit": {
                  "type": "integer"
                },
                "analyticsSelfHealing": {
                  "type": "boolean"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/insertion_confirmation"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseAlertConfigurations": {
      "post": {
        "summary": "Create, update, or delete enterprise alert configurations",
        "description": "Creates, updates, or deletes alert configurations for the specified enterprise. Returns the array of alert configurations submitted, with ids added for the entries that have been successfully created. If an entry is not successfully created or updated, an `error` property is included in the response.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_enterprise_alert_configurations",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_or_update_enterprise_alert_configurations",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseAlertConfigurations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/enterprise_alert_configuration"
                  }
                }
              },
              "required": [
                "enterpriseAlertConfigurations"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_alert_configurations_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseCapability": {
      "post": {
        "summary": "Create or update enterprise capability",
        "description": "Creates or updates the specified capability (`name`, `value`) for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_enterprise_capability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_or_update_enterprise_capability",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "enableFwLogs",
                    "enableStatefulFirewall",
                    "enableServiceRateLimiting",
                    "enableCosMapping",
                    "enableSegmentation",
                    "enableNetworks",
                    "enableEnterpriseAuth",
                    "enablePremium",
                    "enableRoleCustomization",
                    "edgeVnfs.enable",
                    "edgeVnfs.securityVnf.paloAlto",
                    "edgeVnfs.securityVnf.checkPoint",
                    "edgeVnfs.securityVnf.fortinet",
                    "edgeVnfs.securityVnf.centOS",
                    "enableSecureEdgeAccess"
                  ]
                },
                "value": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_capability_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseGatewayHandoff": {
      "post": {
        "summary": "Create or update enterprise gateway handoff configuration",
        "description": "Creates or updates a gateway handoff configuration for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`\n\n`UPDATE` `GATEWAY`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            },
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_enterprise_gateway_handoff",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_gateway_handoff"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_gateway_handoff_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseProperty": {
      "post": {
        "summary": "Insert or update an enterprise property",
        "description": "Insert a enterprise property. If property with the given name already exists, the property will be updated.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "operationId": "enterprise_insert_or_update_enterprise_property",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_insert_or_update_enterprise_property",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "dataType": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "NUMBER",
                    "BOOLEAN",
                    "JSON",
                    "DATE",
                    "DATETIME"
                  ]
                },
                "isPassword": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "enterpriseId",
                "name",
                "value"
              ],
              "example": {
                "enterpriseId": 1532,
                "name": "vco.enterprise.authentication.twoFactor.enable",
                "dataType": "BOOLEAN",
                "value": "true"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseRateLimits": {
      "post": {
        "summary": "Set enterprise rate limits",
        "description": "Set rate limits for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_insert_or_update_enterprise_specific_rate_limits",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_insert_or_update_enterprise_specific_rate_limits",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/insert_or_update_rate_limit_request_value"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_insert_or_update_enterprise_specific_rate_limits_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateSecureEdgeAccessMode": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Insert or Update  Secure Edge Access Mode",
        "description": "Update ssh key in firewall module while modifying secure Edge Access Mode\n\nPrivileges required:\n\n`MODIFY_EDGE_ACCESS_MODE` `undefined`",
        "operationId": "secure_edge_access_mode",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "MODIFY_EDGE_ACCESS_MODE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_or_update_secure_edge_access_mode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/insert_or_update_secure_edge_access_mode_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/isEnterpriseUpgradedLaterThan": {
      "post": {
        "summary": "Checks an enterprise is upgraded to version later than specified version",
        "description": "Checks an enterprise is upgraded to version later than specified version.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_is_enterprise_upgraded_later_than",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_is_enterprise_upgraded_later_than",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "toVersion": {
                  "type": "string"
                },
                "checkEdges": {
                  "type": "boolean"
                },
                "checkGateways": {
                  "type": "boolean"
                }
              },
              "required": [
                "toVersion"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "object",
              "properties": {
                "upgraded": {
                  "type": "boolean"
                },
                "upgradedOnlineOnly": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/recalcRefreshRoutesVersion": {
      "post": {
        "summary": "Set refresh routes version to latest",
        "description": "Sets refresh routes version to latest for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_set_enterprise_refresh_routes_version",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_set_enterprise_refresh_routes_version",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_set_enterprise_refresh_routes_version_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/refreshApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Refresh an API Token",
        "description": "Extend the validity of a token. \n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_TOKEN`",
        "operationId": "enterprise_refresh_api_token",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_refresh_api_token",
              "properties": {
                "apiToken": {
                  "type": "string"
                }
              },
              "required": [
                "apiToken"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_download_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/revokeApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Revoke an API Token",
        "description": "Sets the token's state to revoked. \n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_TOKEN`",
        "operationId": "enterprise_revoke_api_token",
        "x-privileges": {
          "excludeAuthTypes": [
            "ANY"
          ],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_revoke_api_token",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_revoke_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/setDefaultEnterpriseOperatorConfiguration": {
      "post": {
        "summary": "Makes a particular operator profile, the default for an enterprise",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "set_default_enterprise_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ENTERPRISE_USER",
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [
            "ANY"
          ],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "set_default_enterprise_operator_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "set_default_enterprise_operator_configuration_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/set_default_enterprise_operator_configuration_result"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`"
      }
    },
    "/enterprise/setEnterpriseAllAlertsRecipients": {
      "post": {
        "summary": "Specify recipients for all enterprise alerts",
        "description": "Specifies the recipients who should receive all alerts for the specified enterprise.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_ALERT`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_ALERT"
            }
          ]
        },
        "operationId": "enterprise_set_enterprise_all_alert_recipients",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_set_enterprise_all_alert_recipients",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseUsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "enterpriseUserId": {
                        "type": "integer"
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "smsEnabled": {
                        "type": "boolean"
                      },
                      "emailEnabled": {
                        "type": "boolean"
                      },
                      "mobileEnabled": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                "smsEnabled": {
                  "type": "boolean"
                },
                "smsList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "mobilePhone": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                },
                "emailEnabled": {
                  "type": "boolean"
                },
                "emailList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "mobileEnabled": {
                  "type": "boolean"
                },
                "mobileList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "webhookEnabled": {
                  "type": "boolean"
                },
                "webhookList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "expectedResponseCode": {
                        "type": "integer"
                      },
                      "template": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_set_enterprise_all_alert_recipients_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/setEnterpriseBastionState": {
      "post": {
        "summary": "Set the enterprise bastion state",
        "description": "Advance the enterprise bastion state machine for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_set_bastion_state",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_set_bastion_state",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                },
                "bastionState": {
                  "type": "string",
                  "enum": [
                    "STAGE_REQUESTED",
                    "UNSTAGE_REQUESTED"
                  ]
                }
              },
              "required": [
                "enterpriseId",
                "bastionState"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_set_enterprise_bastion_state_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/setEnterpriseDistributedCostCalculation": {
      "post": {
        "summary": "Set distributed cost calculation for an enterprise.",
        "description": "Set distributed cost calculation for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_set_enterprise_distributed_cost_calculation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_set_enterprise_distributed_cost_calculation",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_set_enterprise_distributed_cost_calculation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/setEnterpriseMaximumSegments": {
      "post": {
        "summary": "Set enterprise maximum segments",
        "description": "Set maximum segments for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_set_enterprise_maximum_segments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_set_enterprise_maximum_segments",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_set_enterprise_maximum_segments_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/setEnterpriseOperatorConfiguration": {
      "post": {
        "summary": "Apply operator profile to given enterprise",
        "tags": [
          "all",
          "enterprise"
        ],
        "description": "Sets the operator configuration for the specified enterprise (by `enterpriseId`). This overrides any network-assigned operator configuration and the network default operator configuration.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "operationId": "enterprise_set_enterprise_operator_configuration",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_set_enterprise_operator_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "configurationId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseId",
                "configurationId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_set_enterprise_operator_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/setEnterpriseUseNSDPolicy": {
      "post": {
        "summary": "Set NSDBuckets flag for an enterprise.",
        "description": "Set NSDBuckets flag for the specified enterprise (by `enterpriseId`).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_set_nsd_buckets_flag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_set_nsd_buckets_property",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_set_nsd_buckets_property_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEdgeImageManagement": {
      "post": {
        "summary": "Updates manage software image feature for a customer",
        "description": "Enables/disables manage software image feature for a customer\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "enterprise_update_edge_image_management",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_edge_image_management",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeImageManagement": {
                  "type": "boolean"
                }
              },
              "required": [
                "enterpriseId",
                "edgeImageManagement"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "enterprise_update_edge_image_management_multiple",
              "properties": {
                "rowsAffected": {
                  "type": "integer"
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEdgeImageManagementForEnterprises": {
      "post": {
        "summary": "Updates manage software image feature for multiple customers",
        "description": "Enables/disables manage software image feature for multiple customers\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "enterprise_update_edge_image_management_multiple",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_edge_image_management_multiple",
              "properties": {
                "enterpriseIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "minItems": 1
                },
                "edgeImageManagement": {
                  "type": "boolean"
                }
              },
              "required": [
                "enterpriseIds",
                "edgeImageManagement"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "title": "enterprise_update_edge_image_management_multiple",
              "items": {
                "type": "object",
                "properties": {
                  "enterpriseId": {
                    "type": "integer"
                  },
                  "rowsAffected": {
                    "type": "integer"
                  }
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterprise": {
      "post": {
        "summary": "Update enterprise",
        "description": "Updates the specified enterprise (by `enterpriseId` or `name`). Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_update_enterprise",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_update_enterprise",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "_update": {
                  "$ref": "#/definitions/enterprise_update_enterprise"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseEdgeCluster": {
      "post": {
        "summary": "Update enterprise edge cluster ",
        "description": "Update enterprise edge cluster\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_update_enterprise_edge_cluster",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_update_enterprise_edge_cluster",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "Enterprise edge cluster id"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "edgeHubCluster",
                    "edgeBranchCluster"
                  ]
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "`name` of the edge cluster"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "autoRebalance": {
                          "type": "boolean"
                        }
                      }
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "addEdges": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "deleteEdges": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/enterprise_object_base"
                }
              ]
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseNetworkAllocation": {
      "post": {
        "summary": "Update enterprise network allocation",
        "description": "Updates the specified enterprise network allocation (by `id`). Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_network_allocation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_network_allocation",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "enterpriseId": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "spaces": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/enterprise_network_space"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_network_allocation_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseNetworkSegment": {
      "post": {
        "summary": "Update an enterprise network segment",
        "description": "Update an enterprise network segment.\n\nPrivileges required:\n\n`UPDATE` `NETWORK_ALLOCATION`",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_update_enterprise_network_segment",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK_ALLOCATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_network_segment",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "REGULAR",
                        "CDE",
                        "PRIVATE"
                      ]
                    },
                    "data": {
                      "$ref": "#/definitions/network_segment_data"
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_network_segment_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseRoute": {
      "post": {
        "summary": "Update preferred VPN exits for a route",
        "description": "Updates the specified enterprise route, set advertisement, and cost values. Required parameters include the original route, as returned by `enterprise/getEnterpriseRouteTable`, and the updated route with modified advertisement and route preference ordering.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_route",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_route",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "action": {
                  "type": "string"
                },
                "original": {
                  "$ref": "#/definitions/enterprise_route_collection"
                },
                "updated": {
                  "$ref": "#/definitions/enterprise_route_collection"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_route_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseRouteConfiguration": {
      "post": {
        "summary": "Update enterprise global routing preferences",
        "description": "Updates the specified enterprise global routing preferences as specified by configuration `id` or logicalId.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_route_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_route_configuration",
              "required": [
                "data"
              ],
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "edge",
                    "hub",
                    "partnerGateway",
                    "routingPreference",
                    "v6Detail"
                  ],
                  "properties": {
                    "nsdEdge": {
                      "type": "object",
                      "required": [
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseInternal",
                            "advertiseExternal",
                            "advertiseNeighborTags"
                          ],
                          "properties": {
                            "advertiseInternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseNeighborTags": {
                              "type": "object",
                              "required": [
                                "UPLINK"
                              ],
                              "properties": {
                                "UPLINK": {
                                  "type": "boolean",
                                  "default": false
                                }
                              }
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "nsdGateway": {
                      "type": "object",
                      "required": [
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseInternal",
                            "advertiseExternal"
                          ],
                          "properties": {
                            "advertiseInternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "edge": {
                      "type": "object",
                      "required": [
                        "ospf",
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "ospf": {
                          "type": "object",
                          "required": [
                            "advertiseExternal",
                            "advertiseInterArea",
                            "advertiseIntraArea"
                          ],
                          "properties": {
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseInterArea": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseIntraArea": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        },
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseInternal",
                            "advertiseExternal",
                            "advertiseNeighborTags"
                          ],
                          "properties": {
                            "advertiseInternal": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseNeighborTags": {
                              "type": "object",
                              "required": [
                                "UPLINK"
                              ],
                              "properties": {
                                "UPLINK": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic",
                            "advertiseConnected"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseConnected": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "hub": {
                      "type": "object",
                      "required": [
                        "ospf",
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "ospf": {
                          "type": "object",
                          "required": [
                            "advertiseExternal",
                            "advertiseInterArea",
                            "advertiseIntraArea"
                          ],
                          "properties": {
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseInterArea": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseIntraArea": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        },
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseInternal",
                            "advertiseExternal",
                            "advertiseNeighborTags"
                          ],
                          "properties": {
                            "advertiseInternal": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": false
                            },
                            "advertiseNeighborTags": {
                              "type": "object",
                              "required": [
                                "UPLINK"
                              ],
                              "properties": {
                                "UPLINK": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic",
                            "advertiseConnected"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            },
                            "advertiseConnected": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "partnerGateway": {
                      "type": "object",
                      "required": [
                        "bgp",
                        "assigned"
                      ],
                      "properties": {
                        "bgp": {
                          "type": "object",
                          "required": [
                            "advertiseExternal"
                          ],
                          "properties": {
                            "advertiseExternal": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        },
                        "assigned": {
                          "type": "object",
                          "required": [
                            "advertiseStatic"
                          ],
                          "properties": {
                            "advertiseStatic": {
                              "type": "boolean",
                              "default": true
                            }
                          }
                        }
                      }
                    },
                    "routingPreference": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "entity",
                          "allow"
                        ],
                        "properties": {
                          "entity": {
                            "type": "string",
                            "enum": [
                              "NSD",
                              "EDGE",
                              "HUB",
                              "ROUTER",
                              "PARTNER"
                            ]
                          },
                          "allow": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "preferenceBuckets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "entity": {
                            "type": "string"
                          },
                          "exitType": {
                            "type": "string"
                          },
                          "protocol": {
                            "type": "string"
                          },
                          "routeType": {
                            "type": "string"
                          },
                          "neighborTag": {
                            "type": "string"
                          },
                          "preference": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "v6Detail": {
                      "type": "object",
                      "required": [
                        "edge",
                        "hub",
                        "partnerGateway",
                        "routingPreference"
                      ],
                      "properties": {
                        "nsdEdge": {
                          "type": "object",
                          "required": [
                            "bgp",
                            "assigned"
                          ],
                          "properties": {
                            "bgp": {
                              "type": "object",
                              "required": [
                                "advertiseInternal",
                                "advertiseExternal",
                                "advertiseNeighborTags"
                              ],
                              "properties": {
                                "advertiseInternal": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "advertiseExternal": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "advertiseNeighborTags": {
                                  "type": "object",
                                  "required": [
                                    "UPLINK"
                                  ],
                                  "properties": {
                                    "UPLINK": {
                                      "type": "boolean",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            },
                            "assigned": {
                              "type": "object",
                              "required": [
                                "advertiseStatic"
                              ],
                              "properties": {
                                "advertiseStatic": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        "nsdGateway": {
                          "type": "object",
                          "required": [
                            "bgp",
                            "assigned"
                          ],
                          "properties": {
                            "bgp": {
                              "type": "object",
                              "required": [
                                "advertiseInternal",
                                "advertiseExternal"
                              ],
                              "properties": {
                                "advertiseInternal": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "advertiseExternal": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "assigned": {
                              "type": "object",
                              "required": [
                                "advertiseStatic"
                              ],
                              "properties": {
                                "advertiseStatic": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        "edge": {
                          "type": "object",
                          "required": [
                            "ospf",
                            "bgp",
                            "assigned"
                          ],
                          "properties": {
                            "ospf": {
                              "type": "object",
                              "required": [
                                "advertiseExternal",
                                "advertiseInterArea",
                                "advertiseIntraArea"
                              ],
                              "properties": {
                                "advertiseExternal": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "advertiseInterArea": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "advertiseIntraArea": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "bgp": {
                              "type": "object",
                              "required": [
                                "advertiseInternal",
                                "advertiseExternal",
                                "advertiseNeighborTags"
                              ],
                              "properties": {
                                "advertiseInternal": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "advertiseExternal": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "advertiseNeighborTags": {
                                  "type": "object",
                                  "required": [
                                    "UPLINK"
                                  ],
                                  "properties": {
                                    "UPLINK": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "assigned": {
                              "type": "object",
                              "required": [
                                "advertiseStatic",
                                "advertiseConnected"
                              ],
                              "properties": {
                                "advertiseStatic": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "advertiseConnected": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        "hub": {
                          "type": "object",
                          "required": [
                            "ospf",
                            "bgp",
                            "assigned"
                          ],
                          "properties": {
                            "ospf": {
                              "type": "object",
                              "required": [
                                "advertiseExternal",
                                "advertiseInterArea",
                                "advertiseIntraArea"
                              ],
                              "properties": {
                                "advertiseExternal": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "advertiseInterArea": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "advertiseIntraArea": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "bgp": {
                              "type": "object",
                              "required": [
                                "advertiseInternal",
                                "advertiseExternal",
                                "advertiseNeighborTags"
                              ],
                              "properties": {
                                "advertiseInternal": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "advertiseExternal": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "advertiseNeighborTags": {
                                  "type": "object",
                                  "required": [
                                    "UPLINK"
                                  ],
                                  "properties": {
                                    "UPLINK": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "assigned": {
                              "type": "object",
                              "required": [
                                "advertiseStatic",
                                "advertiseConnected"
                              ],
                              "properties": {
                                "advertiseStatic": {
                                  "type": "boolean",
                                  "default": true
                                },
                                "advertiseConnected": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        "partnerGateway": {
                          "type": "object",
                          "required": [
                            "bgp",
                            "assigned"
                          ],
                          "properties": {
                            "bgp": {
                              "type": "object",
                              "required": [
                                "advertiseExternal"
                              ],
                              "properties": {
                                "advertiseExternal": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "assigned": {
                              "type": "object",
                              "required": [
                                "advertiseStatic"
                              ],
                              "properties": {
                                "advertiseStatic": {
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            }
                          }
                        },
                        "routingPreference": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "entity",
                              "allow"
                            ],
                            "properties": {
                              "entity": {
                                "type": "string",
                                "enum": [
                                  "NSD",
                                  "EDGE",
                                  "HUB",
                                  "ROUTER",
                                  "PARTNER"
                                ]
                              },
                              "allow": {
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "preferenceBuckets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "entity": {
                                "type": "string"
                              },
                              "exitType": {
                                "type": "string"
                              },
                              "protocol": {
                                "type": "string"
                              },
                              "routeType": {
                                "type": "string"
                              },
                              "neighborTag": {
                                "type": "string"
                              },
                              "preference": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_route_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseSecurityPolicy": {
      "post": {
        "summary": "Update enterprise security policy",
        "description": "Updates the security policy for the specified enterprise (by `enterpriseId`). This method supports JSON Merge Patch updates (see https://tools.ietf.org/html/rfc7386).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROFILE`",
        "tags": [
          "enterprise",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_security_policy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_security_policy",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "ipsec": {
                  "type": "object",
                  "properties": {
                    "disableGCM": {
                      "type": "boolean"
                    },
                    "hash": {
                      "type": "string",
                      "enum": [
                        "SHA_1",
                        "SHA_256",
                        "SHA_384",
                        "SHA_512"
                      ]
                    },
                    "encryption": {
                      "type": "string",
                      "enum": [
                        "AES_128_CBC",
                        "AES_256_CBC",
                        "DES_CBC"
                      ]
                    },
                    "diffieHellmanGroup": {
                      "type": "string",
                      "enum": [
                        "GROUP_2",
                        "GROUP_5",
                        "GROUP_14",
                        "GROUP_15",
                        "GROUP_16"
                      ]
                    },
                    "perfectForwardSecrecy": {
                      "type": "string",
                      "enum": [
                        "DISABLED",
                        "GROUP_2",
                        "GROUP_5",
                        "GROUP_14",
                        "GROUP_15",
                        "GROUP_16"
                      ]
                    },
                    "ipsecLifeMin": {
                      "type": "integer"
                    },
                    "isakmpLifeMin": {
                      "type": "integer"
                    },
                    "isakmpReauthMin": {
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                "secureDefaultRouteOverride": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_security_policy_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateEnterpriseService": {
      "post": {
        "summary": "Update enterprise network service",
        "description": "Updates the enterprise service for the specified enterprise (by `id` or `enterpriseId`). Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "enterprise"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "enterprise_update_enterprise_service",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_enterprise_service",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "operatorAlertsEnabled": {
                      "type": "integer"
                    },
                    "alertsEnabled": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "id",
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_update_enterprise_service_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/updateObjectGroup": {
      "post": {
        "summary": "Update an enterprise object group",
        "description": "Updates an enterprise object group.\n\nPrivileges required:\n\n`UPDATE` `OBJECT_GROUP`",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "OBJECT_GROUP"
            }
          ]
        },
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_update_object_group",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_update_object_group",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/definitions/object_group_data"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/rows_modified_confirmation"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/createApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Create API Token",
        "description": "Creates an API Token according to the information specified . Lifetime should be in milliseconds . [ Token Lifetime should be less than or equal to 12 months]\n\nPrivileges required:\n\n`CREATE` `PROXY_TOKEN`",
        "operationId": "enterprise_proxy_create_api_token",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "PROXY_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_create_api_token",
              "properties": {
                "enterpriseUserId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "lifetimeMs": {
                  "type": "integer"
                }
              },
              "required": [
                "enterpriseUserId",
                "name",
                "lifetimeMs"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/create_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/deleteEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Delete partner admin user",
        "description": "Deletes the specified enterprise proxy user (by `id` or `username`). Note: `enterpriseProxyId` is a required parameter when invoking this method as an operator or as a partner user.\n\nPrivileges required:\n\n`DELETE` `PROXY_USER`",
        "operationId": "enterprise_proxy_delete_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_delete_enterprise_proxy_user",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_delete_enterprise_proxy_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/downloadApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Download/Generate API Token",
        "description": "Generates an API token (a JWT) which may be passed to the Orchestrator in an HTTP Authorization header on future API requests in order to authenticate the current user (e.g. Authorization: Token: <token>). An API token may be downloaded only once.\n\nPrivileges required:\n\n`READ` `PROXY_TOKEN`",
        "operationId": "enterprise_proxy_download_api_token",
        "x-privileges": {
          "excludeAuthTypes": [
            "ANY"
          ],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_download_api_token",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_download_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getApiTokens": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Get API Tokens of a network, enterprise or enterprise Proxy",
        "description": "Returns tokens based on parameters\n\nPrivileges required:\n\n`READ` `PROXY_TOKEN`",
        "operationId": "enterprise_proxy_get_api_tokens",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_api_tokens",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_get_api_tokens_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyCapabilities": {
      "post": {
        "summary": "Get partner capabilities",
        "description": "Gets all partner capabilities (e.g. role customization,, etc.) currently enabled/disabled for the specified partner.\n\nPrivileges required:\n\n`READ` `PROXY`",
        "tags": [
          "partner",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_capabilities",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_capabilities",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_capabilities_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyCloneableEnterprises": {
      "post": {
        "summary": "Get cloneable enterprises under enterprise proxy ",
        "description": "Gets all cloneable enterprises existing under an enterprise proxy including delegation information\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_cloneable_enterprises",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_cloneable_enterprises",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_cloneable_enterprises_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_enterprise_proxy_cloneable_enterprises_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyEdgeInventory": {
      "post": {
        "summary": "Get partner enterprises and associated Edge inventory",
        "description": "Gets all partner enterprises and their associated Edge inventory.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_edge_inventory",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_edge_inventory",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_edge_inventory_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_edge_inventory_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyEnterprises": {
      "post": {
        "summary": "Get partner enterprises",
        "description": "Gets all partner enterprises. Optionally includes all Edges or Edge counts.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_enterprises",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_enterprises",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "serviceLicenses"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_enterprises_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_enterprises_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/getEnterpriseProxyEnterprisesWithProperty": {
      "post": {
        "summary": "Gets all MSP enterprises having a particular property and a value",
        "tags": [
          "enterprise",
          "all"
        ],
        "operationId": "enterprise_proxy_get_enterprise_proxy_enterprises_with_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [
            "ANY"
          ],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprises_with_property_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_get_enterprises_with_property_response"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "description": "undefined\n\nPrivileges required:\n\n`READ` `ENTERPRISE`"
      }
    },
    "/enterpriseProxy/getEnterpriseProxyGatewayPools": {
      "post": {
        "summary": "Get gateway pools",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "description": "Gets all gateway pools associated with the specified enterprise proxy. Optionally includes all gateways or enterprises belonging to each pool.\n\nPrivileges required:\n\n`READ` `GATEWAY`, or\n\n`CREATE` `ENTERPRISE`",
        "operationId": "enterprise_proxy_get_enterprise_proxy_gateway_pools",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY",
              "sufficient": true
            },
            {
              "action": "CREATE",
              "object": "ENTERPRISE",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_gateway_pools",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "gateways",
                      "enterprises",
                      "gatewaysWithRoles"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_gateway_pools_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_gateway_pools_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyGateways": {
      "post": {
        "summary": "Get gateways for enterprise proxy",
        "description": "Gets all gateways associated with the specified enterprise proxy.\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "tags": [
          "enterpriseProxy",
          "all"
        ],
        "operationId": "enterprise_proxy_get_enterprise_proxy_gateways",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_gateways",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "site",
                      "roles",
                      "pools",
                      "dataCenters",
                      "certificates",
                      "enterprises",
                      "handOffEdges",
                      "enterpriseAssociations",
                      "enterpriseAssociationCounts",
                      "syslog"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_gateways_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_gateways_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyOperatorProfiles": {
      "post": {
        "summary": "Get partner operator profiles",
        "description": "Gets all operator profiles associated with the specified partner (MSP), as assigned by the operator.\n\nPrivileges required:\n\n`READ` `OPERATOR_PROFILE`",
        "tags": [
          "all",
          "enterpriseProxy"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterprise_proxy_operator_profiles",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_operator_profiles",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "modules",
                      "enterprises"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "enterprise_proxy_get_enterprise_proxy_operator_profiles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_operator_profiles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyProperty": {
      "post": {
        "summary": "Get enterprise proxy property",
        "description": "Get a enterprise proxy property by object id or other attribute.\n\nPrivileges required:\n\n`READ` `PROXY`",
        "operationId": "enterprise_proxy_get_enterprise_proxy_property",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY"
            }
          ]
        },
        "tags": [
          "enterpriseProxy",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_property",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyRateLimits": {
      "post": {
        "summary": "Get enterpriseProxy rate limits",
        "description": "Gets rate limits for the specified enterpriseProxy.\n\nPrivileges required:\n\n`READ` `PROXY`",
        "tags": [
          "enterpriseProxy",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY"
            }
          ]
        },
        "operationId": "enterprise_proxy_get_enterpriseProxy_rate_limits",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterpriseProxy_rate_limits",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_property_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get enterprise proxy user",
        "description": "Gets the specified enterprise proxy user (by `id` or `username`).\n\nPrivileges required:\n\n`READ` `PROXY_USER`\n\n`READ` `PROXY`",
        "operationId": "enterprise_proxy_get_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "MSP_USER",
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY_USER"
            },
            {
              "action": "READ",
              "object": "PROXY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/getEnterpriseProxyUsers": {
      "post": {
        "tags": [
          "userMaintenance",
          "all"
        ],
        "summary": "Get enterprise proxy admin users",
        "description": "Gets all proxy admin users for the specified enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `PROXY_USER`",
        "operationId": "enterprise_proxy_get_enterprise_proxy_users",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_get_enterprise_proxy_users",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_proxy_get_enterprise_proxy_users_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/insertEnterpriseProxyEnterprise": {
      "post": {
        "summary": "Create enterprise owned by MSP",
        "description": "Creates a new enterprise owned by an MSP. Whereas the `insertEnterprise` method creates an enterprise in the global or network context with no MSP association, this method creates one owned by an MSP, as determined by the credentials of the caller.\n\nPrivileges required:\n\n`CREATE` `ENTERPRISE`",
        "tags": [
          "enterpriseProxy",
          "all"
        ],
        "operationId": "enterprise_proxy_insert_enterprise_proxy_enterprise",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ENTERPRISE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_enterprise_proxy_enterprise"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_enterprise_proxy_enterprise_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/insertEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Create partner admin user",
        "description": "Creates a new partner admin user.\n\nPrivileges required:\n\n`CREATE` `PROXY_USER`",
        "operationId": "enterprise_proxy_insert_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/new_enterprise_proxy_user"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_enterprise_proxy_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/insertOrUpdateEnterpriseProxyCapability": {
      "post": {
        "summary": "Create or update partner capability",
        "description": "Creates or updates the specified capability (`name`, `value`) for the specified partner (by `enterpriseProxyId`).\n\nPrivileges required:\n\n`UPDATE` `PROXY`",
        "tags": [
          "partner",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "PROXY"
            }
          ]
        },
        "operationId": "enterprise_proxy_insert_or_update_enterprise_proxy_capability",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_insert_or_update_enterprise_proxy_capability",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "enum": [
                    "enableRoleCustomization",
                    "enableEdgeLicense"
                  ]
                },
                "value": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_or_update_enterprise_proxy_capability_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/insertOrUpdateEnterpriseProxyProperty": {
      "post": {
        "summary": "Insert or update an enterprise proxy (MSP) property",
        "description": "Insert a enterprise proxy property. If property with the given name already exists, the property will be updated.\n\nPrivileges required:\n\n`UPDATE` `PROXY`",
        "operationId": "enterprise_proxy_insert_or_update_enterprise_proxy_property",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "PROXY"
            }
          ]
        },
        "tags": [
          "enterpriseProxy",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_insert_or_update_enterprise_proxy_property",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "dataType": {
                  "type": "string",
                  "enum": [
                    "STRING",
                    "NUMBER",
                    "BOOLEAN",
                    "JSON",
                    "DATE",
                    "DATETIME"
                  ]
                },
                "isPassword": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "enterpriseProxyId",
                "name",
                "value"
              ],
              "example": {
                "enterpriseProxyId": 1532,
                "name": "vco.enterprise.proxy.authentication.twoFactor.enable",
                "dataType": "BOOLEAN",
                "value": "true"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_or_update_enterprise_proxy_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterprise/insertOrUpdateEnterpriseProxyRateLimits": {
      "post": {
        "summary": "Set enterprise proxy rate limits",
        "description": "Set rate limits for the specified enterprise proxy (by `enterpriseProxyId`).\n\nPrivileges required:\n\n`UPDATE` `PROXY`",
        "tags": [
          "proxy",
          "all"
        ],
        "x-privileges": {
          "forceEnterpriseContext": false,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "PROXY"
            }
          ]
        },
        "operationId": "enterprise_proxy_insert_or_update_enterprise_specific_rate_limits",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "enterprise_proxy_insert_or_update_enterprise_specific_rate_limits",
              "type": "object",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/insert_or_update_rate_limit_request_value"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_insert_or_update_enterprise_specific_rate_limits_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/revokeApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Revoke an API Token",
        "description": "Sets the token's state to revoked. \n\nPrivileges required:\n\n`UPDATE` `PROXY_TOKEN`",
        "operationId": "enterprise_proxy_revoke_api_token",
        "x-privileges": {
          "excludeAuthTypes": [
            "ANY"
          ],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "PROXY_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_revoke_api_token",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_revoke_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseProxy/updateEnterpriseProxyUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Update enterprise proxy admin user",
        "description": "Updates the specified enterprise proxy admin user (by object `id` or other identifying attribute). Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `PROXY_USER`",
        "operationId": "enterprise_proxy_update_enterprise_proxy_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "MSP_USER",
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "PROXY_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_proxy_update_enterprise_proxy_user",
              "properties": {
                "_update": {
                  "$ref": "#/definitions/enterprise_user_update_enterprise_user"
                },
                "id": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                },
                "currentPassword": {
                  "type": "string"
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_proxy_update_enterprise_proxy_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseUser/deleteEnterpriseUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Delete enterprise user",
        "description": "Deletes the specified enterprise user (by `id` or `username`). Note: `enterpriseId` is a required parameter when invoking this method as an operator or as a partner user.\n\nPrivileges required:\n\n`DELETE` `ENTERPRISE_USER`",
        "operationId": "enterprise_user_delete_enterprise_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_user_delete_enterprise_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_user_delete_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseUser/getApiTokens": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Get API Tokens owned by current user",
        "description": "Returns tokens allocated to current user\n\nPrivileges required:\n\n`READ` `ENTERPRISE_TOKEN`, or\n\n`READ` `PROXY_TOKEN`",
        "operationId": "enterprise_user_get_api_tokens",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_TOKEN",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "PROXY_TOKEN",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_user_get_api_tokens",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifies the target user for the API call"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_get_user_api_tokens_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseUser/getEnterpriseUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get enterprise user",
        "description": "Gets the specified enterprise user (by `id` or `username`).\n\nPrivileges required:\n\n`READ` `ENTERPRISE_USER`",
        "operationId": "enterprise_user_get_enterprise_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "ENTERPRISE_USER",
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_user_get_enterprise_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_user_get_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/enterpriseUser/updateEnterpriseUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Update enterprise user",
        "description": "Updates the specified enterprise user (by object `id` or other identifying attribute). Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_USER`",
        "operationId": "enterprise_user_update_enterprise_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "ENTERPRISE_USER",
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_USER",
              "required": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "enterprise_user_update_enterprise_user",
              "properties": {
                "_update": {
                  "$ref": "#/definitions/enterprise_user_update_enterprise_user"
                },
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                },
                "currentPassword": {
                  "type": "string"
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/enterprise_user_update_enterprise_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/event/getEnterpriseEvents": {
      "post": {
        "summary": "Get Edge events",
        "description": "Gets Edge events in an enterprise or Edge context. Returns an array of Edge events sorted by `eventTime`.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_EVENT`",
        "tags": [
          "event",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_EVENT"
            }
          ]
        },
        "operationId": "event_get_enterprise_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "event_get_enterprise_events",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "title": "filter",
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "default": 2048
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "event",
                              "edgeName",
                              "user",
                              "severity",
                              "message",
                              "detail",
                              "segmentName"
                            ]
                          },
                          "op": {
                            "type": "string",
                            "enum": [
                              "is",
                              "is not",
                              "isNot",
                              "isNull",
                              "isNotNull",
                              "startsWith",
                              "notStartsWith",
                              "endsWith",
                              "notEndsWith",
                              "contains",
                              "notContains",
                              "greaterOrEquals",
                              "lesserOrEquals",
                              "in",
                              "notIn"
                            ]
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "edgeId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "enterpriseId": 4,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                },
                "filter": {
                  "rules": [
                    {
                      "field": "event",
                      "op": "is",
                      "values": [
                        "LINK_ALIVE"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/event_get_enterprise_events_result"
            },
            "examples": {
              "application/json": {
                "metaData": {
                  "limit": 2048,
                  "more": false
                },
                "data": [
                  {
                    "id": 82716379,
                    "eventTime": "2019-01-01T00:00:00.000Z",
                    "event": "LINK_ALIVE",
                    "category": "NETWORK",
                    "severity": "INFO",
                    "message": "Link GE4 is no longer DEAD",
                    "detail": "{\"logicalId\":\"ac:3b:77:31:cc:32:0000\", \"internalId\":\"00000004-76dd-4e97-9cba-73b2cf4c4e9b\"}",
                    "enterpriseUsername": null,
                    "edgeName": "Palo Alto Edge",
                    "segmentName": null
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/event/getOperatorEvents": {
      "post": {
        "summary": "Get operator events",
        "description": "Gets operator events by network ID (optional). If not specified, will be taken for the caller's security context. Optionally, use a filter object to limit the number of events returned. Additionally, specify a time interval with an interval object. If no end date is specified, then the default is the current date. Specify a `gatewayId` to filter events for the specified gateway.\n\nPrivileges required:\n\n`READ` `OPERATOR_EVENT`",
        "tags": [
          "event",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_EVENT"
            }
          ]
        },
        "operationId": "event_get_operator_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "event_get_operator_events",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "title": "filter",
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 2048
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "event",
                              "gatewayName",
                              "user",
                              "severity",
                              "message"
                            ]
                          },
                          "op": {
                            "type": "string",
                            "enum": [
                              "is",
                              "is not",
                              "isNot",
                              "isNull",
                              "isNotNull",
                              "startsWith",
                              "notStartsWith",
                              "endsWith",
                              "notEndsWith",
                              "contains",
                              "notContains",
                              "greaterOrEquals",
                              "lesserOrEquals",
                              "in",
                              "notIn"
                            ]
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "gatewayId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "example": {
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                },
                "filter": {
                  "rules": [
                    {
                      "field": "event",
                      "op": "is",
                      "values": [
                        "VPN_DATACENTER_STATUS"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/event_get_operator_events_result"
            },
            "examples": {
              "application/json": {
                "metaData": {
                  "limit": 2048,
                  "more": false
                },
                "data": [
                  {
                    "id": 47688191,
                    "eventTime": "2019-01-01T00:00:00.000Z",
                    "event": "VPN_DATACENTER_STATUS",
                    "category": "SYSTEM",
                    "severity": "NOTICE",
                    "message": "Negotiated parent SA IKEv2_I with 161.69.123.2",
                    "detail": "{\"ikeState\": \"DOWN\", \"dataCenterLogicalId\": \"d8348d2c-ebf8-4765-96b8-94a5d786e827\", \"enterpriseLogicalId\": \"d4586b9e-195d-4b42-baaf-220cb52c3aa1\", \"ipAddress\": \"161.69.123.2\", \"numberP2SA\": 0, \"Hint\": \"\"}",
                    "operatorUsername": "gateway4553fb38-dd33-434d-83e0-2b494b8fbc8d",
                    "networkName": null,
                    "gatewayName": "vcg103-usvi2"
                  }
                ]
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/event/getProxyEvents": {
      "post": {
        "summary": "Fetch Partner events",
        "description": "Fetch Partner Events by enterprise ID. Optionally, a filter object to specify search criteria and limit on number of records. A time interval could be specified with an interval object. If no end date is given, it will default to the current date. Enterprise ID can be supplied to filter events to those of a specific enterprises.\n\nPrivileges required:\n\n`READ` `PROXY_EVENT`",
        "tags": [
          "event",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "PROXY_EVENT"
            }
          ]
        },
        "operationId": "event_get_proxy_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "event_get_proxy_events",
              "properties": {
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "title": "filter",
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "default": 2048
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "event",
                              "gatewayName",
                              "user",
                              "severity",
                              "message"
                            ]
                          },
                          "op": {
                            "type": "string",
                            "enum": [
                              "is",
                              "is not",
                              "isNot",
                              "isNull",
                              "isNotNull",
                              "startsWith",
                              "notStartsWith",
                              "endsWith",
                              "notEndsWith",
                              "contains",
                              "notContains",
                              "greaterOrEquals",
                              "lesserOrEquals",
                              "in",
                              "notIn"
                            ]
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "enterpriseId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/event_get_proxy_events_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/firewall/getEnterpriseFirewallLogs": {
      "post": {
        "summary": "Get enterprise firewall logs",
        "description": "Gets firewall logs for the specified enterprise.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FIREWALL_LOGS` `undefined`",
        "tags": [
          "firewall",
          "all"
        ],
        "operationId": "firewall_get_enterprise_firewall_logs",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FIREWALL_LOGS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "firewall_get_enterprise_firewall_logs",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "integer"
                    }
                  }
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sourceIps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "destIps": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "edges": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "rules"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/firewall_get_enterprise_firewall_logs_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/functionalRole/getByEnterprise": {
      "post": {
        "summary": "Get functional roles by an Enterprise",
        "tags": [
          "all",
          "enterprise",
          "functionalRole"
        ],
        "description": "Returns all functional roles defined with the specified usertype and enterpriseId.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_SCOPED_ROLE`",
        "operationId": "get_functional_roles_by_enterprise",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ENTERPRISE_USER",
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_functional_roles_by_enterprise",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "ENTERPRISE"
                  ]
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "excludeSuperRoles": {
                  "type": "boolean"
                }
              },
              "required": [
                "userType",
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "get_functional_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_functional_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/functionalRole/getByEnterpriseProxy": {
      "post": {
        "summary": "Get functional roles by an Msp",
        "tags": [
          "all",
          "msp",
          "functionalRole",
          "get"
        ],
        "description": "Returns all functional roles defined with the specified usertype.\n\nPrivileges required:\n\n`READ` `MSP_SCOPED_ROLE`",
        "operationId": "get_functional_roles_by_msp",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "MSP_USER",
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "MSP_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_functional_roles_by_msp",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "MSP",
                    "ENTERPRISE"
                  ]
                },
                "excludeSuperRoles": {
                  "type": "boolean"
                }
              },
              "required": [
                "userType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "get_functional_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_functional_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/functionalRole/getByOperator": {
      "post": {
        "summary": "Get functional roles by an Operator",
        "tags": [
          "all",
          "operator",
          "functionalRole",
          "get"
        ],
        "description": "Returns all functional roles defined with the specified usertype.\n\nPrivileges required:\n\n`READ` `OPERATOR_SCOPED_ROLE`",
        "operationId": "get_functional_roles_by_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_SCOPED_ROLE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_functional_roles_by_operator",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "OPERATOR",
                    "MSP",
                    "ENTERPRISE"
                  ]
                },
                "excludeSuperRoles": {
                  "type": "boolean"
                }
              },
              "required": [
                "userType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "get_functional_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_functional_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/deleteGateway": {
      "post": {
        "summary": "Delete a gateway",
        "description": "Delete a gateway by id.\n\nPrivileges required:\n\n`DELETE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "gateway_delete_gateway",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_delete_gateway",
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_delete_gateway_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/gatewayProvision": {
      "post": {
        "summary": "Provision gateway",
        "description": "Provisions a gateway into the specified operator network.\n\nPrivileges required:\n\n`CREATE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "gateway_gateway_provision",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_gateway_provision",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "ipAddress": {
                  "type": "string"
                },
                "gatewayPoolId": {
                  "type": "integer"
                },
                "dnsName": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isLoadBalanced": {
                  "type": "boolean"
                },
                "privateIpAddress": {
                  "type": "string"
                },
                "roles": {
                  "$ref": "#/definitions/gateway_roles_object"
                },
                "site": {
                  "$ref": "#/definitions/site"
                }
              },
              "required": [
                "networkId",
                "ipAddress"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_gateway_provision_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/getGatewayEdgeAssignments": {
      "post": {
        "summary": "Get edge assignments for a gateway",
        "tags": [
          "gateway",
          "all"
        ],
        "description": "Get edge assignments for a gateway\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "operationId": "gateway_get_gateway_edge_assignments",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_get_gateway_edge_assignments",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "gateway_get_gateway_edge_assignments_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/gateway_get_gateway_edge_assignments_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/setGatewayBastionState": {
      "post": {
        "summary": "Set the gateway bastion state",
        "description": "Advance the gateway bastion state machine for the specified gateway (by `id`).\n\nPrivileges required:\n\n`UPDATE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "gateway_set_bastion_state",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_set_bastion_state",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                },
                "bastionState": {
                  "type": "string",
                  "enum": [
                    "STAGE_REQUESTED",
                    "UNSTAGE_REQUESTED"
                  ]
                }
              },
              "required": [
                "gatewayId",
                "bastionState"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_set_gateway_bastion_state_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gateway/updateGatewayAttributes": {
      "post": {
        "summary": "Update gateway attributes",
        "description": "Updates gateway attributes (`name`, `ipAddress`, on-premise parametrization, and `description`) and associated site attributes and syslog settings for the specified gateway (by `id`).\n\nPrivileges required:\n\n`UPDATE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "gateway_update_gateway_attributes",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_update_gateway_attributes",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "site": {
                  "$ref": "#/definitions/site"
                },
                "ipsecGatewayDetail": {
                  "$ref": "#/definitions/gateway_handoff_detail"
                },
                "handOffDetail": {
                  "$ref": "#/definitions/gateway_handoff_detail"
                },
                "roles": {
                  "$ref": "#/definitions/gateway_roles_object"
                },
                "syslog": {
                  "$ref": "#/definitions/gateway_syslog_settings"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_update_gateway_attributes_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gatewayProperty/deleteReplacementGateway": {
      "post": {
        "summary": "Delete replacement gateway property",
        "description": "Delete replacement gateway property by gatewayId & name\n\nPrivileges required:\n\n`UPDATE` `GATEWAY`",
        "operationId": "gateway_property_delete_replacement_gateway_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "tags": [
          "gateway",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_property_delete_replacement_gateway_property",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_property_delete_gateway_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gatewayProperty/getGatewayProperties": {
      "post": {
        "summary": "Get gateway properties",
        "description": "Get gateway properties by gatewayId ,name ,id or value\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "operationId": "gateway_property_get_gateway_properties",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "tags": [
          "gateway",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "gateway_property_get_gateway_properties",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_property_get_gateway_properties_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/gatewayProperty/setReplacementGateway": {
      "post": {
        "summary": "Insert/Update replacement gateway",
        "description": "Insert/Update replacement gateway along with migrationDeadLineDate.\n\nPrivileges required:\n\n`UPDATE` `GATEWAY`",
        "tags": [
          "gateway",
          "all"
        ],
        "operationId": "network_set_replacement_gateway",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_set_replacement_gateway_request",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                },
                "replacementGatewayId": {
                  "type": "integer"
                },
                "migrationDeadline": {
                  "type": "number"
                }
              },
              "required": [
                "gatewayId",
                "replacementGatewayId",
                "migrationDeadline"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_set_replacement_gateway_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/rows_modified_confirmation"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/link/updateLinkAttributes": {
      "post": {
        "summary": "Update WAN link",
        "description": "Update WAN link attributes (display name, location, alert settings, etc.)\n\nPrivileges required:\n\n`UPDATE` `EDGE`",
        "operationId": "link_update_link_attributes",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "EDGE"
            }
          ]
        },
        "tags": [
          "edge",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "link_update_link_attributes",
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer",
                  "description": "`id` of the Customer to which the link/Edge belongs. *Required* when the caller is an Operator or Partner Admin."
                },
                "linkId": {
                  "type": "integer",
                  "description": "Link `id` as reported by e.g. `edge/getEdge`"
                },
                "id": {
                  "type": "integer",
                  "description": "Alias for `linkId`"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "isp": {
                      "type": "string",
                      "description": "ISP name override."
                    },
                    "lat": {
                      "type": "string",
                      "description": "Latitude override."
                    },
                    "lon": {
                      "type": "string",
                      "description": "Longitude override."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Link display name override."
                    },
                    "backupState": {
                      "type": "string",
                      "enum": [
                        "UNCONFIGURED",
                        "STANDBY",
                        "ACTIVE"
                      ],
                      "description": "Link backup state override. Generally this is system-managed, but can be overridden by user if required."
                    },
                    "serviceState": {
                      "type": "string",
                      "enum": [
                        "IN_SERVICE",
                        "OUT_OF_SERVICE",
                        "HISTORICAL"
                      ],
                      "description": "Service state override. Not used by the system, currently."
                    },
                    "alertsEnabled": {
                      "type": "boolean",
                      "description": "Option to enable or disable Customer Alerts for this link."
                    },
                    "operatorAlertsEnabled": {
                      "type": "boolean",
                      "description": "Option to enable or disable Operator Alerts for this link."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/rows_modified_confirmation"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/linkQualityEvent/getLinkQualityEvents": {
      "post": {
        "summary": "Get link quality (QoE) scores for an Edge",
        "description": "Fetch per-link and overall Quality of Experience scores for the specified Edge over the specified time interval. For each link, this method reports an aggregate `totalScore`, a `score` breakdown by traffic type, a `timeseries` composed of samples for which pre- and post-enhancement link states are recorded by traffic type, and quality state `distribution`s by traffic type. It also summarizes effective overall link quality scores across all links in the same format on the `overallLinkQuality` property.\n\nQoE scores are computed based on a sample of events stored on the Orchestrator. Clients may optionally parameterize the number of events sampled (see the `maxSamples` parameter) or the duration of samples (see `minutesPerSample`), but the default parameter values should be sufficient for most, if not all, use cases.\n\nThe response schema for this method is unique in that several of the constituent objects use integer keys that inform how values should be interpreted.\n\nWhere breakdowns are presented by traffic type, as they are in the `distribution` and `score` summary objects, they should be  interpreted as follows:\n - `0`: Voice\n - `1`: Video\n - `2`: Transactional\n\nWhere breakdowns are presented by state, as they are in the traffic-type-specific `distribution` summaries, they should be interpreted as follows:\n - `0`: Offline\n - `1`: Unknown\n - `2`: Red\n - `3`: Yellow\n - `4`: Green\n\nWhere actions are referenced in `timeseries` samples, they should be interpreted as follows:\n - `0`: None\n - `1`: Avoid\n - `2`: Jitter Buffer\n - `3`: Error Correction\n - `4`: Forward Error Correction\n\nWhere metrics are referenced in `timeseries` samples, they should be interpreted as follows:\n - `0`: Latency Rx\n - `1`: Latency Tx\n - `2`: Jitter Rx\n - `3`: Jitter Tx\n - `4`: Loss Rx\n - `5`: Loss Tx\n\n\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "linkQualityEvent",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "link_quality_event_get_link_quality_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "link_quality_event_get_link_quality_events",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "maxSamples": {
                  "type": "integer",
                  "default": 50,
                  "description": "Maximum number of link quality events sampled to produce the time series used in computing scores. This may not be specified in conjunction with `minutesPerSample`."
                },
                "minutesPerSample": {
                  "type": "integer",
                  "description": "Duration in minutes of the interval partitions from which link quality events are samples to produce the time series used in computing scores. This may not be specified in conjunction with `maxSamples`."
                },
                "individualScores": {
                  "type": "boolean",
                  "default": false,
                  "description": "When `true`, each sample in the resulting time series is populated with its own aggregate `score` values (grouped by traffic type) and link quality state `distribution`."
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "edgeId",
                "interval"
              ],
              "example": {
                "enterpriseId": 4,
                "edgeId": 512,
                "maxSamples": 50,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/link_quality_event_get_link_quality_events_result"
            },
            "examples": {
              "application/json": {
                "00000004-ea1c-478e-ae54-6f00adab49fd": {
                  "timeseries": [
                    {
                      "timestamp": 1579745995977,
                      "before": {
                        "0": 4,
                        "1": 4,
                        "2": 4
                      },
                      "after": {
                        "0": 4,
                        "1": 4,
                        "2": 4
                      },
                      "metadata": {
                        "detail": {
                          "latencyMsTx": 0,
                          "lossPctTx": 0,
                          "jitterMsTx": 1,
                          "lossPctRx": 0,
                          "latencyMsRx": 9,
                          "jitterMsRx": 0
                        },
                        "metrics": [
                          {
                            "trafficType": 0,
                            "action": 0,
                            "metric": 1,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 0,
                            "action": 0,
                            "metric": 0,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 1,
                            "action": 0,
                            "metric": 1,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 1,
                            "action": 0,
                            "metric": 0,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 2,
                            "action": 0,
                            "metric": 1,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 2,
                            "action": 0,
                            "metric": 0,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 0,
                            "action": 0,
                            "metric": 3,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 0,
                            "action": 0,
                            "metric": 2,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 1,
                            "action": 0,
                            "metric": 3,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 1,
                            "action": 0,
                            "metric": 2,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 2,
                            "action": 0,
                            "metric": 3,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 2,
                            "action": 0,
                            "metric": 2,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 0,
                            "action": 0,
                            "metric": 5,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 0,
                            "action": 0,
                            "metric": 4,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 1,
                            "action": 0,
                            "metric": 5,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 1,
                            "action": 0,
                            "metric": 4,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 2,
                            "action": 0,
                            "metric": 5,
                            "afterState": 4,
                            "beforeState": 4
                          },
                          {
                            "trafficType": 2,
                            "action": 0,
                            "metric": 4,
                            "afterState": 4,
                            "beforeState": 4
                          }
                        ]
                      }
                    }
                  ],
                  "distribution": {
                    "0": {
                      "0": 0,
                      "1": 0,
                      "2": 0,
                      "3": 0,
                      "4": 1
                    },
                    "1": {
                      "0": 0,
                      "1": 0,
                      "2": 0,
                      "3": 0,
                      "4": 1
                    },
                    "2": {
                      "0": 0,
                      "1": 0,
                      "2": 0,
                      "3": 0,
                      "4": 1
                    }
                  },
                  "score": {
                    "0": 10,
                    "1": 10,
                    "2": 10
                  },
                  "totalScore": 10,
                  "sampleLength": 60000,
                  "sampleCount": 1
                },
                "overallLinkQuality": {
                  "timeseries": [
                    {
                      "timestamp": 1579745995977,
                      "after": {
                        "0": 4,
                        "1": 4,
                        "2": 4
                      },
                      "metadata": {
                        "stateMap": {
                          "0": {
                            "0": {
                              "after": 4
                            },
                            "1": {
                              "after": 4
                            },
                            "2": {
                              "after": 4
                            },
                            "3": {
                              "after": 4
                            },
                            "4": {
                              "after": 4
                            },
                            "5": {
                              "after": 4
                            }
                          },
                          "1": {
                            "0": {
                              "after": 4
                            },
                            "1": {
                              "after": 4
                            },
                            "2": {
                              "after": 4
                            },
                            "3": {
                              "after": 4
                            },
                            "4": {
                              "after": 4
                            },
                            "5": {
                              "after": 4
                            }
                          },
                          "2": {
                            "0": {
                              "after": 4
                            },
                            "1": {
                              "after": 4
                            },
                            "2": {
                              "after": 4
                            },
                            "3": {
                              "after": 4
                            },
                            "4": {
                              "after": 4
                            },
                            "5": {
                              "after": 4
                            }
                          }
                        }
                      },
                      "distribution": {
                        "0": {
                          "0": 0,
                          "1": 0,
                          "2": 0,
                          "3": 0,
                          "4": 1
                        },
                        "1": {
                          "0": 0,
                          "1": 0,
                          "2": 0,
                          "3": 0,
                          "4": 1
                        },
                        "2": {
                          "0": 0,
                          "1": 0,
                          "2": 0,
                          "3": 0,
                          "4": 1
                        }
                      },
                      "score": {
                        "0": 10,
                        "1": 10,
                        "2": 10
                      }
                    }
                  ],
                  "distribution": {
                    "0": {
                      "0": 0,
                      "1": 0,
                      "2": 0,
                      "3": 0,
                      "4": 1
                    },
                    "1": {
                      "0": 0,
                      "1": 0,
                      "2": 0,
                      "3": 0,
                      "4": 1
                    },
                    "2": {
                      "0": 0,
                      "1": 0,
                      "2": 0,
                      "3": 0,
                      "4": 1
                    }
                  },
                  "score": {
                    "0": 10,
                    "1": 10,
                    "2": 10
                  },
                  "totalScore": 10,
                  "sampleLength": 60000,
                  "sampleCount": 1
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppLinkMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data",
        "description": "Gets flow metric summaries for the specified time interval by link. On success, this method returns an array of flow data in which each entry corresponds to a link on the specified Edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_link_metrics",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_link_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_link_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_link_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppLinkSeries": {
      "post": {
        "summary": "Get flow metric time series data",
        "description": "Gets flow metric time series data for the specified time interval by link. On success, this method returns an array of flow data in which each entry corresponds to a link on the specified Edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_link_series",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_link_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "id",
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_link_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_link_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by application",
        "description": "Gets flow metric summaries for the specified Edge over the specified time interval by application. On success, this method returns an array of flow data in which each entry corresponds to a single application.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_metrics",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Alias for `edgeId`"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "applications": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resolveApplicationNames": {
                  "type": "boolean",
                  "description": "Optionally resolves application names, instead of numeric identifiers."
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "category",
                      "linkId"
                    ]
                  }
                }
              },
              "required": [
                "interval"
              ],
              "example": {
                "enterpriseId": 4,
                "edgeId": 512,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                },
                "limit": 3
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_metrics_result_item"
              },
              "example": [
                {
                  "bytesRx": 38976,
                  "bytesTx": 26545,
                  "packetsRx": 192,
                  "packetsTx": 193,
                  "flowCount": 871376,
                  "application": 32,
                  "category": 13,
                  "name": 32,
                  "totalBytes": 65521,
                  "totalPackets": 385
                },
                {
                  "bytesRx": 15542,
                  "bytesTx": 21828,
                  "packetsRx": 67,
                  "packetsTx": 88,
                  "flowCount": 32,
                  "application": 51,
                  "category": 6,
                  "name": 51,
                  "totalBytes": 37370,
                  "totalPackets": 155
                },
                {
                  "bytesRx": 86663,
                  "bytesTx": 3440,
                  "packetsRx": 69,
                  "packetsTx": 51,
                  "flowCount": 5,
                  "application": 67,
                  "category": 19,
                  "name": 67,
                  "totalBytes": 90103,
                  "totalPackets": 120
                },
                {
                  "name": "other",
                  "count": 42,
                  "metrics": {
                    "bytesRx": 62912015,
                    "bytesTx": 6780722,
                    "packetsRx": 59092,
                    "packetsTx": 48571,
                    "flowCount": 1063980
                  }
                }
              ]
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeAppSeries": {
      "post": {
        "summary": "Get flow metric time series data by application",
        "description": "Gets flow metric time series data for the specified time interval by application. On success, this method returns an array of flow data in which each entry corresponds to a single application.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_app_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_app_series",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Alias for `edgeId`"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer",
                  "default": 10
                },
                "maxSamples": {
                  "type": "integer"
                },
                "applications": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resolveApplicationNames": {
                  "type": "boolean",
                  "description": "Optionally resolves application names, instead of numeric identifiers."
                }
              },
              "required": [
                "interval"
              ],
              "example": {
                "enterpriseId": 4,
                "edgeId": 512,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_app_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_series_result_item"
              },
              "example": [
                {
                  "name": 32,
                  "series": [
                    {
                      "metric": "bytesTx",
                      "startTime": "2020-01-24T18:10:06.336Z",
                      "tickInterval": 225088,
                      "data": [
                        3695,
                        7807
                      ],
                      "total": 11502,
                      "min": 3695,
                      "max": 7807
                    }
                  ]
                },
                {
                  "name": "other",
                  "series": [
                    {
                      "metric": "bytesTx",
                      "startTime": "2020-01-24T18:10:06.336Z",
                      "tickInterval": 225088,
                      "data": [
                        5708429,
                        4547345
                      ],
                      "total": 10255774,
                      "min": 187,
                      "max": 2603551
                    }
                  ]
                }
              ]
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeCategoryMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by application category",
        "description": "Gets flow metric summaries for the specified time interval by application category. On success, this method returns an array of flow data in which each entry corresponds to a category of application traffic that has traversed the specified Edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_category_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_category_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "resolveCategoryNames": {
                  "type": "boolean"
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_category_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_category_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeCategorySeries": {
      "post": {
        "summary": "Get flow metric time series data by application category",
        "description": "Gets flow metric time series data for the specified time interval by application category. On success, this method returns an array of flow data in which each entry corresponds to a category of application traffic that has traversed the specified Edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_category_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_category_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resolveCategoryNames": {
                  "type": "boolean"
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_category_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_category_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDestMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by destination",
        "description": "Gets flow metric summaries for the specified time interval by destination. On success, this method returns an array of flow data in which each entry corresponds to a distinct traffic destination. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_dest_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_dest_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "attribute": {
                  "type": "string",
                  "enum": [
                    "destDomain",
                    "destIp",
                    "destFQDN"
                  ]
                },
                "destinations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_dest_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_dest_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDestSeries": {
      "post": {
        "summary": "Get flow metric time series data by destination",
        "description": "Gets flow metric time series data for the specified time interval by destination. On success, this method returns an array of flow data in which each entry corresponds to a distinct traffic destination. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_dest_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_dest_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "attribute": {
                  "type": "string",
                  "enum": [
                    "destDomain",
                    "destIp",
                    "destFQDN"
                  ]
                },
                "destinations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_dest_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_dest_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDeviceMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by client device",
        "description": "Gets flow metric summaries for the specified time interval by client device. On success, this method returns an array of flow data in which each entry corresponds to a distinct device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_USER_IDENTIFIABLE_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_device_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_USER_IDENTIFIABLE_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_device_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_device_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_device_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeDeviceSeries": {
      "post": {
        "summary": "Get flow metric time series data by client device",
        "description": "Gets flow metric time series data for the specified time interval by client device. On success, this method returns an array of flow data in which each entry corresponds to a distinct device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_USER_IDENTIFIABLE_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_device_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_USER_IDENTIFIABLE_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_device_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_device_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_device_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeLinkMetrics": {
      "post": {
        "summary": "Get summary link metrics for an Edge",
        "description": "Fetches summary transport metrics by link for the specified Edge over the specified time interval. On success, this method returns an array where each entry corresponds to a WAN link for which the Edge reported some activity over the time period covered by the request interval.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_link_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_link_metrics",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Alias for `edgeId`"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/edge_link_metric"
                  },
                  "description": "A list of metrics to report. When omitted, this method returns all available link metrics."
                },
                "sort": {
                  "$ref": "#/definitions/edge_link_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "interval"
              ],
              "example": {
                "enterpriseId": 4,
                "edgeId": 512,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_link_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_link_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeLinkSeries": {
      "post": {
        "summary": "Get link metric time series data for an Edge",
        "description": "Fetches link/transport metric time series data for WAN links belonging to the specified Edge over the specified interval. On success, this method returns an array where each entry corresponds to a link on the specified Edge.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_link_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_link_series",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Alias for `edgeId`"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/edge_link_metric"
                  },
                  "description": "A list of metrics to report. When omitted, this method returns all available link metrics."
                },
                "sort": {
                  "$ref": "#/definitions/edge_link_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "interval"
              ],
              "example": {
                "enterpriseId": 4,
                "edgeId": 512,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                },
                "metrics": [
                  "bytesTx"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_link_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeOsMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by client OS",
        "description": "Gets flow metric summaries for the specified time interval by client OS. On success, this method returns an array of flow data in which each entry corresponds to a distinct OS on a client device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_os_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_os_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "os": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "resolveOsNames": {
                  "type": "boolean"
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_os_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_os_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeOsSeries": {
      "post": {
        "summary": "Get flow metric time series data by client OS",
        "description": "Gets flow metric time series data for the specified time interval by client OS. On success, this method returns an array of flow data in which each entry corresponds to a distinct OS on a client device. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_os_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_os_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "os": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "resolveOsNames": {
                  "type": "boolean"
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_os_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_os_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeSDWANPeerPathMetrics": {
      "post": {
        "summary": "Get path stats metric aggregate data for a given edge and SD-WAN peer pair",
        "description": "Gets path stats metric summaries for the specified time interval by path. On success, this method returns an array of path stats data in which each entry corresponds to a single path.The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_PATH_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_sdwan_peer_path_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_PATH_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_edge_sdwan_peer_path_metrics",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "peerLogicalId": {
                  "type": "string"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/path_metrics"
                },
                "limit": {
                  "type": "integer",
                  "default": 16
                },
                "_filterSpec": {
                  "type": "boolean"
                }
              },
              "required": [
                "edgeId",
                "peerLogicalId"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/metrics_get_edge_sdwan_peer_path_metrics_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeSDWANPeerPathSeries": {
      "post": {
        "summary": "Get path stats metric time series data for a given edge and SD-WAN peer pair",
        "description": "Gets path stats metric time series data for the specified time interval by path. On success, this method returns an array of path stats data in which each entry corresponds to a single path. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_PATH_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_sdwan_peer_path_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_PATH_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_sdwan_peer_path_series",
              "properties": {
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "peerLogicalId": {
                  "type": "string"
                },
                "paths": {
                  "items": {
                    "type": "object",
                    "properties": {
                      "srcLinkLogicalId": {
                        "type": "string"
                      },
                      "destLinkLogicalId": {
                        "type": "string"
                      }
                    }
                  },
                  "type": "array"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "maxSamples": {
                  "type": "integer",
                  "default": 1024
                },
                "metrics": {
                  "$ref": "#/definitions/path_metrics"
                },
                "limit": {
                  "type": "integer",
                  "default": 16
                },
                "viewBy": {
                  "type": "string",
                  "enum": [
                    "path",
                    "peer"
                  ],
                  "default": "path"
                },
                "_filterSpec": {
                  "type": "boolean"
                }
              },
              "required": [
                "edgeId",
                "peerLogicalId"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "metrics_get_edge_sdwan_peer_path_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_sdwan_peer_path_series_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeSegmentMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by segment Id",
        "description": "Gets flow metric summaries for the specified time interval by segment id. On success, this method returns an array of flow data where each entry corresponds to a segment id traffic that has traversed the specified Edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_segment_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_segment_metrics",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_segment_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_segment_metrics_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeSegmentSeries": {
      "post": {
        "summary": "Get flow metric time series data by segment id",
        "description": "Gets flow metric time series data for the specified time interval by segment id. On success, this method returns an array of flow data in which each entry corresponds to a segment id of traffic that has traversed the specified Edge. In the request body, the `id` and `edgeId` property names are interchangeable. The `enterpriseId` property is required when this method is invoked in the operator context.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_segment_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_segment_series",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "maxSamples": {
                  "type": "integer"
                },
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "interval"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_edge_segment_series_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_segment_series_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeStatusMetrics": {
      "post": {
        "summary": "Get Edge healthStats metrics for an interval",
        "description": "Fetch healthStats metric summaries for the given edge, time interval and list of metrics. On success, this method returns anhealthsStats object with min, max and average values of requested metrics\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_status_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_status_metrics",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/edge_metrics"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/edge_status_metrics_summary"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEdgeStatusSeries": {
      "post": {
        "summary": "Get Edge healthStats time series for an interval ",
        "description": "Fetch healthStats time series for the given edge, time interval and list of metrics. On success, this method returns anarray of healthsStats series of requested metrics\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_edge_status_series",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_edge_status_series",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/edge_metrics"
                }
              },
              "required": [
                "edgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/get_edge_status_metrics_time_series_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getEnterpriseFlowMetrics": {
      "post": {
        "summary": "Get flow metric aggregate data by specified flow dimension",
        "description": "Gets flow metric summaries for the enterprise over the specified time interval by specified dimension. On success, this method returns an array of flow data in which each entry corresponds to a single dimension.\n\nPrivileges required:\n\n`READ` `EDGE`\n\n`VIEW_FLOW_STATS` `undefined`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_enterprise_flow_metrics",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            },
            {
              "action": "VIEW_FLOW_STATS"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_enterprise_flow_metrics",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/basic_metrics"
                },
                "sort": {
                  "$ref": "#/definitions/basic_metric"
                },
                "limit": {
                  "type": "integer"
                },
                "viewBy": {
                  "type": "string"
                }
              },
              "required": [
                "viewBy",
                "interval"
              ],
              "example": {
                "enterpriseId": 4,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                },
                "viewBy": "application",
                "limit": 3
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "metrics_get_enterprise_flow_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/metrics_get_edge_app_metrics_result_item"
              },
              "example": [
                {
                  "bytesRx": 38976,
                  "bytesTx": 26545,
                  "packetsRx": 192,
                  "packetsTx": 193,
                  "flowCount": 871376,
                  "application": 32,
                  "category": 13,
                  "name": 32,
                  "totalBytes": 65521,
                  "totalPackets": 385
                },
                {
                  "bytesRx": 15542,
                  "bytesTx": 21828,
                  "packetsRx": 67,
                  "packetsTx": 88,
                  "flowCount": 32,
                  "application": 51,
                  "category": 6,
                  "name": 51,
                  "totalBytes": 37370,
                  "totalPackets": 155
                },
                {
                  "bytesRx": 86663,
                  "bytesTx": 3440,
                  "packetsRx": 69,
                  "packetsTx": 51,
                  "flowCount": 5,
                  "application": 67,
                  "category": 19,
                  "name": 67,
                  "totalBytes": 90103,
                  "totalPackets": 120
                },
                {
                  "name": "other",
                  "count": 42,
                  "metrics": {
                    "bytesRx": 62912015,
                    "bytesTx": 6780722,
                    "packetsRx": 59092,
                    "packetsTx": 48571,
                    "flowCount": 1063980
                  }
                }
              ]
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getGatewayStatusMetrics": {
      "post": {
        "summary": "Get Gateway health metric summaries for an interval",
        "description": "Fetch health metric summaries given a target gateway, time interval and list of metrics. On success, this method returns an object containing min, max and average values of requested metrics\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_gateway_status_metrics",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_gateway_status_metrics",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/gateway_metrics"
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/gateway_status_metrics_summary"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/metrics/getGatewayStatusSeries": {
      "post": {
        "summary": "Get Gateway health metric time series for an interval",
        "description": "Fetch health metric time series given a target gateway, time interval and list of metrics. On success, this method returns an array of time series, one per metric.\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "tags": [
          "all",
          "metrics"
        ],
        "operationId": "metrics_get_gateway_status_series",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "metrics_get_gateway_status_series",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "metrics": {
                  "$ref": "#/definitions/gateway_metrics"
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/get_gateway_status_metrics_time_series_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/migration/getEnterprisesUsingQuiescedGateways": {
      "post": {
        "summary": "Gets a list of enterpriseIds using quiesced gateways",
        "description": "Gets a list of enterpriseIds using quiesced gateways\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "operationId": "migration_get_enterprises_using_quiesced_gateways",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [
            "ANY"
          ],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "tags": [
          "migration",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "migration_get_enterprises_using_quiesced_gateways_request",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "migration_get_enterprises_using_quiesced_gateways_result",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/migration/getMigrationActions": {
      "post": {
        "summary": "Get migration actions from migration entity records filtered by enterpriseId,edgeId,gatewayId ,enterpriseObjectId or type",
        "description": "Get migration actions from migration entity records filtered by enterpriseId,edgeId,gatewayId ,enterpriseObjectId or type(EDGE_REBALANCE, ENTERPRISE_REBALANCE OR DATACENTER_SWITCH_GATEWAY)\n\nPrivileges required:\n\n`READ` `GATEWAY_MIGRATION`",
        "operationId": "migration_get_migration_actions",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY_MIGRATION"
            }
          ]
        },
        "tags": [
          "migration",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "migration_get_migration_actions",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "gatewayId": {
                  "type": "integer"
                },
                "enterpriseObjectId": {
                  "type": "integer"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "EDGE_REBALANCE",
                    "ENTERPRISE_REBALANCE",
                    "DATACENTER_SWITCH_GATEWAY"
                  ]
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/get_migration_actions_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/migration/getMigrationGateways": {
      "post": {
        "summary": "Get NSD migration gateways",
        "description": "Returns the list of gateways\n\nPrivileges required:\n\n`READ` `GATEWAY_MIGRATION`",
        "operationId": "migration_get_migration_gateways",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY_MIGRATION"
            }
          ]
        },
        "tags": [
          "migration",
          "gateway",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "migration_get_migration_gateways",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "site"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/get_migration_gateways_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/migration/verifyNSDTunnels": {
      "post": {
        "summary": "Verify NSD tunnels and transition the state of migration action",
        "description": "Checks the tunnels and verify the status of tunnels of NSD and transition the state of migration action.\n\nPrivileges required:\n\n`READ` `GATEWAY_MIGRATION`",
        "operationId": "migration_verify_nsd_tunnels",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY_MIGRATION"
            }
          ]
        },
        "tags": [
          "gateway",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "migration_verify_nsd_tunnels",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "gatewayId": {
                  "type": "integer"
                },
                "enterpriseObjectId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/verify_nsd_tunnels_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getAggregateEdgeLinkMetrics": {
      "post": {
        "summary": "Get aggregate Edge link metrics across enterprises",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets aggregate link/transport metrics for all active Edge WAN  links (across all Edges available for the specified Enterprises) over the specified interval. A link is considered to be active if an Edge has reported any activity for it in the last 24 hours. On success, this method returns an array of network utilization metrics where each element corresponds to a link.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "operationId": "monitoring_get_aggregate_edge_link_metrics",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_aggregate_edge_link_metrics",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "enterprises": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "An array of `enterpriseId` values identifying the target customers. When omitted, the method returns metrics for all Enterprises to which the user has access. Enterprise administrators need not use this parameter."
                },
                "metrics": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/edge_link_metric"
                  },
                  "description": "A list of metrics to report. When omitted, this method returns all available link metrics."
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                }
              },
              "example": {
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "monitoring_get_aggregate_edge_link_metrics_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_aggregate_edge_link_metrics_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getAggregateEnterpriseEvents": {
      "post": {
        "summary": "Get events across all enterprises",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets events across all enterprises in a paginated list. When called in the MSP/Partner context, queries only enterprises managed by the MSP.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "operationId": "monitoring_get_aggregate_enterprise_events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_aggregate_enterprise_events",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges"
                    ]
                  }
                },
                "detail": {
                  "type": "boolean",
                  "description": "Option to fetch event `detail`"
                },
                "interval": {
                  "$ref": "#/definitions/interval"
                },
                "filter": {
                  "type": "object",
                  "required": [
                    "limit"
                  ],
                  "properties": {
                    "limit": {
                      "type": "integer",
                      "minimum": 0,
                      "default": 2048
                    },
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "event"
                            ]
                          },
                          "op": {
                            "type": "string",
                            "enum": [
                              "is",
                              "is not",
                              "isNot",
                              "isNull",
                              "isNotNull",
                              "startsWith",
                              "notStartsWith",
                              "endsWith",
                              "notEndsWith",
                              "contains",
                              "notContains",
                              "greaterOrEquals",
                              "lesserOrEquals",
                              "in",
                              "notIn"
                            ]
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "example": {
                "enterpriseId": 4,
                "interval": {
                  "start": 1609459200000,
                  "end": 1609459920000
                },
                "detail": true
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_get_aggregate_enterprise_events_result"
            },
            "examples": {
              "application/json": {
                "metaData": {
                  "limit": 2048,
                  "more": false
                },
                "data": [
                  {
                    "id": 82716379,
                    "enterpriseId": 4,
                    "enterpriseName": "VMware SD-WAN by VeloCloud",
                    "eventTime": "2019-01-01T00:00:00.000Z",
                    "event": "LINK_ALIVE",
                    "category": "NETWORK",
                    "severity": "INFO",
                    "message": "Link GE4 is no longer DEAD",
                    "detail": "{\"logicalId\":\"ac:3b:77:31:cc:32:0000\", \"internalId\":\"00000004-76dd-4e97-9cba-73b2cf4c4e9b\"}",
                    "enterpriseUsername": null,
                    "edgeName": "Palo Alto Edge"
                  }
                ]
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getAggregates": {
      "post": {
        "summary": "Get aggregate enterprise and Edge information",
        "description": "Gets a comprehensive listing of all enterprises and Edges on a network. Returns an object containing an aggregate `edgeCount`, a list (`enterprises`) containing enterprise objects, and a map (`edges`) that provides Edge counts per enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "monitoring"
        ],
        "operationId": "monitoring_get_aggregates",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_aggregates",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_get_aggregates_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseBgpPeerStatus": {
      "post": {
        "summary": "Get gateway BGP peer status for all enterprise gateways",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets the gateway BGP peer status for all enterprise gateways. Returns an array in which each entry corresponds to a gateway and contains an associated set of BGP peers with state records.\n\nPrivileges required:\n\n`READ` `NETWORK_SERVICE`",
        "operationId": "monitoring_get_enterprise_bgp_peer_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "monitoring_get_enterprise_bgp_peer_status_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_bgp_peer_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeBfdPeerStatus": {
      "post": {
        "summary": "Get Edge BFD peer status for all enterprise Edges",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets the Edge BFD peer status for all enterprise Edges. Returns an array in which each entry corresponds to an Edge BFD session.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "monitoring_get_enterprise_edge_bfd_peer_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "EDGE"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "monitoring_get_enterprise_edge_bfd_peer_status_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_edge_bfd_peer_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeBgpPeerStatus": {
      "post": {
        "summary": "Get Edge BGP peer status for all enterprise Edges",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets the Edge BGP peer status for all enterprise Edges. Returns an array in which each entry corresponds to an Edge and contains an associated set of BGP peers and state records.\n\nPrivileges required:\n\n`READ` `EDGE`",
        "operationId": "monitoring_get_enterprise_edge_bgp_peer_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "EDGE"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "monitoring_get_enterprise_edge_bgp_peer_status_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_edge_bgp_peer_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeClusterStatus": {
      "post": {
        "summary": "Get Edge Cluster status",
        "description": "Get edge`s utilization data by clusters\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "monitoring"
        ],
        "operationId": "monitoring_get_enterprise_edge_cluster_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_enterprise_edge_cluster_status",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "metrics": {
                  "$ref": "#/definitions/edge_metrics"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "edgeId": {
                    "type": "integer"
                  },
                  "edgeName": {
                    "type": "string"
                  },
                  "tunnelCount": {
                    "type": "integer"
                  },
                  "tunnelCountV6": {
                    "type": "integer"
                  },
                  "memoryPct": {
                    "type": "number"
                  },
                  "flowCount": {
                    "type": "number"
                  },
                  "cpuPct": {
                    "type": "number"
                  },
                  "cpuCoreTemp": {
                    "type": "integer"
                  },
                  "handoffQueueDrops": {
                    "type": "integer"
                  }
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeLinkStatus": {
      "post": {
        "summary": "Get Edge and link status data",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Gets the current Edge and Edge-link status for all enterprises. edges.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`\n\n`READ` `EDGE`",
        "operationId": "monitoring_get_enterprise_edge_link_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            },
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterprises": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "links": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_edge_link_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeNvsTunnelStatus": {
      "post": {
        "summary": "Get state history for tunnels from Edge(s) to non-SD-WAN sites",
        "tags": [
          "all",
          "monitoring"
        ],
        "description": "Returns an array where each entry represents an Edge-reported state change in a tunnel to a non-SD-WAN site or service (e.g. a data center or cloud security service). Tunnels are uniqiuely identified by a `dataKey` which corresponds to an Edge-generated `pathId`.\n\nPrivileges required:\n\n`READ` `NETWORK_SERVICE`",
        "operationId": "monitoring_get_enterprise_edge_nvs_tunnel_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "tag": {
                  "type": "string"
                },
                "providerObjectId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "monitoring_get_enterprise_edge_nvs_tunnel_status",
              "type": "array",
              "items": {
                "$ref": "#/definitions/monitoring_get_enterprise_edge_nvs_tunnel_status_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getEnterpriseEdgeStatus": {
      "post": {
        "summary": "Get Enterprise Edge monitoring status",
        "description": "Retrieves aggregate healthStats metric summariesfor a specified enterpriseId(and list of edges) over a specified time intervaland list of metrics. On success, this method returns an array ofhealthsStats objects for all requested edges and metrics\n\nPrivileges required:\n\n`READ` `EDGE`",
        "tags": [
          "all",
          "monitoring"
        ],
        "operationId": "monitoring_get_enterprise_edge_status",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "EDGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_enterprise_edge_status",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "edgeIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "time": {
                  "$ref": "#/definitions/js_date_formats"
                },
                "sort": {
                  "$ref": "#/definitions/edge_metric"
                },
                "limit": {
                  "type": "integer",
                  "minimum": 0
                },
                "metrics": {
                  "$ref": "#/definitions/edge_metrics"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_get_enterprise_edge_status_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getNetworkGatewayStatus": {
      "post": {
        "summary": "Get Network Gateway monitoring status",
        "description": "Fetch aggregate health metric summaries for all gateways in a network or for given list of target gateways, for specified time interval and list of metrics. On success, this method returns an array of objects per gateway containing health metric summary of requested metrics\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "tags": [
          "all",
          "monitoring"
        ],
        "operationId": "monitoring_get_network_gateway_status",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_network_gateway_status",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "gatewayIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "time": {
                  "$ref": "#/definitions/js_date_formats"
                },
                "sort": {
                  "$ref": "#/definitions/gateway_metric"
                },
                "limit": {
                  "type": "integer",
                  "minimum": 0
                },
                "metrics": {
                  "$ref": "#/definitions/gateway_metrics"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_get_network_gateway_status_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getVPNEdgeActionStatus": {
      "post": {
        "summary": "Gets the VPN edge action status for automated deployments",
        "description": "Retrieves the VPN edge action statusfor a specified providerThis method either returns a list of most recent edge actions for given states\n\nPrivileges required:\n\n`READ` `ENTERPRISE_EVENT`\n\n`READ` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "monitoring"
        ],
        "operationId": "monitoring_get_vpn_edge_action_status",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_EVENT"
            },
            {
              "action": "READ",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_vpn_edge_action_status",
              "properties": {
                "providerObjectId": {
                  "type": "integer"
                },
                "fieldsNeeded": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filters": {
                  "$ref": "#/definitions/api_filters"
                },
                "limit": {
                  "type": "integer",
                  "minimum": 0
                }
              },
              "required": [
                "providerObjectId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_get_vpn_edge_action_status_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/monitoring/getVPNSiteStatus": {
      "post": {
        "summary": "Gets the VPN site status for automated deployments",
        "description": "Retrieves the VPN site statusfor a specified linkId, edgeId, segmentObjectId, and networkServiceIdOn success, this method returns an array ofVPN site statuses objects for all requested params\n\nPrivileges required:\n\n`READ` `ENTERPRISE_EVENT`\n\n`READ` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "monitoring"
        ],
        "operationId": "monitoring_get_vpn_site_status",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_EVENT"
            },
            {
              "action": "READ",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "monitoring_get_vpn_site_status",
              "properties": {
                "segmentObjectId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "providerObjectId": {
                  "type": "integer"
                },
                "linkInternalId": {
                  "type": "string"
                }
              },
              "required": [
                "segmentObjectId",
                "edgeId",
                "providerObjectId",
                "linkInternalId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/monitoring_vpn_site_status_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/createApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Create Operator API Token",
        "description": "Creates an API Token according to the information specified. Lifetime should be in milliseconds. [ Token Lifetime should be less than or equal to 12 months]\n\nPrivileges required:\n\n`CREATE` `OPERATOR_TOKEN`",
        "operationId": "network_create_api_token",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "OPERATOR_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_create_api_token",
              "properties": {
                "operatorUserId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "lifetimeMs": {
                  "type": "integer"
                }
              },
              "required": [
                "name",
                "lifetimeMs"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/create_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/deleteNetworkGatewayPool": {
      "post": {
        "summary": "Delete gateway pool",
        "description": "Deletes the specified gateway pool (by `id`).\n\nPrivileges required:\n\n`DELETE` `GATEWAY`",
        "operationId": "network_delete_network_gateway_pool",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "GATEWAY"
            }
          ]
        },
        "tags": [
          "network",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_delete_network_gateway_pool",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "alias for `gatewayPoolId`"
                },
                "gatewayPoolId": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/network_delete_network_gateway_pool_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/downloadApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Download/Generate Operator API Token",
        "description": "Generates an API token (a JWT) which may be passed to the Orchestrator in an HTTP Authorization header on future API requests in order to authenticate the current user (e.g. Authorization: Token: <token>). An API token may be downloaded only once.\n\nPrivileges required:\n\n`READ` `OPERATOR_TOKEN`",
        "operationId": "network_download_api_token",
        "x-privileges": {
          "excludeAuthTypes": [
            "ANY"
          ],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_download_api_token",
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_download_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getApiTokens": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Get API Tokens of a network",
        "description": "Returns tokens based on parameters\n\nPrivileges required:\n\n`READ` `OPERATOR_TOKEN`",
        "operationId": "network_get_api_tokens",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_api_tokens",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_get_api_tokens_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getEligibleReplacementGateways": {
      "post": {
        "summary": "Get a list of gateways similar to a particular gateway for roles and pool assignments.",
        "description": "Returns a list of gateways which are similar to a particular gateway with respect to roles and pool assignments\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "operationId": "network_get_eligible_replacement_gateways",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "tags": [
          "gateway",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_eligible_replacement_gateways",
              "properties": {
                "gatewayId": {
                  "type": "integer"
                },
                "serviceStates": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "IN_SERVICE",
                      "OUT_OF_SERVICE",
                      "PENDING_SERVICE",
                      "QUIESCED"
                    ]
                  }
                }
              },
              "required": [
                "gatewayId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "title": "network_get_eligible_replacement_gateways_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_eligible_replacement_gateways_result_item"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkCloneableEnterprises": {
      "post": {
        "summary": "Get enterprises on network",
        "description": "Gets all cloneable enterprises existing on a network including delegation information\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "network"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "network_get_network_cloneable_enterprises",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_cloneable_enterprises",
              "properties": {
                "networkId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_cloneable_enterprises_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_network_cloneable_enterprises_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkConfigurations": {
      "post": {
        "summary": "Get operator configuration profiles",
        "tags": [
          "all",
          "network"
        ],
        "description": "Gets all operator configuration profiles associated with an operator's network. Optionally includes the modules associated with each profile. This call does not return templates.\n\nPrivileges required:\n\n`READ` `OPERATOR_PROFILE`",
        "operationId": "network_get_network_configurations",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_PROFILE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_configurations",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "modules",
                      "counts"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_configurations_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_configurations_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkEnterprises": {
      "post": {
        "summary": "Get enterprises on network",
        "description": "Gets all enterprises existing on a network, optionally including all Edges or Edge counts. The `edgeConfigUpdate` \"with\" option may also be passed to check whether the application of configuration updates to Edges is enabled for each enterprise.\n\nPrivileges required:\n\n`READ` `ENTERPRISE`",
        "tags": [
          "all",
          "network"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "SERVICE_ACCOUNT"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE"
            }
          ]
        },
        "operationId": "network_get_network_enterprises",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_enterprises",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "Alias for `networkId`"
                },
                "enterprises": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "_count": {
                  "type": "boolean"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "edges",
                      "edgeCount",
                      "edgeConfigUpdate",
                      "serviceLicenses"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_enterprises_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_enterprises_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkGatewayPools": {
      "post": {
        "summary": "Get gateway pools on network",
        "tags": [
          "all",
          "network"
        ],
        "description": "Gets all gateway pools associated with the specified network. Optionally includes the gateways or enterprises belonging to each pool.\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "operationId": "network_get_network_gateway_pools",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "SERVICE_ACCOUNT"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_gateway_pools",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "gateways",
                      "enterprises",
                      "gatewaysWithRoles"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_gateway_pools_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_gateway_pools_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkGateways": {
      "post": {
        "summary": "Get gateways on network",
        "description": "Gets all gateways associated with the specified network.\n\nPrivileges required:\n\n`READ` `GATEWAY`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "network_get_network_gateways",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "SERVICE_ACCOUNT"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_gateways",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "gatewayIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "site",
                      "pools",
                      "enterprises",
                      "enterpriseAssociations",
                      "enterpriseAssociationCounts",
                      "dataCenters",
                      "certificates",
                      "handOffEdges",
                      "roles",
                      "syslog"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_gateways_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_gateways_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/getNetworkOperatorUsers": {
      "post": {
        "summary": "Get operator users for network",
        "description": "Gets all operator users associated with the specified network.\n\nPrivileges required:\n\n`READ` `OPERATOR_USER`",
        "tags": [
          "all",
          "network"
        ],
        "operationId": "network_get_network_operator_users",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_get_network_operator_users",
              "properties": {
                "networkId": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "network_get_network_operator_users_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/network_get_network_operator_users_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/insertNetworkGatewayPool": {
      "post": {
        "summary": "Create gateway pool",
        "description": "Creates a gateway pool for the specified network.\n\nPrivileges required:\n\n`CREATE` `GATEWAY`",
        "tags": [
          "network",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "GATEWAY"
            }
          ]
        },
        "operationId": "network_insert_network_gateway_pool",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_insert_network_gateway_pool",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "handOffType": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "ALLOW",
                    "ONLY"
                  ]
                },
                "ipV4Enabled": {
                  "type": "boolean"
                },
                "ipV6Enabled": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "networkId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/network_insert_network_gateway_pool_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/refreshApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Refresh an API Token",
        "description": "Extend the validity of a token. \n\nPrivileges required:\n\n`UPDATE` `OPERATOR_TOKEN`",
        "operationId": "network_refresh_api_token",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "OPERATOR_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_refresh_api_token",
              "properties": {
                "apiToken": {
                  "type": "string"
                }
              },
              "required": [
                "apiToken"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_download_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/revokeApiToken": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Revoke an Operator API Token",
        "description": "Sets the token's state to revoked. \n\nPrivileges required:\n\n`UPDATE` `OPERATOR_TOKEN`",
        "operationId": "network_revoke_api_token",
        "x-privileges": {
          "excludeAuthTypes": [
            "SERVICE_ACCOUNT"
          ],
          "allowAuthTypes": [],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "OPERATOR_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_revoke_api_token",
              "properties": {
                "id": {
                  "type": "integer"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_revoke_api_token_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/network/updateNetworkGatewayPoolAttributes": {
      "post": {
        "summary": "Update gateway pool attributes",
        "description": "Updates the configurable attributes (`name`, `description`, and `handOffType`) of the specified gateway pool (by `id` or `gatewayPoolId`).\n\nPrivileges required:\n\n`UPDATE` `GATEWAY`",
        "tags": [
          "network",
          "all"
        ],
        "operationId": "network_update_network_gateway_pool_attributes",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "GATEWAY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "network_update_network_gateway_pool_attributes",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer",
                  "description": "alias for `gatewayPoolId`"
                },
                "gatewayPoolId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "handOffType": {
                  "type": "string",
                  "enum": [
                    "NONE",
                    "ALLOW",
                    "ONLY"
                  ]
                },
                "ipV4Enabled": {
                  "type": "boolean"
                },
                "ipV6Enabled": {
                  "type": "boolean"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/network_update_network_gateway_pool_attributes_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/deleteOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Delete operator user",
        "description": "Deletes the specified operator user (by `id` or `username`).\n\nPrivileges required:\n\n`DELETE` `OPERATOR_USER`",
        "operationId": "operator_user_delete_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_delete_operator_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_delete_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/getApiTokens": {
      "post": {
        "tags": [
          "all",
          "apiToken"
        ],
        "summary": "Get API Tokens owned by current user",
        "description": "Returns tokens allocated to current user\n\nPrivileges required:\n\n`READ` `OPERATOR_TOKEN`",
        "operationId": "operator_user_get_api_tokens",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [
            "USER"
          ],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_TOKEN"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_get_api_tokens",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifies the target user for the API call"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/api_token_get_user_api_tokens_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/getOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get operator user",
        "description": "Gets the specified operator user object (by `id` or `username`).\n\nPrivileges required:\n\n`READ` `OPERATOR_USER`",
        "operationId": "operator_user_get_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "OPERATOR_USER",
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_get_operator_user",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_get_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/insertOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Create operator user",
        "description": "Creates an operator user and associates it with the operator's network.\n\nPrivileges required:\n\n`CREATE` `OPERATOR_USER`",
        "operationId": "operator_user_insert_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/operator_user_insert_operator_user"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_get_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/setOperatorUserBastionState": {
      "post": {
        "summary": "Set the operatorUser bastion state",
        "description": "Advance the operatorUser bastion state machine for the specified operatorUser (by `id`).\n\nPrivileges required:\n\n`UPDATE` `OPERATOR_USER`",
        "tags": [
          "operatorUser",
          "all"
        ],
        "operationId": "operator_user_set_bastion_state",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "OPERATOR_USER",
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_set_bastion_state",
              "properties": {
                "operatorUserId": {
                  "type": "integer"
                },
                "bastionState": {
                  "type": "string",
                  "enum": [
                    "STAGE_REQUESTED",
                    "UNSTAGE_REQUESTED"
                  ]
                }
              },
              "required": [
                "operatorUserId",
                "bastionState"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_set_operator_user_bastion_state_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/operatorUser/updateOperatorUser": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Update operator user",
        "description": "Updates the specified operator user (by object `id` or `username`). Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `OPERATOR_USER`",
        "operationId": "operator_user_update_operator_user",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "allowPrivilegeToSelf": "OPERATOR_USER",
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "OPERATOR_USER"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "operator_user_update_operator_user",
              "properties": {
                "_update": {
                  "$ref": "#/definitions/operator_user_update_operator_user"
                },
                "networkId": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "username": {
                  "type": "string"
                },
                "currentPassword": {
                  "type": "string"
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/operator_user_update_operator_user_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/applyRoleCustomizationPackage": {
      "post": {
        "summary": "Apply Role Customization Package",
        "description": "Applies role customization package in the VCO. After running this API, roles would be customized as per the package specification\n\nPrivileges required:\n\n`MODIFY_NETWORK_CUSTOM_ROLES` `undefined`, or\n\n`MODIFY_ENTERPRISE_CUSTOM_ROLES` `undefined`, or\n\n`MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES` `undefined`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_apply_role_customization_package",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "MODIFY_NETWORK_CUSTOM_ROLES",
              "sufficient": true
            },
            {
              "action": "MODIFY_ENTERPRISE_CUSTOM_ROLES",
              "sufficient": true
            },
            {
              "action": "MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_apply_role_customization_package",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id of the role customization package"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_apply_role_customization_package_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/createRoleCustomization": {
      "post": {
        "summary": "Create role customization",
        "tags": [
          "all",
          "role"
        ],
        "description": "Creates a role customization specified by `roleId` and an array of `privilegeIds`.\n\nPrivileges required:\n\n`UPDATE` `NETWORK`",
        "operationId": "role_create_role_customization",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_create_role_customization",
              "properties": {
                "forRoleId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "userId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "operatorId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                },
                "privilegeIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "forRoleId",
                "privilegeIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_create_role_customization_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "deprecated": true
      }
    },
    "/role/deleteRoleCustomization": {
      "post": {
        "summary": "Delete role customization",
        "tags": [
          "all",
          "role"
        ],
        "description": "Deletes the specified role customization (by `name` or `forRoleId`).\n\nPrivileges required:\n\n`UPDATE` `NETWORK`",
        "operationId": "role_delete_role_customization",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "NETWORK"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_delete_role_customization",
              "properties": {
                "forRoleId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "userId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "operatorId": {
                  "type": "integer"
                },
                "networkId": {
                  "type": "integer"
                }
              },
              "required": [
                "forRoleId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_delete_role_customization_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        },
        "deprecated": true
      }
    },
    "/role/getEligiblePrivilegesForCustomization": {
      "post": {
        "summary": "Gets list of privileges that are eligible for customization",
        "description": "Gets list of privileges that are eligible for customization for the given role\n\nPrivileges required:\n\n`READ` `ROLE_CUSTOMIZATION_PACKAGE`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_get_eligible_privileges_for_customization",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ROLE_CUSTOMIZATION_PACKAGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_get_eligible_privileges_for_customization",
              "properties": {
                "roleId": {
                  "type": "integer"
                }
              },
              "required": [
                "roleId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/eligible_privileges_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/getRoleCustomizationPrivileges": {
      "post": {
        "summary": "Get privileges for roles in a Role Customization Package",
        "description": "Get privileges for roles in a Role Customization Package\n\nPrivileges required:\n\n`READ` `ROLE_CUSTOMIZATION_PACKAGE`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "get_role_customization_privileges",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ROLE_CUSTOMIZATION_PACKAGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "get_role_customization_privileges",
              "properties": {
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/get_role_customization_privileges_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/getRoleCustomizations": {
      "post": {
        "summary": "Gets role customizations at the given level (NETWORK, PARTNER, ENTERPRISE or ALL) in VCO",
        "tags": [
          "all",
          "role"
        ],
        "description": "This API returns the list of all role customizations present in the system for the given level\n\nPrivileges required:\n\n`READ` `ROLE_CUSTOMIZATION_PACKAGE`",
        "operationId": "role_get_role_customizations",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ROLE_CUSTOMIZATION_PACKAGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_get_role_customizations",
              "properties": {
                "roleCustomizationLevel": {
                  "type": "string",
                  "enum": [
                    "NETWORK",
                    "PARTNER",
                    "ENTERPRISE",
                    "USER",
                    "ALL"
                  ]
                },
                "networkId": {
                  "type": "integer"
                },
                "userId": {
                  "type": "integer"
                },
                "operatorId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                }
              },
              "required": [
                "roleCustomizationLevel"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_customizations_list"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/getUserTypeRoles": {
      "post": {
        "summary": "Get roles per user type",
        "tags": [
          "all",
          "role"
        ],
        "description": "Gets all roles defined for the specified `userType`.\n\nPrivileges required:\n\n`READ` `ENTERPRISE_USER`, or\n\n`READ` `PROXY_USER`, or\n\n`READ` `OPERATOR_USER`",
        "operationId": "role_get_user_type_roles",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "ENTERPRISE_USER",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "PROXY_USER",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "OPERATOR_USER",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_get_user_type_roles",
              "properties": {
                "userType": {
                  "type": "string",
                  "enum": [
                    "OPERATOR",
                    "MSP",
                    "PARTNER",
                    "ENTERPRISE",
                    "END_USER",
                    "CUSTOM",
                    "SERVICE"
                  ]
                },
                "networkId": {
                  "type": "integer"
                }
              },
              "required": [
                "userType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "title": "role_get_user_type_roles_result",
              "type": "array",
              "items": {
                "$ref": "#/definitions/role_get_user_type_roles_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/insertRoleCustomizationPackage": {
      "post": {
        "summary": "Inserts Role Customization Package",
        "description": "Inserts role customization package with name, description and blobContent\n\nPrivileges required:\n\n`CREATE` `ROLE_CUSTOMIZATION_PACKAGE`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_insert_role_customization_package",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "ROLE_CUSTOMIZATION_PACKAGE"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_insert_role_customization_package",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "blobContent": {
                  "$ref": "#/definitions/role_customization_package"
                }
              },
              "required": [
                "blobContent"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_insert_role_customization_package_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/removeCustomRoles": {
      "post": {
        "summary": "Removes role customizations at the given level (NETWORK, PARTNER, ENTERPRISE or ALL) in VCO",
        "tags": [
          "all",
          "role"
        ],
        "description": "Removes role customizations in the system to restore to system default.\n\nPrivileges required:\n\n`MODIFY_NETWORK_CUSTOM_ROLES` `undefined`",
        "operationId": "role_remove_custom_roles",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "MODIFY_NETWORK_CUSTOM_ROLES",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_remove_custom_roles",
              "properties": {
                "roleCustomizationLevel": {
                  "type": "string",
                  "enum": [
                    "NETWORK",
                    "PARTNER",
                    "ENTERPRISE",
                    "USER",
                    "ALL"
                  ]
                },
                "networkId": {
                  "type": "integer"
                },
                "userId": {
                  "type": "integer"
                },
                "operatorId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                }
              },
              "required": [
                "networkId",
                "roleCustomizationLevel"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/deletion_confirmation"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/removeEnterpriseCustomRoles": {
      "post": {
        "summary": "Removes role customizations at ENTERPRISE level",
        "tags": [
          "all",
          "role"
        ],
        "description": "Removes role customizations in the system to restore to system default.\n\nPrivileges required:\n\n`MODIFY_ENTERPRISE_CUSTOM_ROLES` `undefined`",
        "operationId": "role_remove_enterprise_custom_roles",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "MODIFY_ENTERPRISE_CUSTOM_ROLES",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_remove_enterprise_custom_roles",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "required": [
                "networkId",
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/deletion_confirmation"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/removeEnterpriseProxyCustomRoles": {
      "post": {
        "summary": "Removes role customizations at PARTNER level",
        "tags": [
          "all",
          "role"
        ],
        "description": "Removes role customizations in the system to restore to system default.\n\nPrivileges required:\n\n`MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES` `undefined`",
        "operationId": "role_remove_enterprise_proxy_custom_roles",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_remove_enterprise_proxy_custom_roles",
              "properties": {
                "networkId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                }
              },
              "required": [
                "networkId",
                "enterpriseProxyId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/deletion_confirmation"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/saveAndApplyRoleCustomizationPackage": {
      "post": {
        "summary": "Update and Apply Role Customization Package",
        "description": "Updates basic attributes of package (including name and description), and the content of role customization package. Then Applies role customization package in the VCO Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `ROLE_CUSTOMIZATION_PACKAGE`\n\n`MODIFY_NETWORK_CUSTOM_ROLES` `undefined`, or\n\n`MODIFY_ENTERPRISE_CUSTOM_ROLES` `undefined`, or\n\n`MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES` `undefined`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_save_n_apply_role_customization_package",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ROLE_CUSTOMIZATION_PACKAGE"
            },
            {
              "action": "MODIFY_NETWORK_CUSTOM_ROLES",
              "sufficient": true
            },
            {
              "action": "MODIFY_ENTERPRISE_CUSTOM_ROLES",
              "sufficient": true
            },
            {
              "action": "MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "role_save_n_apply_role_customization_package",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "blobContent": {
                      "$ref": "#/definitions/role_customization_package"
                    }
                  }
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/role_apply_role_customization_package_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseDelegatedToEnterpriseProxy": {
      "post": {
        "summary": "Grant enterprise access to partner",
        "description": "Grants enterprise access to the specified enterprise proxy (partner). When an enterprise is delegated to a proxy, proxy users are granted access to view, configure, and troubleshoot Edges owned by the enterprise. As a security consideration, proxy Support users cannot view personally identifiable information.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_delegated_to_enterprise_proxy",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_delegated_to_enterprise_proxy_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseDelegatedToOperator": {
      "post": {
        "summary": "Grant enterprise access to network operator",
        "description": "Grants enterprise access to the network operator. When an enterprise is delegated to the operator, operator users are permitted to view, configure, and troubleshoot Edges owned by the enterprise. As a security consideration, operator users cannot view personally identifiable information.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_delegated_to_operator",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_delegated_to_operator_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseProxyDelegatedToOperator": {
      "post": {
        "summary": "Grant enterprise proxy access to network operator",
        "description": "Grants enterprise proxy access to the network operator. When an enterprise proxy is delegated to the operator, operator users are granted access to view, configure and troubleshoot objects owned by the proxy.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_PROXY_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_proxy_delegated_to_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_PROXY_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_proxy_delegated_to_operator_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseUserManagementDelegatedToOperator": {
      "post": {
        "summary": "Grant enterprise user access to network operator",
        "description": "Grants enterprise user access to the specified network operator. When enterprise user management is delegated to the operator, operator users are granted enterprise-level user management capabilities (user creation, password resets, etc.).\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_user_management_delegated_to_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/role_set_enterprise_user_management_delegated_to_operator_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseViewSensitiveDataDelegatedToEnterpriseProxy": {
      "post": {
        "summary": "Grant enterprise view sensitive data access to enterprise proxy",
        "description": "Grants enterprise view sensitive data access to the specified enterprise proxy.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_view_sensitive_data_delegated_to_enterprise_proxy",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/set_delegated_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/role/setEnterpriseViewSensitiveDataDelegatedToOperator": {
      "post": {
        "summary": "Grant enterprise view sensitive data access to network operator",
        "description": "Grants enterprise view sensitive data access to the specified network operator.\n\nPrivileges required:\n\n`UPDATE` `ENTERPRISE_DELEGATION`",
        "tags": [
          "role",
          "all"
        ],
        "operationId": "role_set_enterprise_view_sensitive_data_delegated_to_operator",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER",
            "ENTERPRISE_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "ENTERPRISE_DELEGATION"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "isDelegated": {
                  "type": "boolean"
                }
              },
              "required": [
                "isDelegated"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/set_delegated_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/softwareUpdate/getFirmwareUpdatesList": {
      "post": {
        "summary": "Get image lists",
        "description": "Gets all details of Images uploaded \n\nPrivileges required:\n\n`READ` `SOFTWARE_PACKAGE`",
        "tags": [
          "image",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SOFTWARE_PACKAGE"
            }
          ]
        },
        "operationId": "firmware_image_get_image_update_list",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "image_get_image_update_list",
              "properties": {
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "updateType": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "limit": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 2048
                },
                "quickSearch": {
                  "$ref": "#/definitions/quick_search"
                },
                "filters": {
                  "$ref": "#/definitions/image_get_image_update_list_filters"
                },
                "sortBy": {
                  "$ref": "#/definitions/api_sorting"
                },
                "prevPageLink": {
                  "type": "string"
                },
                "nextPageLink": {
                  "type": "string"
                },
                "_count": {
                  "type": "boolean"
                },
                "_filterSpec": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/image_get_image_update_list_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/softwareUpdate/getSoftwareUpdatesList": {
      "post": {
        "summary": "Get image lists",
        "description": "Gets all details of Images uploaded \n\nPrivileges required:\n\n`READ` `SOFTWARE_PACKAGE`",
        "tags": [
          "image",
          "all"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SOFTWARE_PACKAGE"
            }
          ]
        },
        "operationId": "image_get_image_update_list",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "image_get_image_update_list",
              "properties": {
                "with": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "updateType": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "limit": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 2048
                },
                "quickSearch": {
                  "$ref": "#/definitions/quick_search"
                },
                "filters": {
                  "$ref": "#/definitions/image_get_image_update_list_filters"
                },
                "sortBy": {
                  "$ref": "#/definitions/api_sorting"
                },
                "prevPageLink": {
                  "type": "string"
                },
                "nextPageLink": {
                  "type": "string"
                },
                "_count": {
                  "type": "boolean"
                },
                "_filterSpec": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/image_get_image_update_list_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/generateSshKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Generate users ssh key",
        "description": "Generate users ssh key according to the information specified.\n\nPrivileges required:\n\n`CREATE` `SELF_SSH_KEY`",
        "operationId": "generate_ssh_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "ENTERPRISE_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "SELF_SSH_KEY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ssh_config_generate_ssh_key",
              "properties": {
                "expire": {
                  "type": "integer"
                },
                "passPhrase": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "ssh_config_generate_ssh_key_result",
              "properties": {
                "key": {
                  "type": "string"
                }
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/getEnterpriseProxyUserSSHKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get SSH Keys",
        "description": "Returns ssh keys based on params\n\nPrivileges required:\n\n`READ` `SELF_SSH_KEY`, or\n\n`READ` `PARTNER_SSH_KEY`",
        "operationId": "sshConfig_get_enterprise_proxy_user_ssh_key",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SELF_SSH_KEY",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "PARTNER_SSH_KEY",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "sshConfig_get_enterprise_proxy_user_ssh_key",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "userIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "allKeys": {
                  "type": "boolean"
                }
              },
              "required": [
                "enterpriseProxyId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_ssh_keys_object"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/getEnterpriseUserSSHKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get SSH Keys",
        "description": "Returns ssh keys based on params\n\nPrivileges required:\n\n`READ` `SELF_SSH_KEY`, or\n\n`READ` `ENTERPRISE_SSH_KEY`",
        "operationId": "sshConfig_get_enterprise_user_ssh_key",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ENTERPRISE_USER",
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SELF_SSH_KEY",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "ENTERPRISE_SSH_KEY",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "sshConfig_get_enterprise_user_ssh_key",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "userIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "allKeys": {
                  "type": "boolean"
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_ssh_keys_object"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/getOperatorUserSSHKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Get operator users SSH Keys",
        "description": "Returns ssh keys based on params\n\nPrivileges required:\n\n`READ` `SELF_SSH_KEY`, or\n\n`READ` `OPERATOR_SSH_KEY`",
        "operationId": "sshConfig_get_operator_user_ssh_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SELF_SSH_KEY",
              "sufficient": true
            },
            {
              "action": "READ",
              "object": "OPERATOR_SSH_KEY",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "sshConfig_get_operator_user_ssh_key",
              "properties": {
                "userIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "allKeys": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_ssh_keys_object"
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/importSshKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Import users ssh key",
        "description": "Import users ssh key according to the information specified.\n\nPrivileges required:\n\n`CREATE` `SELF_SSH_KEY`",
        "operationId": "import_ssh_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "ENTERPRISE_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "SELF_SSH_KEY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "ssh_config_import_ssh_key",
              "properties": {
                "expire": {
                  "type": "integer"
                },
                "publicKey": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "title": "ssh_config_import_ssh_key_result",
              "properties": {
                "error": {
                  "description": "An error message explaining why the method failed",
                  "type": "string"
                },
                "rows": {
                  "description": "The number of rows modified",
                  "type": "integer"
                }
              },
              "required": [
                "rows"
              ]
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/revokeEnterpriseProxyUserSSHKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Revoke enterprise proxy users SSH Keys",
        "description": "Revoke enterprise proxy users SSH Keys based on params\n\nPrivileges required:\n\n`DELETE` `SELF_SSH_KEY`, or\n\n`DELETE` `PARTNER_SSH_KEY`",
        "operationId": "sshConfig_revoke_enterprise_proxy_user_ssh_key",
        "x-privileges": {
          "forceEnterpriseProxyContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "SELF_SSH_KEY",
              "sufficient": true
            },
            {
              "action": "DELETE",
              "object": "PARTNER_SSH_KEY",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "sshConfig_revoke_enterprise_proxy_user_ssh_key",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "userId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "enterpriseProxyId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/revoke_ssh_keys"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/revokeEnterpriseUserSSHKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Revoke enterprise users SSH Keys",
        "description": "Revoke enterprise users SSH Keys based on params\n\nPrivileges required:\n\n`DELETE` `SELF_SSH_KEY`, or\n\n`DELETE` `ENTERPRISE_SSH_KEY`",
        "operationId": "sshConfig_revoke_enterprise_user_ssh_key",
        "x-privileges": {
          "forceEnterpriseContext": true,
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ENTERPRISE_USER",
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "SELF_SSH_KEY",
              "sufficient": true
            },
            {
              "action": "DELETE",
              "object": "ENTERPRISE_SSH_KEY",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "sshConfig_revoke_enterprise_user_ssh_key",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "userId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "required": [
                "enterpriseId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/revoke_ssh_keys"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/sshConfig/revokeOperatorUserSSHKey": {
      "post": {
        "tags": [
          "all",
          "userMaintenance"
        ],
        "summary": "Revoke operator users SSH Keys",
        "description": "Revoke operator users SSH Keys based on params\n\nPrivileges required:\n\n`DELETE` `SELF_SSH_KEY`, or\n\n`DELETE` `OPERATOR_SSH_KEY`",
        "operationId": "sshConfig_revoke_operator_user_ssh_key",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "SELF_SSH_KEY",
              "sufficient": true
            },
            {
              "action": "DELETE",
              "object": "OPERATOR_SSH_KEY",
              "sufficient": true
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "title": "sshConfig_revoke_operator_user_ssh_key",
              "properties": {
                "userId": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/revoke_ssh_keys"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/system/getVersionInfo": {
      "post": {
        "summary": "Get system version information",
        "description": "Gets system version information.\n\nPrivileges required:",
        "operationId": "system_get_version_info",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY",
            "SERVICE_ACCOUNT"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": []
        },
        "tags": [
          "system",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_get_version_info",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_get_version_info_result_item"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/getSystemProperties": {
      "post": {
        "summary": "Get all system properties",
        "description": "Gets all configured system properties.\n\nPrivileges required:\n\n`READ` `SYSTEM_PROPERTY`",
        "operationId": "system_property_get_system_properties",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "SERVICE_ACCOUNT"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_get_system_properties",
              "properties": {
                "group": {
                  "type": "string",
                  "description": "Filter for properties matching a given group prefix"
                },
                "normalize": {
                  "type": "boolean",
                  "description": "If true, transforms query result from rowset to single object with attribute names matching property names fetched"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/system_property_get_system_properties_result_item"
              }
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/getSystemProperty": {
      "post": {
        "summary": "Get system property",
        "description": "Gets the specified system property. Specify by object `id` or `name`.\n\nPrivileges required:\n\n`READ` `SYSTEM_PROPERTY`",
        "operationId": "system_property_get_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "SERVICE_ACCOUNT"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_get_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_get_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/insertOrUpdateSystemProperty": {
      "post": {
        "summary": "Create or update system property",
        "description": "Creates the specified system property. If the system property with the specified `name` already exists, then the API call updates it.\n\nPrivileges required:\n\n`CREATE` `SYSTEM_PROPERTY`",
        "operationId": "system_property_insert_or_update_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_insert_or_update_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "defaultValue": {
                  "type": "string"
                },
                "isPassword": {
                  "type": "boolean"
                },
                "isReadOnly": {
                  "type": "boolean"
                },
                "dataType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_insert_or_update_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/insertSystemProperty": {
      "post": {
        "summary": "Create system property",
        "description": "Creates a new system property with the specified `name`, `value`, and optionally other attributes.\n\nPrivileges required:\n\n`CREATE` `SYSTEM_PROPERTY`",
        "operationId": "system_property_insert_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_insert_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "defaultValue": {
                  "type": "string"
                },
                "dataType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "isPassword": {
                  "type": "boolean"
                },
                "isReadOnly": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_insert_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/systemProperty/updateSystemProperty": {
      "post": {
        "summary": "Update system property",
        "description": "Updates the specified system property (by object `id` or `name`). Expects an `_update` object containing the field(s) to be updated and their corresponding value(s).\n\nPrivileges required:\n\n`UPDATE` `SYSTEM_PROPERTY`",
        "operationId": "system_property_update_system_property",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "SYSTEM_PROPERTY"
            }
          ]
        },
        "tags": [
          "systemProperty",
          "all"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "system_property_update_system_property",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "_update": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "defaultValue": {
                      "type": "string"
                    },
                    "isPassword": {
                      "type": "boolean"
                    },
                    "isReadOnly": {
                      "type": "boolean"
                    },
                    "dataType": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "_update"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/system_property_update_system_property_result"
            },
            "description": "Request was successfully processed"
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoDiagnostics/getVcoDbDiagnostics": {
      "post": {
        "summary": "Get VCO Database Diagnostics",
        "description": "Gets the diagnostic information of the VCO database.\n\nPrivileges required:\n\n`READ` `VCO_DIAGNOSTICS`",
        "operationId": "vco_diagnostics_get_vco_db_diagnostics",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "VCO_DIAGNOSTICS"
            }
          ]
        },
        "tags": [
          "all",
          "vcoDiagnostics"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_diagnostics_get_vco_db_diagnostics",
              "properties": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string"
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "velocloud": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "table_schema": {
                              "type": "string"
                            },
                            "table_name": {
                              "type": "string"
                            },
                            "table_rows": {
                              "type": "integer"
                            },
                            "avg_row_length": {
                              "type": "integer"
                            },
                            "data_length": {
                              "type": "integer"
                            },
                            "index_length": {
                              "type": "integer"
                            },
                            "data_free": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "velocloud_ca": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "table_schema": {
                              "type": "string"
                            },
                            "table_name": {
                              "type": "string"
                            },
                            "table_rows": {
                              "type": "integer"
                            },
                            "avg_row_length": {
                              "type": "integer"
                            },
                            "data_length": {
                              "type": "integer"
                            },
                            "index_length": {
                              "type": "integer"
                            },
                            "data_free": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "velocloud_dr": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "table_schema": {
                              "type": "string"
                            },
                            "table_name": {
                              "type": "string"
                            },
                            "table_rows": {
                              "type": "integer"
                            },
                            "avg_row_length": {
                              "type": "integer"
                            },
                            "data_length": {
                              "type": "integer"
                            },
                            "index_length": {
                              "type": "integer"
                            },
                            "data_free": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "velocloud_stats": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "table_schema": {
                              "type": "string"
                            },
                            "table_name": {
                              "type": "string"
                            },
                            "table_rows": {
                              "type": "integer"
                            },
                            "avg_row_length": {
                              "type": "integer"
                            },
                            "data_length": {
                              "type": "integer"
                            },
                            "index_length": {
                              "type": "integer"
                            },
                            "data_free": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/associateEdges": {
      "post": {
        "summary": "Associate Edge inventory from Maestro",
        "tags": [
          "all",
          "vcoInventory"
        ],
        "description": "Associate cached Edge inventory from Maestro with Enterprise or MSP's Enterprise. Edge inventory is taken from cache, where it is put during vcoInventory/getPendingInventory execution.\n\nPrivileges required:\n\n`CREATE` `EDGE`\n\n`CREATE` `INVENTORY`",
        "operationId": "vco_inventory_associate_edges",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            },
            {
              "action": "CREATE",
              "object": "INVENTORY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_associate_edges",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                },
                "edges": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "serialNumber": {
                        "type": "string"
                      },
                      "licenseId": {
                        "type": "number"
                      },
                      "configurationId": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "serialNumber",
                      "licenseId",
                      "configurationId"
                    ]
                  }
                }
              },
              "additionalProperties": false,
              "required": [
                "edges"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/associateExistingEdge": {
      "post": {
        "summary": "Associate existing logical Edge with inventory Edge",
        "tags": [
          "all",
          "vcoInventory"
        ],
        "description": "Associate existing logical Edge which doesn't have associated inventory Edge with inventory Edge which doesn't have associated logical Edge\n\nPrivileges required:\n\n`UPDATE` `INVENTORY`",
        "operationId": "vco_inventory_associate_existing_edge",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "INVENTORY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_associate_existing_edge",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "edgeId": {
                  "type": "integer"
                },
                "inventoryEdgeId": {
                  "type": "integer"
                }
              },
              "additionalProperties": false,
              "required": [
                "edgeId",
                "inventoryEdgeId"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/deleteRmaInventoryItems": {
      "post": {
        "summary": "Delete RMAed inventory Edges",
        "tags": [
          "all",
          "vcoInventory"
        ],
        "description": "Delete RMAed inventory Edges if they have correct states\n\nPrivileges required:\n\n`DELETE` `INVENTORY`",
        "operationId": "vco_inventory_delete_rma_inventory_items",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "DELETE",
              "object": "INVENTORY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_delete_rma_inventory_items",
              "properties": {
                "enterpriseId": {
                  "type": "number"
                },
                "enterpriseProxyId": {
                  "type": "number"
                },
                "serialNumbers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "force": {
                  "type": "boolean"
                }
              },
              "required": [
                "serialNumbers"
              ],
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "object",
              "properties": {
                "rows": {
                  "type": "number"
                }
              },
              "required": [
                "rows"
              ],
              "additionalProperties": false
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/getPendingInventory": {
      "post": {
        "summary": "Get pending Edge inventory from Maestro",
        "tags": [
          "all",
          "vcoInventory"
        ],
        "description": "Get pending Edge inventory from Maestro using Partner or Enterprise ID. The inventory is stored in DB with new state\n\nPrivileges required:\n\n`READ` `INVENTORY`",
        "operationId": "vco_inventory_get_pending_inventory",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [],
          "requirePrivileges": [
            {
              "action": "READ",
              "object": "INVENTORY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_get_pending_inventory",
              "properties": {
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "enterpriseId": {
                  "type": "integer"
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "serialNumber": {
                    "type": "string"
                  },
                  "edgeMappingId": {
                    "type": "number"
                  },
                  "owner": {
                    "type": "string"
                  },
                  "inventoryStatus": {
                    "type": "string"
                  },
                  "inventoryEdgeStatus": {
                    "type": "string"
                  },
                  "vcoId": {
                    "type": "string"
                  },
                  "enterpriseId": {
                    "type": "string"
                  },
                  "enterpriseProxyId": {
                    "type": "string"
                  },
                  "token": {
                    "type": "object",
                    "properties": {
                      "hmac": {
                        "type": "string"
                      },
                      "logicalId": {
                        "type": "string"
                      }
                    }
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "modified": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "model": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/pushActivationSignUp": {
      "post": {
        "summary": "Sign-up form to verify push activation info on Maestro",
        "tags": [
          "all",
          "vcoInventory"
        ],
        "description": "Sign up form for Enterprise or MSP which will be verified on Maestro side to activate push activation\n\nPrivileges required:\n\n`UPDATE` `INVENTORY`",
        "operationId": "vco_inventory_push_activation_sign_up",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "UPDATE",
              "object": "INVENTORY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_push_activation_sign_up",
              "properties": {
                "enterpriseId": {
                  "type": "number"
                },
                "enterpriseProxyId": {
                  "type": "number"
                },
                "sid": {
                  "type": "string"
                },
                "prmId": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vcoInventory/reassignInventoryItems": {
      "post": {
        "summary": "Partner edge reassignment",
        "tags": [
          "all",
          "vcoInventory"
        ],
        "description": "Reassign edge to other partner's enterprise\n\nPrivileges required:\n\n`CREATE` `EDGE`\n\n`UPDATE` `INVENTORY`",
        "operationId": "vco_inventory_reassign_inventory_items",
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "OPERATOR_USER",
            "MSP_USER"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "EDGE"
            },
            {
              "action": "UPDATE",
              "object": "INVENTORY"
            }
          ]
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vco_inventory_reassign_inventory_items",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "enterpriseProxyId": {
                  "type": "integer"
                },
                "edges": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "licenseId": {
                        "type": "number"
                      },
                      "inventoryItemId": {
                        "type": "number"
                      },
                      "configurationId": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "required": [
                      "licenseId",
                      "inventoryItemId",
                      "configurationId"
                    ]
                  }
                }
              },
              "additionalProperties": false,
              "required": [
                "enterpriseId",
                "edges"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    },
    "/vpn/generateVpnGatewayConfiguration": {
      "post": {
        "summary": "Provision a non-SD-WAN VPN site",
        "description": "Provision a non-SD-WAN site (e.g. a data center or cloud service PoP) and generate VPN configuration.\n\nPrivileges required:\n\n`CREATE` `NETWORK_SERVICE`",
        "tags": [
          "all",
          "vpn"
        ],
        "x-privileges": {
          "excludeAuthTypes": [],
          "allowAuthTypes": [
            "ANY"
          ],
          "allowPrincipleTypes": [],
          "excludePrincipleTypes": [
            "EDGE",
            "GATEWAY"
          ],
          "requirePrivileges": [
            {
              "action": "CREATE",
              "object": "NETWORK_SERVICE"
            }
          ]
        },
        "operationId": "vpn_generate_vpn_gateway_configuration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "vpn_generate_vpn_gateway_configuration",
              "properties": {
                "enterpriseId": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "data": {
                  "$ref": "#/definitions/data_center_data"
                }
              },
              "required": [
                "name",
                "data"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully processed",
            "schema": {
              "$ref": "#/definitions/vpn_generate_vpn_gateway_configuration_result"
            }
          },
          "400": {
            "$ref": "#/responses/generic_400"
          },
          "500": {
            "$ref": "#/responses/generic_500"
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "A JSON-RPC error code (see http://www.jsonrpc.org/specification#error_object for details)",
              "example": -32600
            },
            "message": {
              "type": "string",
              "example": "An error occurred while processing your request"
            },
            "data": {
              "type": "object",
              "properties": {
                "valid": {
                  "type": "boolean"
                },
                "error": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/validation_error_details"
                  }
                },
                "warning": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/validation_error_details"
                  }
                }
              }
            }
          },
          "required": [
            "code",
            "message"
          ]
        }
      },
      "required": [
        "error"
      ]
    },
    "validation_error_details": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "required": [
        "code",
        "message",
        "path"
      ]
    },
    "tinyint": {
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "logicalid_reference": {
      "type": "object",
      "properties": {
        "logicalId": {
          "type": "string"
        }
      }
    },
    "subnet": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        }
      }
    },
    "enterprise": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "networkId": {
          "type": "integer"
        },
        "gatewayPoolId": {
          "type": "integer"
        },
        "alertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "operatorAlertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "endpointPkiMode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ]
        },
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "accountNumber": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "contactMobile": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "streetAddress2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        },
        "timezone": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED"
          ]
        }
      }
    },
    "configuration_enterprise": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "type": "object",
          "properties": {
            "configurationAssociationId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "enterprise_with_proxy_attributes": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            },
            "enterpriseProxyName": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "created",
            "networkId",
            "gatewayPoolId",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "endpointPkiMode",
            "name",
            "domain",
            "prefix",
            "logicalId",
            "accountNumber",
            "description",
            "contactName",
            "contactPhone",
            "contactMobile",
            "contactEmail",
            "streetAddress",
            "streetAddress2",
            "city",
            "state",
            "postalCode",
            "country",
            "lat",
            "lon",
            "timezone",
            "locale",
            "modified",
            "bastionState"
          ]
        }
      ]
    },
    "enterprise_proxy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "networkId": {
          "type": "integer"
        },
        "proxyType": {
          "type": "string",
          "enum": [
            "PARTNER",
            "MSP"
          ]
        },
        "operateGateways": {
          "type": "boolean"
        },
        "logicalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "contactMobile": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "streetAddress2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_alert_definition": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DEPLOYED_AND_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT",
            "EDGE_CSS_TUNNEL_DOWN",
            "EDGE_CSS_TUNNEL_UP",
            "NVS_FROM_EDGE_TUNNEL_DOWN",
            "NVS_FROM_EDGE_TUNNEL_UP",
            "VNF_IMAGE_DOWNLOAD_EVENT",
            "VNF_IMAGE_DOWNLOAD_IN_PROGRESS",
            "VNF_IMAGE_DOWNLOAD_COMPLETED",
            "VNF_IMAGE_DOWNLOAD_FAILED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DEPLOYED_AND_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT",
            "EDGE_CSS_TUNNEL_DOWN",
            "EDGE_CSS_TUNNEL_UP",
            "NVS_FROM_EDGE_TUNNEL_DOWN",
            "NVS_FROM_EDGE_TUNNEL_UP",
            "VNF_IMAGE_DOWNLOAD_EVENT",
            "VNF_IMAGE_DOWNLOAD_IN_PROGRESS",
            "VNF_IMAGE_DOWNLOAD_COMPLETED",
            "VNF_IMAGE_DOWNLOAD_FAILED"
          ]
        },
        "definition": {
          "type": "object",
          "properties": {
            "isSystemOnly": {
              "type": "boolean"
            },
            "isOperatorOnly": {
              "type": "boolean"
            }
          }
        },
        "firstNotificationSeconds": {
          "type": "integer"
        },
        "maxNotifications": {
          "type": "integer"
        },
        "notificationIntervalSeconds": {
          "type": "integer"
        },
        "resetIntervalSeconds": {
          "type": "integer"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_alert_configuration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "alertDefinitionId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DEPLOYED_AND_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT",
            "EDGE_CSS_TUNNEL_DOWN",
            "EDGE_CSS_TUNNEL_UP",
            "NVS_FROM_EDGE_TUNNEL_DOWN",
            "NVS_FROM_EDGE_TUNNEL_UP",
            "VNF_IMAGE_DOWNLOAD_EVENT",
            "VNF_IMAGE_DOWNLOAD_IN_PROGRESS",
            "VNF_IMAGE_DOWNLOAD_COMPLETED",
            "VNF_IMAGE_DOWNLOAD_FAILED"
          ]
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DEPLOYED_AND_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT",
            "EDGE_CSS_TUNNEL_DOWN",
            "EDGE_CSS_TUNNEL_UP",
            "NVS_FROM_EDGE_TUNNEL_DOWN",
            "NVS_FROM_EDGE_TUNNEL_UP",
            "VNF_IMAGE_DOWNLOAD_EVENT",
            "VNF_IMAGE_DOWNLOAD_IN_PROGRESS",
            "VNF_IMAGE_DOWNLOAD_COMPLETED",
            "VNF_IMAGE_DOWNLOAD_FAILED"
          ]
        },
        "definition": {
          "type": "object",
          "properties": {
            "isSystemOnly": {
              "type": "boolean"
            },
            "isOperatorOnly": {
              "type": "boolean"
            }
          }
        },
        "firstNotificationSeconds": {
          "type": "integer"
        },
        "maxNotifications": {
          "type": "integer"
        },
        "notificationIntervalSeconds": {
          "type": "integer"
        },
        "resetIntervalSeconds": {
          "type": "integer"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_alert_trigger": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "triggerTime": {
          "type": "string",
          "format": "date-time"
        },
        "enterpriseAlertConfigurationId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeName": {
          "type": "string"
        },
        "linkId": {
          "type": "integer"
        },
        "linkName": {
          "type": "string"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "enterpriseObjectName": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DEPLOYED_AND_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT",
            "EDGE_CSS_TUNNEL_DOWN",
            "EDGE_CSS_TUNNEL_UP",
            "NVS_FROM_EDGE_TUNNEL_DOWN",
            "NVS_FROM_EDGE_TUNNEL_UP",
            "VNF_IMAGE_DOWNLOAD_EVENT",
            "VNF_IMAGE_DOWNLOAD_IN_PROGRESS",
            "VNF_IMAGE_DOWNLOAD_COMPLETED",
            "VNF_IMAGE_DOWNLOAD_FAILED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "EDGE_DOWN",
            "EDGE_UP",
            "LINK_DOWN",
            "LINK_UP",
            "VPN_TUNNEL_DOWN",
            "EDGE_HA_FAILOVER",
            "EDGE_SERVICE_DOWN",
            "GATEWAY_SERVICE_DOWN",
            "VNF_VM_EVENT",
            "VNF_VM_DEPLOYED",
            "VNF_VM_POWERED_ON",
            "VNF_VM_POWERED_OFF",
            "VNF_VM_DEPLOYED_AND_POWERED_OFF",
            "VNF_VM_DELETED",
            "VNF_VM_ERROR",
            "VNF_INSERTION_EVENT",
            "VNF_INSERTION_ENABLED",
            "VNF_INSERTION_DISABLED",
            "TEST_ALERT",
            "EDGE_CSS_TUNNEL_DOWN",
            "EDGE_CSS_TUNNEL_UP",
            "NVS_FROM_EDGE_TUNNEL_DOWN",
            "NVS_FROM_EDGE_TUNNEL_UP",
            "VNF_IMAGE_DOWNLOAD_EVENT",
            "VNF_IMAGE_DOWNLOAD_IN_PROGRESS",
            "VNF_IMAGE_DOWNLOAD_COMPLETED",
            "VNF_IMAGE_DOWNLOAD_FAILED"
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "PENDING",
            "ACTIVE",
            "CLOSED"
          ]
        },
        "stateSetTime": {
          "type": "string",
          "format": "date-time"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "firstNotificationSeconds": {
          "type": "integer"
        },
        "maxNotifications": {
          "type": "integer"
        },
        "notificationIntervalSeconds": {
          "type": "integer"
        },
        "resetIntervalSeconds": {
          "type": "integer"
        },
        "comment": {
          "type": "string"
        },
        "nextNotificationTime": {
          "type": "string",
          "format": "date-time"
        },
        "remainingNotifications": {
          "type": "integer"
        },
        "timezone": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_object_base": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "operatorId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "gatewayId": {
          "type": "integer"
        },
        "parentGroupId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "alertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "operatorAlertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "status": {
          "type": "string"
        },
        "statusModified": {
          "type": "string",
          "format": "date-time"
        },
        "previousData": {
          "type": "object"
        },
        "previousCreated": {
          "type": "string",
          "format": "date-time"
        },
        "draftData": {
          "type": "string"
        },
        "draftCreated": {
          "type": "string",
          "format": "date-time"
        },
        "draftComment": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "created",
        "operatorId",
        "networkId",
        "enterpriseId",
        "edgeId",
        "gatewayId",
        "parentGroupId",
        "description",
        "object",
        "name",
        "type",
        "logicalId",
        "alertsEnabled",
        "operatorAlertsEnabled",
        "status",
        "statusModified",
        "previousData",
        "previousCreated",
        "draftData",
        "draftCreated",
        "draftComment",
        "data",
        "lastContact",
        "version",
        "modified"
      ]
    },
    "event_base": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "eventTime": {
          "type": "string",
          "format": "date-time"
        },
        "event": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": [
            "SYSTEM",
            "NETWORK",
            "APPLICATION",
            "USER",
            "SECURITY",
            "EDGE",
            "GATEWAY",
            "CONFIGURATION",
            "ENTERPRISE"
          ]
        },
        "severity": {
          "type": "string",
          "enum": [
            "EMERGENCY",
            "ALERT",
            "CRITICAL",
            "ERROR",
            "WARNING",
            "NOTICE",
            "INFO",
            "DEBUG"
          ]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "enterprise_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "detail": {
              "type": "string"
            },
            "enterpriseUsername": {
              "type": "string"
            },
            "edgeName": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "message",
            "detail",
            "enterpriseUsername",
            "edgeName"
          ]
        }
      ]
    },
    "enterprise_event_with_edge": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_event"
        },
        {
          "properties": {
            "edge": {
              "$ref": "#/definitions/edge_object"
            }
          }
        }
      ]
    },
    "operator_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "detail": {
              "type": "string"
            },
            "operatorUsername": {
              "type": "string"
            },
            "networkName": {
              "type": "string"
            },
            "gatewayName": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "message",
            "detail",
            "operatorUsername",
            "networkName",
            "gatewayName"
          ]
        }
      ]
    },
    "proxy_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "detail": {
              "type": "string"
            },
            "proxyUsername": {
              "type": "string"
            },
            "networkName": {
              "type": "string"
            },
            "enterpriseName": {
              "type": "string"
            },
            "gatewayName": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "message",
            "detail",
            "proxyUsername",
            "networkName",
            "enterpriseName",
            "gatewayName"
          ]
        }
      ]
    },
    "aggregate_enterprise_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseName": {
              "type": "string"
            },
            "enterpriseUsername": {
              "type": "string"
            },
            "edgeName": {
              "type": "string"
            },
            "detail": {
              "type": "string"
            },
            "edgeId": {
              "type": "integer"
            },
            "edge": {
              "$ref": "#/definitions/edge_object"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "message",
            "enterpriseId",
            "enterpriseName",
            "enterpriseUsername",
            "edgeName",
            "edgeId"
          ]
        }
      ]
    },
    "vnf_image_download_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "detail": {
              "$ref": "#/definitions/vnf_image_download_event_detail"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "detail"
          ]
        }
      ]
    },
    "vnf_image_download_event_detail": {
      "type": "object",
      "properties": {
        "logicalId": {
          "type": "string"
        },
        "vnfType": {
          "type": "string",
          "pattern": "vnfImage"
        },
        "vendor": {
          "type": "string",
          "enum": [
            "PaloAlto",
            "CheckPoint",
            "Fortinet",
            "CentOS"
          ]
        },
        "downloadType": {
          "type": "string",
          "enum": [
            "s3",
            "http",
            "https"
          ]
        },
        "edgeSerialNumber": {
          "type": "string"
        },
        "isEdgeActive": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "ERROR",
            "FAILED",
            "COMPLETED",
            "UNKNOWN"
          ]
        },
        "description": {
          "type": "string"
        },
        "service": {
          "allOf": [
            {
              "$ref": "#/definitions/logicalid_reference"
            },
            {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:securityVnf:service"
                }
              }
            }
          ]
        }
      }
    },
    "gateway_pool_gateway": {
      "type": "object",
      "properties": {
        "gatewayPoolAssocId": {
          "type": "integer"
        },
        "poolName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "siteId": {
          "type": "integer"
        },
        "activationKey": {
          "type": "string"
        },
        "activationState": {
          "type": "string"
        },
        "activationTime": {
          "type": "string",
          "format": "date-time"
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED"
          ]
        },
        "softwareVersion": {
          "type": "string"
        },
        "buildNumber": {
          "type": "string"
        },
        "utilization": {
          "type": "number"
        },
        "utilizationDetail": {
          "type": "object",
          "properties": {
            "load": {
              "type": "number"
            },
            "overall": {
              "type": "number"
            },
            "cpu": {
              "type": "number"
            },
            "memory": {
              "type": "number"
            }
          }
        },
        "connectedEdges": {
          "type": "integer"
        },
        "connectedEdgeList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "vceid": {
                "type": "string"
              }
            }
          }
        },
        "deviceId": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "gatewayState": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dnsName": {
          "type": "string"
        },
        "isLoadBalanced": {
          "type": "integer"
        },
        "privateIpAddress": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipV6Address": {
          "type": "string"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "systemUpSince": {
          "type": "string",
          "format": "date-time"
        },
        "serviceUpSince": {
          "type": "string",
          "format": "date-time"
        },
        "serviceState": {
          "type": "string"
        },
        "endpointPkiMode": {
          "type": "string"
        },
        "handOffDetail": {
          "$ref": "#/definitions/gateway_handoff_detail"
        },
        "ipsecGatewayDetail": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "strictHostCheck": {
              "type": "boolean"
            },
            "strictHostCheckDN": {
              "type": "string"
            }
          }
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gateway_handoff_detail": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "subnets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "routeCost": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255
              },
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "integer"
              },
              "encrypt": {
                "type": "boolean"
              },
              "handOffType": {
                "type": "string",
                "enum": [
                  "NAT",
                  "VLAN"
                ]
              }
            }
          }
        },
        "v6Subnets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "routeCost": {
                "type": "integer",
                "minimum": 0,
                "maximum": 255
              },
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "integer"
              },
              "encrypt": {
                "type": "boolean"
              },
              "handOffType": {
                "type": "string",
                "enum": [
                  "NAT",
                  "VLAN"
                ]
              }
            }
          }
        },
        "icmpProbe": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "probeType": {
              "type": "string"
            },
            "cTag": {
              "type": "integer"
            },
            "sTag": {
              "type": "integer"
            },
            "destinationIp": {
              "type": "string"
            },
            "frequencySeconds": {
              "type": "integer"
            },
            "threshold": {
              "type": "integer"
            }
          }
        },
        "icmpResponder": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ipAddress": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            }
          }
        }
      }
    },
    "gateway_handoff_ipsec_gateway_detail": {
      "type": "object",
      "properties": {
        "ipsecGatewayAddress": {
          "type": "string"
        },
        "strictHostCheck": {
          "type": "boolean"
        },
        "strictHostCheckDN": {
          "type": "string"
        }
      },
      "required": [
        "ipsecGatewayAddress"
      ]
    },
    "gateway_pool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "ipV4Enabled": {
          "type": "boolean"
        },
        "ipV6Enabled": {
          "type": "boolean"
        },
        "handOffType": {
          "type": "string",
          "enum": [
            "NONE",
            "ALLOW",
            "ONLY"
          ]
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gateway_property_get_gateway_properties_result": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "gatewayId",
            "value",
            "isPassword",
            "dataType",
            "description",
            "modified"
          ]
        }
      ]
    },
    "gateway_property_delete_gateway_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "gateway_property": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "gatewayId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isPassword": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "JSON",
            "DATE",
            "DATETIME"
          ]
        },
        "description": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "link": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "edgeId": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "internalId": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipV6Address": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "networkSide": {
          "type": "string",
          "enum": [
            "UNKOWN",
            "WAN",
            "LAN"
          ]
        },
        "networkType": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "WIRELESS",
            "ETHERNET",
            "WIFI"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "isp": {
          "type": "string"
        },
        "org": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        },
        "lastActive": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ]
        },
        "backupState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STANDBY",
            "ACTIVE"
          ]
        },
        "linkMode": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "BACKUP",
            "HOTSTANDBY"
          ]
        },
        "vpnState": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DEAD",
            "STANDBY"
          ],
          "description": "*Deprecated* - Do not use"
        },
        "lastEvent": {
          "type": "string",
          "format": "date-time"
        },
        "lastEventState": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ]
        },
        "alertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "operatorAlertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "serviceState": {
          "type": "string",
          "enum": [
            "IN_SERVICE",
            "OUT_OF_SERVICE",
            "HISTORICAL"
          ]
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "serviceGroups": {
          "$ref": "#/definitions/link_service_groups"
        }
      },
      "required": [
        "id",
        "created",
        "edgeId",
        "logicalId",
        "internalId",
        "interface",
        "macAddress",
        "ipAddress",
        "netmask",
        "networkSide",
        "networkType",
        "displayName",
        "isp",
        "org",
        "lat",
        "lon",
        "lastActive",
        "state",
        "backupState",
        "vpnState",
        "lastEvent",
        "lastEventState",
        "alertsEnabled",
        "operatorAlertsEnabled",
        "serviceState",
        "modified"
      ]
    },
    "client_device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "macAddress": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "os": {
          "type": "integer"
        },
        "osName": {
          "type": "string"
        },
        "osVersion": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "deviceModel": {
          "type": "string"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "created",
        "enterpriseId",
        "macAddress",
        "hostName",
        "ipAddress",
        "os",
        "osName",
        "osVersion",
        "deviceType",
        "deviceModel",
        "lastContact",
        "modified"
      ]
    },
    "link_quality_object": {
      "type": "object",
      "properties": {
        "distribution": {
          "$ref": "#/definitions/link_quality_object_distribution"
        },
        "sampleCount": {
          "type": "integer",
          "description": "The number of events sampled to compute QoE values over the request interval. The samples themselves appear in the `timeseries` list."
        },
        "sampleLength": {
          "type": "integer",
          "description": "The total number of link quality events reported by the Edge over the request interval."
        },
        "score": {
          "type": "object",
          "additionalProperties": {
            "type": "number"
          },
          "description": "Presents a summary QoE scores by traffic type, where the 0 key represents voice traffic, the 1 key represents video traffic, and the 2 key represent transactional traffic."
        },
        "timeseries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/link_quality_object_timeseries_data"
          }
        },
        "totalScore": {
          "type": "number"
        }
      },
      "required": [
        "distribution",
        "sampleCount",
        "sampleLength",
        "score",
        "timeseries",
        "totalScore"
      ]
    },
    "link_quality_object_distribution": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Summarizes state distributions over the request interval by traffic type."
    },
    "link_quality_object_timeseries_data": {
      "type": "object",
      "properties": {
        "before": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "after": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "metadata": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "object",
              "properties": {
                "latencyMsRx": {
                  "type": "integer"
                },
                "latencyMsTx": {
                  "type": "integer"
                },
                "lossPctRx": {
                  "type": "integer"
                },
                "lossPctTx": {
                  "type": "integer"
                },
                "jitterMsRx": {
                  "type": "integer"
                },
                "jitterMsTx": {
                  "type": "integer"
                }
              }
            },
            "metrics": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "trafficType": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2
                    ]
                  },
                  "action": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  },
                  "metric": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "beforeState": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  },
                  "afterState": {
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4
                    ]
                  }
                }
              }
            },
            "stateMap": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "before": {
                      "type": "integer"
                    },
                    "after": {
                      "type": "integer"
                    },
                    "action": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "distribution": {
          "$ref": "#/definitions/link_quality_object_distribution"
        },
        "score": {
          "type": "object",
          "additionalProperties": {
            "type": "number"
          }
        }
      },
      "required": [
        "after",
        "metadata",
        "timestamp"
      ]
    },
    "enterprise_route": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "exitType": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeName": {
          "type": "string"
        },
        "profileId": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "advertise": {
          "type": "boolean"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "vlan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "vlanId": {
          "type": "integer"
        },
        "staticReserved": {
          "type": "integer"
        }
      }
    },
    "enterprise_network_space": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "static",
            "dynamic"
          ]
        },
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "maxVlans": {
          "type": "integer"
        },
        "vlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/vlan"
          }
        }
      }
    },
    "enterprise_service": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "configurationId": {
          "type": "integer"
        },
        "moduleId": {
          "type": "integer"
        },
        "ref": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "version": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "authentication_service": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_service"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/authentication_service_data"
            }
          }
        }
      ]
    },
    "authentication_service_data": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "Radius"
        },
        "primary": {
          "type": "object",
          "properties": {
            "server": {
              "type": "string"
            },
            "secret": {
              "type": "string"
            },
            "port": {
              "type": "integer"
            },
            "accountingPort": {
              "type": "integer"
            }
          },
          "required": [
            "server",
            "secret",
            "port"
          ]
        },
        "secondary": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer"
            }
          }
        },
        "radiusAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/authentication_service_radius_attribute"
          }
        }
      }
    },
    "authentication_service_radius_attribute": {
      "type": "object"
    },
    "dns": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_service"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/dns_data"
            }
          }
        }
      ]
    },
    "dns_data": {
      "type": "object",
      "properties": {
        "primary": {
          "type": "string"
        },
        "secondary": {
          "type": "string"
        },
        "ipv4Servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipv6Servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isPrivate": {
          "type": "boolean"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "rule": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "enterprise_service_network": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_service"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/enterprise_service_network_data"
            }
          }
        }
      ]
    },
    "enterprise_service_network_data": {
      "type": "object",
      "properties": {
        "zone": {
          "type": "string"
        },
        "spaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "integer"
              },
              "maxVlans": {
                "type": "integer"
              },
              "mode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "branchCidrPrefix": {
                "type": "integer"
              },
              "guest": {
                "type": "boolean"
              },
              "vlans": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "vlanId": {
                      "type": "integer"
                    },
                    "advertise": {
                      "type": "boolean"
                    },
                    "cost": {
                      "type": "integer"
                    },
                    "staticReserved": {
                      "type": "integer"
                    },
                    "dhcp": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "leaseTimeSeconds": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "configuration_module": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "effective": {
          "format": "date-time",
          "type": "string"
        },
        "modified": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "enum": [
            "imageUpdate",
            "controlPlane",
            "managementPlane",
            "firewall",
            "QOS",
            "deviceSettings",
            "WAN",
            "metaData",
            "properties",
            "analyticsSettings"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "ENTERPRISE",
            "OPERATOR",
            "GATEWAY"
          ]
        },
        "description": {
          "type": "string"
        },
        "configurationId": {
          "type": "integer"
        },
        "data": {
          "type": "object"
        },
        "schemaVersion": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "refs": {
          "type": "object"
        }
      },
      "discriminator": "name"
    },
    "genericRefs": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/enterprise_service"
      }
    },
    "imageUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/image_update_data"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "image_update_data": {
      "type": "object",
      "properties": {
        "buildNumber": {
          "type": "string"
        },
        "profileDeviceFamily": {
          "type": "string"
        },
        "profileVersion": {
          "type": "string"
        },
        "scheduledStartTime": {
          "$ref": "#/definitions/image_update_scheduled_time"
        },
        "softwarePackageId": {
          "type": "integer"
        },
        "softwarePackageName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "windowDurationMins": {
          "type": "integer"
        },
        "windowed": {
          "type": "boolean"
        },
        "devicefamily": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modemFirmware": {
          "$ref": "#/definitions/firmware_image_update_data"
        },
        "platformFirmware": {
          "$ref": "#/definitions/firmware_image_update_data"
        },
        "factoryFirmware": {
          "$ref": "#/definitions/firmware_image_update_data"
        }
      },
      "required": [
        "buildNumber",
        "profileDeviceFamily",
        "profileVersion",
        "softwarePackageId",
        "softwarePackageName",
        "version",
        "windowDurationMins",
        "windowed",
        "devicefamily",
        "modemFirmware",
        "platformFirmware",
        "factoryFirmware"
      ]
    },
    "image_update_scheduled_time": {
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "type": "integer"
        },
        "specified": {
          "type": "boolean"
        },
        "timeOfDayMins": {
          "type": "integer"
        },
        "useEdgeTimeZone": {
          "type": "boolean"
        }
      },
      "required": [
        "dayOfWeek",
        "specified",
        "timeOfDayMins",
        "useEdgeTimeZone"
      ]
    },
    "firmware_image_update_data": {
      "type": "object",
      "properties": {
        "buildNumber": {
          "type": "string"
        },
        "profileDeviceFamily": {
          "type": "string"
        },
        "profileVersion": {
          "type": "string"
        },
        "softwarePackageId": {
          "type": "integer"
        },
        "softwarePackageName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "windowDurationMins": {
          "type": "integer"
        },
        "windowed": {
          "type": "boolean"
        },
        "devicefamily": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "buildNumber",
        "profileDeviceFamily",
        "profileVersion",
        "softwarePackageId",
        "softwarePackageName",
        "version",
        "windowDurationMins",
        "windowed",
        "devicefamily"
      ]
    },
    "controlPlane": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/control_plane_data"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "control_plane_data_nvs_from_edge_provider": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "provider": {
          "type": "string",
          "enum": [
            "genericIKEv2Router",
            "genericIKEv1Router",
            "microsoftAzureVirtualWan",
            "Zscaler"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "genericIKEv2Router",
            "genericIKEv1Router",
            "microsoftAzureVirtualWan",
            "Zscaler"
          ]
        },
        "automateDeployment": {
          "type": "boolean"
        },
        "providerCategory": {
          "type": "string",
          "enum": [
            "DATACENTER",
            "CSS"
          ]
        },
        "routingPolicy": {
          "type": "string"
        },
        "tunnelingProtocol": {
          "type": "string",
          "enum": [
            "IPSEC",
            "GRE"
          ]
        },
        "sharedIkeAuth": {
          "type": "boolean"
        },
        "sourceSubnets": {
          "type": "object",
          "properties": {
            "subnets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/nvs_from_edge_service_provider_subnet"
              }
            }
          }
        },
        "peerSubnets": {
          "type": "object",
          "properties": {
            "alwaysReachable": {
              "type": "boolean"
            },
            "subnets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/nvs_from_edge_service_provider_subnet"
              }
            },
            "version": {
              "type": "string"
            }
          }
        },
        "bgp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          }
        },
        "primaryServer": {
          "$ref": "#/definitions/nvs_from_edge_service_provider_server_config"
        },
        "backupServer": {
          "$ref": "#/definitions/nvs_from_edge_service_provider_server_config"
        },
        "keepBackupServerConnected": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "vpnCredentialsWithlinks": {
          "type": "object",
          "properties": {
            "useAllPublicWanLinks": {
              "type": "boolean"
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/nvs_from_edge_site_data"
              }
            }
          }
        }
      }
    },
    "control_plane_data": {
      "type": "object",
      "properties": {
        "cloudWebSecurityPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "logicalId": {
                "type": "string"
              },
              "primaryDetail": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "policyId": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "policyId"
                ]
              }
            },
            "required": [
              "logicalId",
              "data"
            ]
          }
        },
        "gatewaySelection": {
          "type": "object",
          "properties": {
            "mode": {
              "type": "string"
            },
            "primary": {
              "type": "string"
            },
            "primaryDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "ipAddress",
                "logicalId",
                "name"
              ]
            },
            "secondary": {
              "type": "string"
            },
            "secondaryDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "ipAddress",
                "logicalId",
                "name"
              ]
            },
            "primaryCCI": {
              "type": "string"
            },
            "primaryCCIDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "ipV6Address": {
                  "type": "string"
                }
              },
              "required": [
                "ipAddress",
                "logicalId",
                "name"
              ]
            },
            "secondaryCCI": {
              "type": "string"
            },
            "secondaryCCIDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "ipV6Address": {
                  "type": "string"
                }
              },
              "required": [
                "ipAddress",
                "logicalId",
                "name"
              ]
            },
            "super": {
              "type": "string"
            },
            "superDetail": {
              "type": "object",
              "properties": {
                "ipAddress": {
                  "type": "string"
                },
                "logicalId": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "vpn": {
          "type": "object",
          "properties": {
            "conditionalBackhaul": {
              "type": "boolean"
            },
            "backHaulEdges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "logicalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "dataCenterEdges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "logicalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "edgeToDataCenter": {
              "type": "boolean"
            },
            "edgeToEdge": {
              "type": "boolean"
            },
            "edgeToEdgeDetail": {
              "type": "object",
              "properties": {
                "dynamic": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "timeout": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "encryptionProtocol": {
                  "type": "string"
                },
                "profileIsolation": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "isolateDynamic": {
                      "type": "boolean"
                    }
                  }
                },
                "useCloudGateway": {
                  "type": "boolean"
                },
                "vpnHubs": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "autoSelectVpnHubs": {
                  "type": "boolean"
                }
              }
            },
            "edgeToEdgeList": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isolateDynamic": {
                    "type": "integer"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "profileLogicalId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "nvsFromEdge": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "providers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/control_plane_data_nvs_from_edge_provider"
              }
            }
          }
        },
        "ipsecGatewayDetail": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "strictHostCheck": {
                "type": "boolean"
              },
              "strictHostCheckDN": {
                "type": "string"
              }
            }
          }
        },
        "cci": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "vendor": {
                "type": "string",
                "enum": [
                  "zscalerMtGRE"
                ]
              },
              "providerLogicalId": {
                "type": "string"
              },
              "cloud": {
                "type": "string",
                "enum": [
                  "zsdevel.net"
                ]
              },
              "locationId": {
                "type": "integer"
              },
              "userFqdn": {
                "type": "string"
              },
              "userPsk": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "gatewaySelection"
      ]
    },
    "managementPlane": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/management_plane_data"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "management_plane_data": {
      "type": "object",
      "properties": {
        "heartBeatSeconds": {
          "type": "integer"
        },
        "managementPlaneProxy": {
          "type": "object",
          "properties": {
            "primary": {
              "type": "string"
            },
            "secondary": {
              "type": "string"
            },
            "primaryDetail": {
              "type": "object",
              "properties": {
                "ipV4": {
                  "type": "string"
                },
                "ipV6": {
                  "type": "string"
                },
                "fqdn": {
                  "type": "string"
                }
              }
            },
            "secondaryDetail": {
              "type": "object",
              "properties": {
                "ipV4": {
                  "type": "string"
                },
                "ipV6": {
                  "type": "string"
                },
                "fqdn": {
                  "type": "string"
                }
              }
            }
          }
        },
        "statsUploadSeconds": {
          "type": "integer"
        },
        "timeSliceSeconds": {
          "type": "integer"
        }
      },
      "required": [
        "heartBeatSeconds",
        "managementPlaneProxy",
        "statsUploadSeconds",
        "timeSliceSeconds"
      ]
    },
    "firewall": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/firewall_data"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "firewall_data": {
      "type": "object",
      "properties": {
        "firewall_enabled": {
          "type": "boolean"
        },
        "inboundLoggingEnabled": {
          "type": "boolean",
          "default": false
        },
        "stateful_firewall_enabled": {
          "type": "boolean"
        },
        "firewall_logging_enabled": {
          "type": "boolean"
        },
        "syslog_forwarding": {
          "type": "boolean"
        },
        "inbound": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_inbound_rule"
          }
        },
        "inboundV6": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_inbound_rule"
          }
        },
        "statefulFirewallSettings": {
          "type": "object",
          "properties": {
            "establishedTcpFlowTimeout": {
              "type": "integer"
            },
            "nonEstablishedTcpFlowTimeout": {
              "type": "integer"
            },
            "udpFlowTimeout": {
              "type": "integer"
            },
            "otherFlowTimeout": {
              "type": "integer"
            }
          }
        },
        "statefulFirewallSettingsV6": {
          "type": "object",
          "properties": {
            "establishedTcpFlowTimeout": {
              "type": "integer"
            },
            "nonEstablishedTcpFlowTimeout": {
              "type": "integer"
            },
            "udpFlowTimeout": {
              "type": "integer"
            },
            "otherFlowTimeout": {
              "type": "integer"
            }
          }
        },
        "networkProtectionSettings": {
          "type": "object",
          "properties": {
            "denylistDuration": {
              "type": "integer"
            },
            "newConnectionThreshold": {
              "type": "integer"
            },
            "denylist": {
              "type": "boolean"
            },
            "detectionTime": {
              "type": "integer"
            },
            "tcpBasedAttacksEnabled": {
              "type": "boolean"
            },
            "tcpBasedAttacks": {
              "type": "object",
              "properties": {
                "invalidFlags": {
                  "type": "boolean"
                },
                "enableLand": {
                  "type": "boolean"
                },
                "enableSynFragment": {
                  "type": "boolean"
                }
              }
            },
            "icmpBasedAttacksEnabled": {
              "type": "boolean"
            },
            "icmpBasedAttacks": {
              "type": "object",
              "properties": {
                "enablePingOfDeath": {
                  "type": "boolean"
                },
                "enableFragment": {
                  "type": "boolean"
                }
              }
            },
            "ipBasedAttacksEnabled": {
              "type": "boolean"
            },
            "ipBasedAttacks": {
              "type": "object",
              "properties": {
                "enableUnknownProtocol": {
                  "type": "boolean"
                },
                "enableInsecureOptions": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "networkProtectionSettingsV6": {
          "type": "object",
          "properties": {
            "denylistDuration": {
              "type": "integer"
            },
            "newConnectionThreshold": {
              "type": "integer"
            },
            "denylist": {
              "type": "boolean"
            },
            "detectionTime": {
              "type": "integer"
            },
            "tcpBasedAttacksEnabled": {
              "type": "boolean"
            },
            "tcpBasedAttacks": {
              "type": "object",
              "properties": {
                "invalidFlags": {
                  "type": "boolean"
                },
                "enableLand": {
                  "type": "boolean"
                },
                "enableSynFragment": {
                  "type": "boolean"
                }
              }
            },
            "icmpBasedAttacksEnabled": {
              "type": "boolean"
            },
            "icmpBasedAttacks": {
              "type": "object",
              "properties": {
                "enablePingOfDeath": {
                  "type": "boolean"
                },
                "enableFragment": {
                  "type": "boolean"
                }
              }
            },
            "ipBasedAttacksEnabled": {
              "type": "boolean"
            },
            "ipBasedAttacks": {
              "type": "object",
              "properties": {
                "enableUnknownProtocol": {
                  "type": "boolean"
                },
                "enableInsecureOptions": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_segment"
          }
        },
        "services": {
          "type": "object",
          "properties": {
            "loggingEnabled": {
              "type": "boolean"
            },
            "ssh": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled"
              ]
            },
            "localUi": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of IP addresses allowed UI access"
                },
                "portNumber": {
                  "type": "integer"
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "portNumber"
              ]
            },
            "console": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ]
            },
            "usb.disabled": {
              "type": "boolean"
            },
            "snmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of IP addresses allowed SNMP access"
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled"
              ]
            },
            "icmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "allowSelectedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of IP addresses allowed ICMP access"
                },
                "ruleLogicalId": {
                  "type": "string"
                }
              },
              "required": [
                "enabled"
              ]
            }
          },
          "required": [
            "loggingEnabled"
          ]
        }
      },
      "required": [
        "firewall_enabled",
        "inbound",
        "segments"
      ]
    },
    "firewall_segment": {
      "type": "object",
      "properties": {
        "firewall_logging_enabled": {
          "type": "boolean"
        },
        "stateful_firewall_enabled": {
          "type": "boolean"
        },
        "outbound": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_outbound_rule"
          }
        },
        "segment": {
          "$ref": "#/definitions/configuration_module_segment_metadata"
        }
      },
      "required": [
        "firewall_logging_enabled",
        "outbound",
        "segment"
      ]
    },
    "firewall_inbound_rule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/firewall_rule_match"
        },
        "action": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "port_forwarding",
                "one_to_one_nat"
              ]
            },
            "nat": {
              "type": "object",
              "properties": {
                "lan_ip": {
                  "type": "string"
                },
                "lan_port": {
                  "type": "integer"
                },
                "outbound": {
                  "type": "boolean"
                }
              },
              "required": [
                "lan_ip"
              ]
            },
            "interface": {
              "type": "string",
              "description": "The name of the interface from which traffic should be forwarded"
            },
            "subinterfaceId": {
              "type": "integer"
            }
          },
          "required": [
            "type",
            "nat",
            "interface"
          ]
        },
        "ruleLogicalId": {
          "type": "string"
        }
      },
      "required": [
        "match",
        "action"
      ]
    },
    "firewall_outbound_rule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/firewall_rule_match"
        },
        "action": {
          "type": "object",
          "properties": {
            "allow_or_deny": {
              "type": "string",
              "enum": [
                "allow",
                "deny",
                "drop",
                "reject",
                "skip"
              ]
            }
          }
        },
        "ruleLogicalId": {
          "type": "string"
        }
      },
      "required": [
        "match",
        "action"
      ]
    },
    "netflow_filter": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/netflow_filter_data"
            }
          }
        }
      ]
    },
    "netflow_filter_data": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "match": {
          "$ref": "#/definitions/netflow_filter_rule"
        },
        "action": {
          "type": "object",
          "properties": {
            "allow_or_deny": {
              "type": "string",
              "enum": [
                "allow",
                "deny"
              ]
            }
          },
          "required": [
            "allow_or_deny"
          ]
        }
      },
      "required": [
        "match",
        "action",
        "name"
      ]
    },
    "netflow_filter_rule": {
      "type": "object",
      "properties": {
        "appid": {
          "type": "integer",
          "description": "Integer ID corresponding to an application in the network-level application map"
        },
        "classid": {
          "type": "integer",
          "description": "Integer ID corresponding to an application class in the network-level application map"
        },
        "dscp": {
          "type": "integer",
          "description": "Integer ID indicating DSCP classification, where mappings are as follows: [EF:46,VA:44,AF11:10,AF12:12,AF13:14,AF21:18,AF22:20,AF23:22,AF31:26,AF32:28,AF33:30,AF41:34,AF42:36,AF43:38,CS0:0,CS1:8,CS2:16,CS3:24,CS4:32,CS5:40,CS6:48,CS7:56]"
        },
        "sip": {
          "type": "string",
          "description": "Source IP address"
        },
        "sport_high": {
          "type": "integer",
          "description": "Upper bound of a source port range"
        },
        "sport_low": {
          "type": "integer",
          "description": "Lower bound of a source port range"
        },
        "sAddressGroup": {
          "type": "string",
          "description": "Source address group reference"
        },
        "sPortGroup": {
          "type": "string",
          "description": "Source port group reference"
        },
        "ssm": {
          "type": "string",
          "description": "Source subnet mask, e.g. 255.255.255.0"
        },
        "smac": {
          "type": "string",
          "description": "Source MAC address"
        },
        "svlan": {
          "type": "integer",
          "description": "Integer ID for the source VLAN"
        },
        "os_version": {
          "type": "integer",
          "description": "Index corresponding to the OS in the array: [OTHER,WINDOWS,LINUX,MACOS,IOS,ANDROID,EDGE]"
        },
        "hostname": {
          "type": "string"
        },
        "dip": {
          "type": "string",
          "description": "Destination IP address"
        },
        "dport_low": {
          "type": "integer",
          "description": "Lower bound of a destination port range"
        },
        "dport_high": {
          "type": "integer",
          "description": "Upper bound of a destination port range"
        },
        "dAddressGroup": {
          "type": "string",
          "description": "Destination address group reference"
        },
        "dPortGroup": {
          "type": "string",
          "description": "Destination port group reference"
        },
        "dsm": {
          "type": "string",
          "description": "Destination subnet mask e.g. 255.255.255.0"
        },
        "dmac": {
          "type": "string",
          "description": "Destination MAC address"
        },
        "dvlan": {
          "type": "integer",
          "description": "Integer ID for the destination VLAN"
        },
        "proto": {
          "type": "integer",
          "description": "Integer ID corresponding to a protocol"
        },
        "s_rule_type": {
          "type": "string",
          "enum": [
            "exact",
            "prefix",
            "wildcard",
            "netmask"
          ],
          "description": "Source rule type"
        },
        "d_rule_type": {
          "type": "string",
          "enum": [
            "exact",
            "prefix",
            "wildcard",
            "netmask"
          ],
          "description": "Destination rule type"
        }
      }
    },
    "firewall_rule_match": {
      "type": "object",
      "properties": {
        "appid": {
          "type": "integer",
          "description": "Integer ID corresponding to an application in the network-level application map"
        },
        "classid": {
          "type": "integer",
          "description": "Integer ID corresponding to an application class in the network-level application map"
        },
        "dscp": {
          "type": "integer",
          "description": "Integer ID indicating DSCP classification, where mappings are as follows: [EF:46,VA:44,AF11:10,AF12:12,AF13:14,AF21:18,AF22:20,AF23:22,AF31:26,AF32:28,AF33:30,AF41:34,AF42:36,AF43:38,CS0:0,CS1:8,CS2:16,CS3:24,CS4:32,CS5:40,CS6:48,CS7:56]"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6",
            "IPv4v6"
          ],
          "description": "Ip Version /Addressing Version"
        },
        "sip": {
          "type": "string",
          "description": "Source IP address"
        },
        "sipV6": {
          "type": "string",
          "description": "Source IPv6 address"
        },
        "sport_high": {
          "type": "integer",
          "description": "Upper bound of a source port range"
        },
        "sport_low": {
          "type": "integer",
          "description": "Lower bound of a source port range"
        },
        "sAddressGroup": {
          "type": "string",
          "description": "Source address group reference"
        },
        "sPortGroup": {
          "type": "string",
          "description": "Source port group reference"
        },
        "ssm": {
          "type": "string",
          "description": "Source subnet mask, e.g. 255.255.255.0"
        },
        "smac": {
          "type": "string",
          "description": "Source MAC address"
        },
        "svlan": {
          "type": "integer",
          "description": "Integer ID for the source VLAN"
        },
        "sInterface": {
          "type": "string"
        },
        "os_version": {
          "type": "integer",
          "description": "Index corresponding to the OS in the array: [OTHER,WINDOWS,LINUX,MACOS,IOS,ANDROID,EDGE]"
        },
        "hostname": {
          "type": "string"
        },
        "dip": {
          "type": "string",
          "description": "Destination IP address"
        },
        "dipV6": {
          "type": "string",
          "description": "Destination IPv6 address"
        },
        "dport_low": {
          "type": "integer",
          "description": "Lower bound of a destination port range"
        },
        "dport_high": {
          "type": "integer",
          "description": "Upper bound of a destination port range"
        },
        "dAddressGroup": {
          "type": "string",
          "description": "Destination address group reference"
        },
        "dPortGroup": {
          "type": "string",
          "description": "Destination port group reference"
        },
        "dsm": {
          "type": "string",
          "description": "Destination subnet mask e.g. 255.255.255.0"
        },
        "dmac": {
          "type": "string",
          "description": "Destination MAC address"
        },
        "dvlan": {
          "type": "integer",
          "description": "Integer ID for the destination VLAN"
        },
        "dInterface": {
          "type": "string"
        },
        "proto": {
          "type": "integer",
          "description": "Integer ID corresponding to a protocol"
        },
        "s_rule_type": {
          "type": "string",
          "enum": [
            "exact",
            "prefix",
            "wildcard",
            "netmask"
          ],
          "description": "Source rule type"
        },
        "d_rule_type": {
          "type": "string",
          "enum": [
            "exact",
            "prefix",
            "wildcard",
            "netmask"
          ],
          "description": "Destination rule type"
        }
      }
    },
    "QOS": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/QOSData"
            },
            "refs": {
              "$ref": "#/definitions/QOSRefs"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "QOSData": {
      "type": "object",
      "properties": {
        "serviceRateLimit": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "inputType": {
              "type": "string"
            },
            "value": {
              "type": "integer"
            }
          },
          "required": [
            "enabled"
          ]
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QOSSegments"
          }
        }
      },
      "required": [
        "segments"
      ]
    },
    "QOSSegments": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QOS_business_rules"
          }
        },
        "defaults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QOS_business_rules"
          }
        },
        "webProxy": {
          "type": "object",
          "properties": {
            "providers": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "cosMapping": {
          "type": "object",
          "properties": {
            "lsInputType": {
              "type": "string"
            },
            "bulk": {
              "$ref": "#/definitions/cos_mapping"
            },
            "realtime": {
              "$ref": "#/definitions/cos_mapping"
            },
            "transactional": {
              "$ref": "#/definitions/cos_mapping"
            }
          }
        },
        "segment": {
          "$ref": "#/definitions/configuration_module_segment_metadata"
        }
      },
      "required": [
        "rules",
        "webProxy",
        "segment"
      ]
    },
    "nat_object": {
      "type": "object",
      "properties": {
        "sourceIp": {
          "type": "string"
        },
        "destIp": {
          "type": "string"
        }
      }
    },
    "QOS_business_rules": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "match": {
          "type": "object",
          "properties": {
            "appid": {
              "type": "integer"
            },
            "classid": {
              "type": "integer"
            },
            "dscp": {
              "type": "integer",
              "description": "Integer ID indicating DSCP classification, where mappings are as follows: [EF:46,VA:44,AF11:10,AF12:12,AF13:14,AF21:18,AF22:20,AF23:22,AF31:26,AF32:28,AF33:30,AF41:34,AF42:36,AF43:38,CS0:0,CS1:8,CS2:16,CS3:24,CS4:32,CS5:40,CS6:48,CS7:56]"
            },
            "ipVersion": {
              "type": "string",
              "enum": [
                "IPv4",
                "IPv6",
                "IPv4v6"
              ],
              "description": "Ip Version /Addressing Version"
            },
            "sip": {
              "type": "string"
            },
            "sipV6": {
              "type": "string",
              "description": "Source IPv6 address"
            },
            "sport_high": {
              "type": "integer"
            },
            "sport_low": {
              "type": "integer"
            },
            "sAddressGroup": {
              "type": "string",
              "description": "Source address group reference"
            },
            "sPortGroup": {
              "type": "string",
              "description": "Source port group reference"
            },
            "ssm": {
              "type": "string"
            },
            "svlan": {
              "type": "integer"
            },
            "sInterface": {
              "type": "string"
            },
            "os_version": {
              "type": "integer",
              "description": "Index corresponding to the OS in the array: [OTHER,WINDOWS,LINUX,MACOS,IOS,ANDROID,EDGE]"
            },
            "hostname": {
              "type": "string"
            },
            "dip": {
              "type": "string"
            },
            "dipV6": {
              "type": "string",
              "description": "Destination IPv6 address"
            },
            "dport_low": {
              "type": "integer"
            },
            "dport_high": {
              "type": "integer"
            },
            "dAddressGroup": {
              "type": "string",
              "description": "Destination address group reference"
            },
            "dPortGroup": {
              "type": "string",
              "description": "Destination port group reference"
            },
            "dsm": {
              "type": "string"
            },
            "dvlan": {
              "type": "integer"
            },
            "proto": {
              "type": "integer"
            },
            "s_rule_type": {
              "type": "string",
              "enum": [
                "exact",
                "prefix",
                "wildcard",
                "netmask"
              ]
            },
            "d_rule_type": {
              "type": "string",
              "enum": [
                "exact",
                "prefix",
                "wildcard",
                "netmask"
              ]
            }
          }
        },
        "action": {
          "type": "object",
          "properties": {
            "routeType": {
              "type": "string"
            },
            "allowConditionalBh": {
              "type": "boolean"
            },
            "userDisableConditionalBh": {
              "type": "boolean"
            },
            "edge2EdgeRouteAction": {
              "$ref": "#/definitions/route_action_object"
            },
            "edge2DataCenterRouteAction": {
              "$ref": "#/definitions/route_action_object"
            },
            "edge2CloudRouteAction": {
              "$ref": "#/definitions/route_action_object"
            },
            "QoS": {
              "type": "object"
            },
            "sla": {
              "type": "object"
            },
            "nat": {
              "$ref": "#/definitions/nat_object"
            },
            "natIpVersion": {
              "type": "string",
              "enum": [
                "IPv4",
                "IPv6",
                "IPv4v6"
              ],
              "description": "NatIp Version same as ipVersion"
            },
            "natV6": {
              "$ref": "#/definitions/nat_object"
            }
          }
        },
        "ruleLogicalId": {
          "type": "string",
          "description": "Globally unique identifier for the policy rule"
        }
      }
    },
    "route_action_object": {
      "type": "object",
      "properties": {
        "interface": {
          "type": "string"
        },
        "linkInternalLogicalId": {
          "type": "string"
        },
        "linkPolicy": {
          "type": "string"
        },
        "routeCfg": {
          "type": "object"
        },
        "routePolicy": {
          "type": "string"
        },
        "serviceGroup": {
          "type": "string"
        },
        "vlanId": {
          "type": "integer"
        },
        "wanlink": {
          "type": "string"
        },
        "linkCosLogicalId": {
          "type": "string"
        },
        "linkOuterDscpTag": {
          "type": "string"
        },
        "linkInnerDscpTag": {
          "type": "string"
        }
      }
    },
    "cos_mapping": {
      "type": "object",
      "properties": {
        "high": {
          "$ref": "#/definitions/cos_mapping_value"
        },
        "normal": {
          "$ref": "#/definitions/cos_mapping_value"
        },
        "low": {
          "$ref": "#/definitions/cos_mapping_value"
        }
      }
    },
    "cos_mapping_value": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer"
        },
        "ratelimit": {
          "type": "boolean"
        }
      }
    },
    "QOSRefs": {
      "type": "object",
      "properties": {
        "deviceSettings:backHaulEdge": {
          "type": "object"
        },
        "deviceSettings:dataCenter": {
          "type": "object"
        }
      }
    },
    "edgeDeviceSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/edgeDeviceSettingsData"
            },
            "refs": {
              "$ref": "#/definitions/deviceSettingsRefs"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "edgeDeviceSettingsData": {
      "type": "object",
      "properties": {
        "bgp": {
          "type": "object",
          "properties": {
            "ASN": {
              "type": "string"
            },
            "connectedRoutes": {
              "type": "boolean"
            },
            "disableASPathCarryOver": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "filters": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/bgp_filter_rule"
                    }
                  }
                }
              }
            },
            "holdtime": {
              "type": "string"
            },
            "keepalive": {
              "type": "string"
            },
            "neighbors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/config_edge_bgp_neighbor"
              }
            },
            "networks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cidrIp": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  }
                }
              }
            },
            "overlayPrefix": {
              "type": "boolean"
            },
            "propagateUplink": {
              "type": "boolean"
            },
            "routerId": {
              "type": "string"
            },
            "uplinkCommunity": {
              "type": "integer"
            }
          }
        },
        "lan": {
          "type": "object",
          "properties": {
            "networks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "space": {
                    "type": "string"
                  },
                  "guest": {
                    "type": "boolean"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "advertise": {
                    "type": "boolean"
                  },
                  "pingResponse": {
                    "type": "boolean",
                    "default": true
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "dhcp": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "leaseTimeSeconds": {
                        "type": "integer"
                      },
                      "override": {
                        "type": "boolean"
                      },
                      "dhcpRelay": {
                        "type": "object",
                        "properties": {
                          "servers": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "sourceFromSecondaryIp": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "staticReserved": {
                    "type": "integer"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  },
                  "cidrIp": {
                    "type": "string"
                  },
                  "baseDhcpAddr": {
                    "type": "integer",
                    "description": "An offset from the cidrIp including staticReserved (if any)"
                  },
                  "numDhcpAddr": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "interfaces": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "vlanId": {
                    "type": "integer"
                  },
                  "managementIp": {
                    "type": "string"
                  },
                  "disabled": {
                    "type": "boolean"
                  },
                  "disableV4": {
                    "type": "boolean"
                  },
                  "disableV6": {
                    "type": "boolean"
                  },
                  "v6Detail": {
                    "type": "object",
                    "properties": {
                      "override": {
                        "type": "boolean"
                      },
                      "advertise": {
                        "type": "boolean"
                      },
                      "addressing": {
                        "type": "object",
                        "properties": {
                          "cidrIp": {
                            "type": "string"
                          },
                          "cidrPrefix": {
                            "type": "integer"
                          },
                          "netmask": {
                            "type": "string"
                          }
                        }
                      },
                      "dhcpServer": {
                        "$ref": "#/definitions/device_settings_dhcp_v6"
                      },
                      "routerAdvertisementHostSettings": {
                        "$ref": "#/definitions/device_settings_router_advertisement_host_settings"
                      }
                    }
                  },
                  "secondaryIp": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "advertise": {
                          "type": "boolean"
                        },
                        "override": {
                          "type": "boolean"
                        },
                        "pingResponse": {
                          "type": "boolean"
                        },
                        "addressing": {
                          "type": "object",
                          "properties": {
                            "cidrIp": {
                              "type": "string"
                            },
                            "cidrPrefix": {
                              "type": "number"
                            },
                            "netmask": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "routedInterfaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "addressing": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "DHCP",
                      "STATIC",
                      "PPPOE"
                    ]
                  },
                  "cidrPrefix": {
                    "type": "integer"
                  },
                  "cidrIp": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "gateway": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              },
              "advertise": {
                "type": "boolean"
              },
              "pingResponse": {
                "type": "boolean",
                "default": true
              },
              "evdslModemAttached": {
                "type": "boolean",
                "default": false
              },
              "disabled": {
                "type": "boolean"
              },
              "dhcpServer": {
                "$ref": "#/definitions/edgeDeviceSettingsDataDhcpServer"
              },
              "encryptOverlay": {
                "type": "boolean"
              },
              "l2": {
                "type": "object",
                "properties": {
                  "autonegotiation": {
                    "type": "boolean"
                  },
                  "speed": {
                    "type": "string"
                  },
                  "duplex": {
                    "type": "string"
                  },
                  "MTU": {
                    "type": "integer"
                  },
                  "losDetection": {
                    "type": "boolean"
                  },
                  "probeInterval": {
                    "type": "string"
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "natDirect": {
                "type": "boolean"
              },
              "ospf": {
                "type": "object",
                "properties": {
                  "area": {
                    "type": "integer"
                  },
                  "authentication": {
                    "type": "boolean"
                  },
                  "authId": {
                    "type": "integer"
                  },
                  "authPassphrase": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "deadTimer": {
                    "type": "integer"
                  },
                  "mode": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "helloTimer": {
                    "type": "integer"
                  },
                  "inboundRouteLearning": {
                    "type": "object",
                    "properties": {
                      "defaultAction": {
                        "type": "string"
                      },
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "md5Authentication": {
                    "type": "boolean"
                  },
                  "MTU": {
                    "type": "integer"
                  },
                  "outboundRouteAdvertisement": {
                    "type": "object",
                    "properties": {
                      "defaultAction": {
                        "type": "string"
                      },
                      "filters": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "passive": {
                    "type": "boolean"
                  },
                  "vlanId": {
                    "type": "integer"
                  }
                }
              },
              "override": {
                "type": "boolean"
              },
              "subinterfaces": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "addressing": {
                      "type": "object",
                      "properties": {
                        "cidrIp": {
                          "type": "string"
                        },
                        "cidrPrefix": {
                          "type": "integer"
                        },
                        "gateway": {
                          "type": "string"
                        },
                        "netmask": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "DHCP",
                            "STATIC",
                            "PPPOE"
                          ]
                        },
                        "username": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        }
                      }
                    },
                    "advertise": {
                      "type": "boolean"
                    },
                    "pingResponse": {
                      "type": "boolean",
                      "default": true
                    },
                    "dhcpServer": {
                      "$ref": "#/definitions/edgeDeviceSettingsDataDhcpServer"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "natDirect": {
                      "type": "boolean"
                    },
                    "ospf": {
                      "type": "object",
                      "properties": {
                        "area": {
                          "type": "integer"
                        },
                        "authentication": {
                          "type": "boolean"
                        },
                        "authId": {
                          "type": "integer"
                        },
                        "authPassphrase": {
                          "type": "string"
                        },
                        "cost": {
                          "type": "integer"
                        },
                        "deadTimer": {
                          "type": "integer"
                        },
                        "mode": {
                          "type": "string"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "helloTimer": {
                          "type": "integer"
                        },
                        "inboundRouteLearning": {
                          "type": "object",
                          "properties": {
                            "defaultAction": {
                              "type": "string"
                            },
                            "filters": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "md5Authentication": {
                          "type": "boolean"
                        },
                        "MTU": {
                          "type": "integer"
                        },
                        "outboundRouteAdvertisement": {
                          "type": "object",
                          "properties": {
                            "defaultAction": {
                              "type": "string"
                            },
                            "filters": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "passive": {
                          "type": "boolean"
                        }
                      }
                    },
                    "override": {
                      "type": "boolean"
                    },
                    "subinterfaceId": {
                      "type": "integer"
                    },
                    "subinterfaceType": {
                      "type": "string"
                    },
                    "vlanId": {
                      "type": "integer",
                      "description": "static only"
                    },
                    "trusted": {
                      "type": "boolean"
                    },
                    "rpf": {
                      "type": "string",
                      "enum": [
                        "SPECIFIC",
                        "LOOSE",
                        "DISABLED"
                      ]
                    }
                  }
                }
              },
              "vlanId": {
                "type": "integer",
                "description": "static only"
              },
              "wanOverlay": {
                "type": "string",
                "enum": [
                  "DISABLED",
                  "AUTO_DISCOVERED",
                  "USER_DEFINED"
                ]
              },
              "trusted": {
                "type": "boolean"
              },
              "rpf": {
                "type": "string",
                "enum": [
                  "SPECIFIC",
                  "LOOSE",
                  "DISABLED"
                ]
              },
              "underlayAccounting": {
                "type": "boolean",
                "default": true
              }
            }
          }
        },
        "routes": {
          "type": "object",
          "properties": {
            "icmpProbes": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "icmpResponders": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "static": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "destination": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "sourceIp": {
                    "type": "string"
                  },
                  "gateway": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "preferred": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "string"
                  },
                  "wanInterface": {
                    "type": "string"
                  },
                  "icmpProbeLogicalId": {
                    "type": "string"
                  },
                  "vlanId": {
                    "type": "integer"
                  },
                  "advertise": {
                    "type": "boolean"
                  },
                  "subinterfaceId": {
                    "type": "integer"
                  }
                }
              }
            },
            "staticV6": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "destination": {
                    "type": "string"
                  },
                  "netmask": {
                    "type": "string"
                  },
                  "sourceIp": {
                    "type": "string"
                  },
                  "gateway": {
                    "type": "string"
                  },
                  "cost": {
                    "type": "integer"
                  },
                  "preferred": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "string"
                  },
                  "cidrPrefix": {
                    "type": "string"
                  },
                  "wanInterface": {
                    "type": "string"
                  },
                  "icmpProbeLogicalId": {
                    "type": "string"
                  },
                  "vlanId": {
                    "type": "integer"
                  },
                  "advertise": {
                    "type": "boolean"
                  },
                  "subinterfaceId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "ha": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "interface": {
              "type": "string"
            },
            "vmacoverride": {
              "type": "boolean"
            },
            "nodes": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "serialNumber": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "dns": {
          "type": "object",
          "properties": {
            "primaryProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "backupProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "privateProviders": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            }
          }
        },
        "netflow": {
          "type": "object",
          "properties": {
            "enable": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "version": {
              "type": "integer"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "vqm": {
          "type": "object",
          "properties": {
            "enable": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "protocol": {
              "type": "string"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "vrrp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cidrIp": {
                    "type": "string"
                  },
                  "interface": {
                    "type": "string"
                  },
                  "interval": {
                    "type": "integer"
                  },
                  "preempt": {
                    "type": "boolean"
                  },
                  "preemptDelay": {
                    "type": "integer"
                  },
                  "priority": {
                    "type": "integer"
                  },
                  "subinterfaceId": {
                    "type": "integer"
                  },
                  "vlanId": {
                    "type": "integer"
                  },
                  "vrid": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "snmp": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer"
            },
            "snmpv2c": {
              "type": "object",
              "properties": {
                "enable": {
                  "type": "boolean"
                },
                "enabled": {
                  "type": "boolean"
                },
                "community": {
                  "type": "string"
                },
                "allowedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "snmpv3": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "enable": {
                  "type": "boolean"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "passphrase": {
                        "type": "string"
                      },
                      "authAlg": {
                        "type": "string"
                      },
                      "privacy": {
                        "type": "boolean"
                      },
                      "encrAlg": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "multiSourceQos": {
          "type": "object",
          "properties": {
            "enable": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "highRatio": {
              "type": "integer"
            },
            "normalRatio": {
              "type": "integer"
            },
            "lowRatio": {
              "type": "integer"
            },
            "maxCapThreshold": {
              "type": "integer"
            },
            "minCapThreshold": {
              "type": "integer"
            }
          }
        },
        "tacacs": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string"
            },
            "sourceInterface": {
              "type": "string"
            }
          }
        }
      }
    },
    "edgeDeviceSettingsDataDhcpServer": {
      "type": "object",
      "properties": {
        "baseDhcpAddr": {
          "type": "integer"
        },
        "enabled": {
          "type": "boolean"
        },
        "leaseTimeSeconds": {
          "type": "integer"
        },
        "dhcpRelay": {
          "type": "object",
          "properties": {
            "servers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "sourceFromSecondaryIp": {
              "type": "boolean"
            }
          }
        },
        "numDhcpAddr": {
          "type": "integer"
        },
        "staticReserved": {
          "type": "integer"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "option": {
                "type": "integer"
              },
              "value": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "metaData": {
                "type": "object",
                "properties": {
                  "dataType": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "display": {
                    "type": "boolean"
                  },
                  "list": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "option": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "analyticsSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/analyticsSettingsData"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "analyticsSettingsData": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "enterpriseObjectId": {
          "type": "string"
        },
        "selfHealing": {
          "type": "boolean"
        },
        "analyticsEndpoint": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string"
            },
            "cert": {
              "type": "string"
            },
            "isDynamicIP": {
              "type": "boolean"
            }
          }
        },
        "configEndpoint": {
          "type": "object",
          "properties": {
            "host": {
              "type": "string"
            },
            "cert": {
              "type": "string"
            }
          }
        }
      }
    },
    "deviceSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/deviceSettingsData"
            },
            "refs": {
              "$ref": "#/definitions/deviceSettingsRefs"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "segmentBasedDeviceSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/segmentBasedDeviceSettingsData"
            },
            "refs": {
              "$ref": "#/definitions/deviceSettingsRefs"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "deviceSettingsRefs": {
      "type": "object",
      "properties": {
        "deviceSettings:authentication": {
          "type": "object"
        },
        "deviceSettings:css:provider": {
          "type": "object"
        },
        "deviceSettings:secureAccess:provider": {
          "type": "object"
        },
        "deviceSettings:css:site": {
          "type": "object"
        },
        "deviceSettings:edgeDirectNvs:provider": {
          "type": "object"
        },
        "deviceSettings:edgeDirectNvs:site": {
          "type": "object"
        },
        "deviceSettings:zscaler:iaasSubscription": {
          "type": "object"
        },
        "deviceSettings:zscaler:mtgreSite": {
          "type": "object"
        },
        "deviceSettings:zscaler:location": {
          "type": "object"
        },
        "deviceSettings:zscaler:subLocation": {
          "type": "object"
        },
        "deviceSettings:dns:backupProvider": {
          "type": "object"
        },
        "deviceSettings:dns:primaryProvider": {
          "type": "object"
        },
        "deviceSettings:dns:privateProviders": {
          "type": "object"
        },
        "deviceSettings:handOffGateways:gateways": {
          "type": "object"
        },
        "deviceSettings:lan:allocation": {
          "type": "object"
        },
        "deviceSettings:securityVnf:license": {
          "type": "object"
        },
        "deviceSettings:securityVnf:service": {
          "type": "object"
        },
        "deviceSettings:segment": {
          "type": "object"
        },
        "deviceSettings:segment:netflowCollectors": {
          "type": "object"
        },
        "deviceSettings:segment:netflowFilters": {
          "type": "object"
        },
        "deviceSettings:tacacs": {
          "type": "object"
        },
        "deviceSettings:vnfs:edge": {
          "type": "object"
        },
        "deviceSettings:vnfs:vnfImage": {
          "type": "object"
        },
        "deviceSettings:vpn:dataCenter": {
          "type": "object"
        },
        "deviceSettings:vpn:edgeHub": {
          "type": "object"
        },
        "deviceSettings:vpn:edgeHubCluster": {
          "type": "object"
        },
        "deviceSettings:webProxy:provider": {
          "type": "object"
        }
      }
    },
    "ref": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "configurationId": {
          "type": "integer"
        },
        "moduleId": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "segmentLogicalId": {
          "type": "string"
        },
        "segmentObjectId": {
          "type": "integer"
        },
        "ref": {
          "type": "string"
        }
      },
      "required": [
        "configurationId",
        "moduleId",
        "logicalId",
        "enterpriseObjectId",
        "segmentLogicalId",
        "segmentObjectId"
      ]
    },
    "deviceSettingsData": {
      "type": "object",
      "properties": {
        "lan": {
          "type": "object",
          "properties": {
            "allocation": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                },
                "assignableVlans": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "managementVlans": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "ospf": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "areas": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "bgp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "asn": {
              "type": "string"
            },
            "neighbors": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        },
        "dns": {
          "type": "object",
          "properties": {
            "primaryProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "backupProvider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            },
            "privateProviders": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string"
                }
              }
            }
          }
        },
        "authentication": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string"
            }
          }
        },
        "softwareUpdate": {
          "type": "object",
          "properties": {
            "windowed": {
              "type": "boolean"
            },
            "window": {
              "type": "object",
              "properties": {
                "day": {
                  "type": "integer"
                },
                "beginHour": {
                  "type": "integer"
                },
                "endHour": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "radioSettings": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "radios": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "radioId": {
                    "type": "integer"
                  },
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "band": {
                    "type": "string"
                  },
                  "channel": {
                    "type": "string"
                  },
                  "width": {
                    "type": "string"
                  },
                  "mode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "l2Settings": {
          "type": "object",
          "properties": {
            "overrideARPTimeout": {
              "type": "boolean"
            },
            "arpStaleTimeoutMinutes": {
              "type": "integer"
            },
            "arpDeadTimeoutMinutes": {
              "type": "integer"
            },
            "arpCleanupTimeoutMinutes": {
              "type": "integer"
            },
            "neighborDiscoveryReachableTime": {
              "type": "integer"
            }
          }
        },
        "globalIPv6Settings": {
          "$ref": "#/definitions/device_settings_globalIPv6_settings"
        },
        "netflow": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "version": {
              "type": "integer"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "vqm": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "protocol": {
              "type": "string"
            },
            "collectors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "snmp": {
          "type": "object",
          "properties": {
            "port": {
              "type": "integer"
            },
            "snmpv2c": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "community": {
                  "type": "string"
                },
                "allowedIp": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "snmpv3": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "passphrase": {
                        "type": "string"
                      },
                      "authAlg": {
                        "type": "string"
                      },
                      "privacy": {
                        "type": "boolean"
                      },
                      "encrAlg": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "multiSourceQos": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "highRatio": {
              "type": "integer"
            },
            "normalRatio": {
              "type": "integer"
            },
            "lowRatio": {
              "type": "integer"
            },
            "maxCapThreshold": {
              "type": "integer"
            },
            "minCapThreshold": {
              "type": "integer"
            }
          }
        },
        "models": {
          "type": "object",
          "properties": {
            "virtual": {
              "type": "object",
              "properties": {
                "routedInterfaces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "disabled": {
                        "type": "boolean"
                      },
                      "addressing": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "cidrPrefix": {
                            "type": "integer"
                          },
                          "cidrIp": {
                            "type": "string"
                          },
                          "netmask": {
                            "type": "string"
                          },
                          "gateway": {
                            "type": "string"
                          }
                        }
                      },
                      "wanOverlay": {
                        "type": "string"
                      },
                      "natDirect": {
                        "type": "boolean"
                      },
                      "ospf": {
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          },
                          "area": {
                            "type": "integer"
                          },
                          "authentication": {
                            "type": "boolean"
                          },
                          "authId": {
                            "type": "integer"
                          },
                          "authPassphrase": {
                            "type": "string"
                          },
                          "helloTimer": {
                            "type": "integer"
                          },
                          "deadTimer": {
                            "type": "integer"
                          },
                          "mode": {
                            "type": "string"
                          },
                          "md5Authentication": {
                            "type": "boolean"
                          },
                          "cost": {
                            "type": "integer"
                          },
                          "MTU": {
                            "type": "integer"
                          },
                          "passive": {
                            "type": "boolean"
                          },
                          "inboundRouteLearning": {
                            "type": "object",
                            "properties": {
                              "defaultAction": {
                                "type": "string"
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "outboundRouteAdvertisement": {
                            "type": "object",
                            "properties": {
                              "defaultAction": {
                                "type": "string"
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      },
                      "vlanId": {
                        "type": "integer"
                      },
                      "l2": {
                        "type": "object",
                        "properties": {
                          "autonegotiation": {
                            "type": "boolean"
                          },
                          "speed": {
                            "type": "string"
                          },
                          "duplex": {
                            "type": "string"
                          },
                          "MTU": {
                            "type": "integer"
                          },
                          "losDetection": {
                            "type": "boolean"
                          },
                          "probeInterval": {
                            "type": "string"
                          }
                        }
                      },
                      "underlayAccounting": {
                        "type": "boolean",
                        "default": true
                      },
                      "trusted": {
                        "type": "boolean"
                      },
                      "rpf": {
                        "type": "string",
                        "enum": [
                          "SPECIFIC",
                          "LOOSE",
                          "DISABLED"
                        ]
                      }
                    }
                  }
                },
                "lan": {
                  "type": "object",
                  "properties": {
                    "interfaces": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "space": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "cwp": {
                            "type": "boolean"
                          },
                          "portMode": {
                            "type": "string"
                          },
                          "untaggedVlan": {
                            "type": "string"
                          },
                          "disabled": {
                            "type": "boolean"
                          },
                          "l2": {
                            "type": "object",
                            "properties": {
                              "autonegotiation": {
                                "type": "boolean"
                              },
                              "speed": {
                                "type": "string"
                              },
                              "duplex": {
                                "type": "string"
                              },
                              "MTU": {
                                "type": "integer"
                              },
                              "losDetection": {
                                "type": "boolean"
                              },
                              "probeInterval": {
                                "type": "string"
                              }
                            }
                          },
                          "vlanIds": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "vpn": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "edgeToDataCenter": {
              "type": "boolean"
            },
            "ref": {
              "type": "string"
            },
            "edgeToEdgeHub": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "ref": {
                  "type": "string"
                },
                "vpnHubs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/device_settings_vpn_hub"
                  }
                }
              }
            },
            "edgeToEdge": {
              "type": "boolean"
            },
            "edgeToEdgeDetail": {
              "type": "object",
              "properties": {
                "useCloudGateway": {
                  "type": "boolean"
                },
                "encryptionProtocol": {
                  "type": "string"
                },
                "dynamic": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string"
                    },
                    "timeout": {
                      "type": "integer"
                    }
                  }
                },
                "vpnHubs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/device_settings_vpn_hub"
                  }
                },
                "autoSelectVpnHubs": {
                  "type": "boolean"
                }
              }
            },
            "conditionalBackhaul": {
              "type": "boolean"
            },
            "backHaulEdges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_vpn_hub"
              }
            }
          }
        }
      }
    },
    "segmentBasedDeviceSettingsData": {
      "type": "object",
      "properties": {
        "bfd": {
          "$ref": "#/definitions/device_settings_bfd"
        },
        "ha": {
          "$ref": "#/definitions/device_settings_ha"
        },
        "lan": {
          "$ref": "#/definitions/device_settings_lan"
        },
        "loopbackInterfaces": {
          "$ref": "#/definitions/device_settings_loopback_interfaces"
        },
        "models": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/device_settings_model"
          }
        },
        "multiSourceQos": {
          "$ref": "#/definitions/device_settings_multi_source_qos"
        },
        "ntp": {
          "$ref": "#/definitions/device_settings_ntp"
        },
        "ntpServer": {
          "$ref": "#/definitions/device_settings_ntp_as_server"
        },
        "radioSettings": {
          "$ref": "#/definitions/device_settings_radio_settings"
        },
        "l2Settings": {
          "$ref": "#/definitions/device_settings_l2_settings"
        },
        "globalIPv6Settings": {
          "$ref": "#/definitions/device_settings_globalIPv6_settings"
        },
        "routedInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_routed_interface"
          }
        },
        "segments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_segment"
          }
        },
        "snmp": {
          "$ref": "#/definitions/device_settings_snmp"
        },
        "softwareUpdate": {
          "$ref": "#/definitions/device_settings_software_update"
        },
        "tacacs": {
          "$ref": "#/definitions/device_settings_tacacs"
        },
        "vnfs": {
          "$ref": "#/definitions/device_settings_vnfs"
        },
        "zscaler": {
          "$ref": "#/definitions/device_settings_zscaler"
        }
      }
    },
    "device_settings_authentication": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "sourceInterface": {
          "type": "string"
        },
        "ref": {
          "type": "string",
          "enum": [
            "deviceSettings:authentication"
          ]
        }
      }
    },
    "device_settings_bfd": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bfd_rule"
          }
        },
        "rulesV6": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bfd_rule"
          }
        }
      }
    },
    "device_settings_bfd_rule": {
      "type": "object",
      "properties": {
        "peerAddress": {
          "type": "string"
        },
        "localAddress": {
          "type": "string"
        },
        "multihop": {
          "type": "boolean"
        },
        "detectMultiplier": {
          "type": "integer"
        },
        "receiveInterval": {
          "type": "integer"
        },
        "transmitInterval": {
          "type": "integer"
        }
      }
    },
    "device_settings_bgp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "ASN": {
          "type": "string"
        },
        "connectedRoutes": {
          "type": "boolean"
        },
        "defaultRoute": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "advertise": {
              "type": "string"
            }
          }
        },
        "disableASPathCarryOver": {
          "type": "boolean"
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_filter"
          }
        },
        "holdtime": {
          "type": "string"
        },
        "isEdge": {
          "type": "boolean"
        },
        "keepalive": {
          "type": "string"
        },
        "neighbors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_neighbor"
          }
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_network"
          }
        },
        "ospf": {
          "$ref": "#/definitions/device_settings_bgp_ospf_redistribution"
        },
        "overlayPrefix": {
          "type": "boolean"
        },
        "propagateUplink": {
          "type": "boolean"
        },
        "routerId": {
          "type": "string"
        },
        "uplinkCommunity": {
          "type": "string"
        },
        "v6Detail": {
          "type": "object",
          "properties": {
            "defaultRoute": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "advertise": {
                  "type": "string"
                }
              }
            },
            "connectedRoutes": {
              "type": "boolean"
            },
            "neighbors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_bgp_neighbor"
              }
            },
            "networks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_bgp_network"
              }
            },
            "overlayPrefix": {
              "type": "boolean"
            },
            "disableASPathCarryOver": {
              "type": "boolean"
            },
            "propagateUplink": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "device_settings_bgp_filter": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_bgp_filter_rule"
          }
        }
      }
    },
    "device_settings_bgp_filter_rule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "PERMIT",
                "DENY"
              ]
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "AS_PATH_PREPEND",
                      "METRIC",
                      "LOCAL_PREFERENCE",
                      "COMMUNITY"
                    ]
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "match": {
          "type": "object",
          "properties": {
            "exactMatch": {
              "type": "boolean"
            },
            "type": {
              "type": "string",
              "enum": [
                "COMMUNITY",
                "PREFIX"
              ]
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "device_settings_bgp_neighbor": {
      "type": "object",
      "properties": {
        "neighborAS": {
          "type": "string"
        },
        "neighborIp": {
          "type": "string"
        },
        "neighborTag": {
          "type": "string",
          "enum": [
            "UPLINK"
          ]
        },
        "sourceInterface": {
          "type": "string"
        },
        "inboundFilter": {
          "$ref": "#/definitions/device_settings_bgp_filter_set"
        },
        "outboundFilter": {
          "$ref": "#/definitions/device_settings_bgp_filter_set"
        },
        "localIp": {
          "type": "string"
        },
        "maxHop": {
          "type": "string"
        },
        "allowAS": {
          "type": "boolean"
        },
        "connect": {
          "type": "string"
        },
        "defaultRoute": {
          "type": "boolean"
        },
        "holdtime": {
          "type": "string"
        },
        "keepalive": {
          "type": "string"
        },
        "enableMd5": {
          "type": "boolean"
        },
        "md5Password": {
          "type": "string"
        }
      }
    },
    "device_settings_bgp_filter_set": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "device_settings_bgp_network": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "segmentId": {
          "type": "string"
        }
      }
    },
    "device_settings_bgp_ospf_redistribution": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "integer"
        }
      }
    },
    "device_settings_cloud_security": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "config": {
          "type": "object",
          "properties": {
            "tunnelingProtocol": {
              "type": "string",
              "enum": [
                "GRE",
                "IPSEC"
              ]
            },
            "authenticationAlgorithm": {
              "type": "string"
            },
            "encryptionAlgorithm": {
              "type": "string"
            },
            "redirect": {
              "type": "string"
            },
            "IKEPROP": {
              "type": "object",
              "properties": {
                "protocolVersion": {
                  "type": "integer"
                }
              }
            },
            "GREPROP": {
              "type": "object",
              "properties": {
                "keepaliveIntervalSecs": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 30
                },
                "keepaliveRetries": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 10
                }
              }
            }
          }
        },
        "provider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:css:provider"
              ]
            }
          }
        },
        "sites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_cloud_security_site"
          }
        }
      }
    },
    "device_settings_secure_access": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "provider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:secureAccess:provider"
              ]
            },
            "logicalId": {
              "type": "string"
            }
          }
        }
      }
    },
    "device_settings_zscaler": {
      "type": "object",
      "properties": {
        "config": {
          "type": "object",
          "properties": {
            "override": {
              "type": "boolean"
            },
            "enabled": {
              "type": "boolean"
            },
            "vendor": {
              "type": "string",
              "enum": [
                "zscaler"
              ]
            },
            "cloud": {
              "type": "string",
              "enum": [
                "zscaler.net",
                "zscalerone.net",
                "zscalertwo.net",
                "zscalerthree.net",
                "zscalerbeta.net",
                "zscloud.net",
                "zsdevel.net"
              ]
            },
            "provider": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:zscaler:iaasSubscription"
                },
                "logicalId": {
                  "type": "string"
                }
              }
            },
            "location": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": null
                },
                "gwProperties": {
                  "$ref": "#/definitions/device_settings_zscaler_location_gateway_options"
                }
              }
            },
            "subLocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_zscaler_sublocations"
              }
            },
            "mtgre": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "deployment": {
          "type": "object",
          "properties": {
            "location": {
              "type": "object",
              "properties": {
                "logicalId": {
                  "type": "string"
                },
                "cloud": {
                  "type": "string"
                }
              }
            },
            "mtgreSite": {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:zscaler:mtgreSite"
                },
                "logicalId": {
                  "type": "string"
                }
              }
            },
            "subLocations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "internalId": {
                    "type": "string"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "cloud": {
                    "type": "string"
                  },
                  "otherSubLocation": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "device_settings_zscaler_sublocations": {
      "type": "object",
      "properties": {
        "internalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "otherSubLocation": {
          "type": "boolean"
        },
        "ruleId": {
          "type": "string",
          "default": ""
        },
        "gwProperties": {
          "$ref": "#/definitions/device_settings_zscaler_location_gateway_options"
        },
        "vlans": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "includeAllVlans": {
          "type": "boolean"
        },
        "includeAllLanInterfaces": {
          "type": "boolean"
        },
        "lanRoutedInterfaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipAddressSelectionManual": {
          "type": "boolean"
        },
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "device_settings_zscaler_location_gateway_options": {
      "type": "object",
      "properties": {
        "xffForwardEnabled": {
          "type": "boolean"
        },
        "authRequired": {
          "type": "boolean"
        },
        "aupEnabled": {
          "type": "boolean"
        },
        "aupBlockInternetUntilAccepted": {
          "type": "boolean"
        },
        "aupForceSslInspection": {
          "type": "boolean"
        },
        "aupTimeoutInDays": {
          "type": "number"
        },
        "cautionEnabled": {
          "type": "boolean"
        },
        "surrogateIP": {
          "type": "boolean"
        },
        "idleTimeInMinutes": {
          "type": "number"
        },
        "displayTimeUnit": {
          "type": "string",
          "enum": [
            "DAY",
            "HOUR",
            "MINUTE"
          ]
        },
        "surrogateIPEnforcedForKnownBrowsers": {
          "type": "boolean"
        },
        "surrogateRefreshTimeInMinutes": {
          "type": "number"
        },
        "surrogateRefreshTimeUnit": {
          "type": "string",
          "enum": [
            "DAY",
            "HOUR",
            "MINUTE"
          ]
        },
        "dnBandwidth": {
          "type": "number"
        },
        "upBandwidth": {
          "type": "number"
        },
        "ipsControl": {
          "type": "boolean"
        },
        "ofwEnabled": {
          "type": "boolean"
        }
      }
    },
    "device_settings_cloud_security_site": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/cloud_security_service_site_data"
        },
        "logicalId": {
          "type": "string"
        }
      }
    },
    "device_settings_nvs_from_edge": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "provider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:edgeDirectNvs:provider"
              ]
            }
          }
        },
        "providers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "logicalId": {
                "type": "string"
              },
              "config": {
                "type": "object",
                "properties": {
                  "useAllPublicWanLinks": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  }
                }
              },
              "sites": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/device_settings_nvs_from_edge_site"
                }
              }
            }
          }
        }
      }
    },
    "device_settings_nvs_from_edge_site": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/nvs_from_edge_site_data"
        },
        "logicalId": {
          "type": "string"
        }
      }
    },
    "device_settings_dns": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "sourceInterface": {
          "type": "string"
        },
        "primaryProvider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:dns:primaryProvider"
              ]
            }
          }
        },
        "backupProvider": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:dns:backupProvider"
              ]
            }
          }
        },
        "privateProviders": {
          "type": "object",
          "properties": {
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:dns:privateProviders"
              ]
            }
          }
        }
      }
    },
    "device_settings_ha": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "interface": {
          "type": "string"
        },
        "vmacoverride": {
          "type": "boolean"
        }
      }
    },
    "device_settings_handoff_gateways": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "autoSelect": {
          "type": "boolean"
        },
        "gatewayList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_handoff_gateway"
          }
        },
        "gateways": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/logicalid_reference"
          }
        }
      }
    },
    "device_settings_handoff_gateway": {
      "allOf": [
        {
          "$ref": "#/definitions/logicalid_reference"
        },
        {
          "properties": {
            "ipsecDetail": {
              "$ref": "#/definitions/device_settings_handoff_gateway_ipsec_detail"
            }
          }
        }
      ]
    },
    "device_settings_handoff_gateway_ipsec_detail": {
      "type": "object",
      "properties": {
        "ipsecGatewayAddress": {
          "type": "string"
        },
        "strictHostCheck": {
          "type": "boolean"
        }
      }
    },
    "device_settings_model": {
      "type": "object",
      "properties": {
        "lan": {
          "$ref": "#/definitions/device_settings_lan"
        },
        "routedInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_routed_interface"
          }
        }
      }
    },
    "device_settings_multicast": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "igmpHostQueryIntervalSeconds": {
          "type": "integer"
        },
        "igmpMaxQueryResponse": {
          "type": "integer"
        },
        "pimKeepAliveTimerSeconds": {
          "type": "integer"
        },
        "pimOnWanOverlay": {
          "$ref": "#/definitions/device_settings_multicast_pim_on_wan_overlay"
        },
        "pimPruneIntervalSeconds": {
          "type": "integer"
        },
        "rp": {
          "$ref": "#/definitions/device_settings_multicast_rp"
        }
      }
    },
    "device_settings_multicast_pim_on_wan_overlay": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "SOURCE_IP"
          ]
        },
        "sourceCidrIp": {
          "type": "string"
        },
        "sourceInterface": {
          "type": "string"
        }
      }
    },
    "device_settings_multicast_rp": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "STATIC"
          ]
        },
        "staticGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_multicast_rp_static_group"
          }
        }
      }
    },
    "device_settings_multicast_rp_static_group": {
      "type": "object",
      "properties": {
        "multicastGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rpAddress": {
          "type": "string"
        }
      }
    },
    "device_settings_netflow_collector": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "sourceInterface": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "allowAllSegment": {
          "type": "boolean"
        },
        "logicalId": {
          "type": "string"
        },
        "filterList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_netflow_filter_list"
          }
        }
      }
    },
    "device_settings_netflow_filter_list": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        }
      }
    },
    "device_settings_nat": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_nat_rule"
          },
          "maxItems": 256
        },
        "dualRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_nat_dual_rule"
          }
        }
      }
    },
    "device_settings_nat_rule": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "source",
            "destination"
          ]
        },
        "description": {
          "type": "string"
        },
        "insideCidrIp": {
          "type": "string",
          "format": "ipv4"
        },
        "insideCidrPrefix": {
          "type": "integer"
        },
        "insideNetmask": {
          "type": "string",
          "format": "ipv4"
        },
        "insidePort": {
          "type": "integer"
        },
        "outsideCidrIp": {
          "type": "string",
          "format": "ipv4"
        },
        "outsideCidrPrefix": {
          "type": "integer"
        },
        "outsideNetmask": {
          "type": "string",
          "format": "ipv4"
        },
        "outsidePort": {
          "type": "integer"
        }
      },
      "required": [
        "type",
        "insideCidrIp",
        "insideCidrPrefix",
        "insideNetmask",
        "outsideCidrIp",
        "outsideCidrPrefix",
        "outsideNetmask"
      ]
    },
    "device_settings_nat_dual_rule": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "srcInsideCidrIp": {
          "type": "string"
        },
        "srcInsideCidrPrefix": {
          "type": "integer"
        },
        "srcInsideCidrNetmask": {
          "type": "string"
        },
        "srcOutsideCidrIp": {
          "type": "string"
        },
        "srcOutsideCidrPrefix": {
          "type": "integer"
        },
        "srcOutsideCidrNetmask": {
          "type": "string"
        },
        "destInsideCidrIp": {
          "type": "string"
        },
        "destInsideCidrPrefix": {
          "type": "integer"
        },
        "destInsideCidrNetmask": {
          "type": "string"
        },
        "destOutsideCidrIp": {
          "type": "string"
        },
        "destOutsideCidrPrefix": {
          "type": "integer"
        },
        "destOutsideCidrNetmask": {
          "type": "string"
        }
      },
      "required": [
        "srcInsideCidrIp",
        "srcInsideCidrPrefix",
        "srcInsideCidrNetmask",
        "srcOutsideCidrIp",
        "srcOutsideCidrPrefix",
        "srcOutsideCidrNetmask",
        "destInsideCidrIp",
        "destInsideCidrPrefix",
        "destInsideCidrNetmask",
        "destOutsideCidrIp",
        "destOutsideCidrPrefix",
        "destOutsideCidrNetmask"
      ]
    },
    "device_settings_netflow": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "collectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_netflow_collector"
          }
        },
        "version": {
          "type": "integer"
        },
        "intervals": {
          "type": "object",
          "properties": {
            "flowStats": {
              "type": "integer"
            },
            "flowLinkStats": {
              "type": "integer"
            },
            "tunnelStats": {
              "type": "integer"
            },
            "vrfTable": {
              "type": "integer"
            },
            "applicationTable": {
              "type": "integer"
            },
            "interfaceTable": {
              "type": "integer"
            },
            "linkTable": {
              "type": "integer"
            }
          }
        }
      }
    },
    "netflow_collector": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/netflow_collector_data"
            }
          }
        }
      ]
    },
    "netflow_collector_data": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      },
      "required": [
        "name",
        "address",
        "port"
      ]
    },
    "device_settings_vqm_collector": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      }
    },
    "device_settings_ospf": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "areas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_ospf_area"
          }
        },
        "bgp": {
          "$ref": "#/definitions/device_settings_ospf_bgp_redistribution"
        },
        "defaultPrefixes": {
          "type": "boolean"
        },
        "defaultRouteAdvertise": {
          "type": "string",
          "enum": [
            "ALWAYS",
            "CONDITIONAL",
            "NONE"
          ]
        },
        "defaultRoutes": {
          "type": "string",
          "enum": [
            "OE1",
            "OE2",
            "NONE"
          ]
        }
      }
    },
    "device_settings_ospf_area": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "device_settings_ospf_bgp_redistribution": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "integer"
        },
        "metricType": {
          "type": "string",
          "enum": [
            "E1",
            "E2"
          ]
        }
      }
    },
    "device_settings_analytics_settings": {
      "type": "object",
      "properties": {
        "analyticsEnabled": {
          "type": "boolean"
        },
        "sourceInterface": {
          "type": "string"
        },
        "override": {
          "type": "boolean"
        }
      },
      "required": [
        "analyticsEnabled",
        "sourceInterface"
      ]
    },
    "device_settings_syslog": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "facilityCode": {
          "type": "string",
          "enum": [
            "local0",
            "local1",
            "local2",
            "local3",
            "local4",
            "local5",
            "local6",
            "local7"
          ]
        },
        "override": {
          "type": "boolean"
        },
        "collectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_syslog_collector"
          }
        }
      },
      "required": [
        "collectors",
        "enabled"
      ]
    },
    "device_settings_syslog_collector": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ]
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "EDGE EVENT",
              "FIREWALL EVENT",
              "EDGE AND FIREWALL EVENT"
            ]
          }
        },
        "severity": {
          "type": "string",
          "enum": [
            "EMERG",
            "ALERT",
            "CRIT",
            "ERR",
            "WARNING",
            "NOTICE",
            "INFO",
            "DEBUG"
          ]
        },
        "sourceInterface": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "port",
        "protocol",
        "roles",
        "severity",
        "sourceInterface"
      ]
    },
    "gateway_syslog_settings": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        },
        "facilityCode": {
          "type": "string",
          "enum": [
            "local0",
            "local1",
            "local2",
            "local3",
            "local4",
            "local5",
            "local6",
            "local7"
          ]
        },
        "collectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_syslog_collector_settings"
          }
        }
      }
    },
    "gateway_syslog_collector_settings": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ]
        },
        "severity": {
          "type": "string",
          "enum": [
            "INFO"
          ]
        }
      }
    },
    "device_settings_icmp_probe": {
      "type": "object"
    },
    "device_settings_icmp_responder": {
      "type": "object"
    },
    "device_settings_nsd_route": {
      "type": "object",
      "properties": {
        "advertise": {
          "type": "boolean"
        },
        "cidrIp": {
          "type": "string"
        },
        "cidrIpEnd": {
          "type": "string"
        },
        "cidrIpStart": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "destination": {
          "type": "string"
        },
        "gatewayLogicalId": {
          "type": "string"
        },
        "gatewayName": {
          "type": "string"
        },
        "isStatic": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "netMask": {
          "type": "string"
        },
        "nsd": {
          "type": "string"
        },
        "nsdLogicalId": {
          "type": "string"
        },
        "nsdType": {
          "type": "string",
          "enum": [
            "nvsViaEdgeService",
            "dataCenter"
          ]
        },
        "preferred": {
          "type": "boolean"
        }
      }
    },
    "device_settings_static_route": {
      "type": "object",
      "properties": {
        "destination": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "sourceIp": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "preferred": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "string"
        },
        "wanInterface": {
          "type": "string"
        },
        "icmpProbeLogicalId": {
          "type": "string"
        },
        "vlanId": {
          "type": "integer"
        },
        "advertise": {
          "type": "boolean"
        },
        "subinterfaceId": {
          "type": "integer"
        }
      }
    },
    "configuration_module_segment_metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "segmentId": {
          "type": "integer"
        },
        "segmentLogicalId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "REGULAR",
            "CDE",
            "PRIVATE"
          ]
        }
      }
    },
    "device_settings_vpn": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "edgeToDataCenter": {
          "type": "boolean"
        },
        "ref": {
          "type": "string",
          "enum": [
            "deviceSettings:vpn:dataCenter"
          ]
        },
        "isolationGroupId": {
          "type": "string"
        },
        "edgeToEdgeHub": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ref": {
              "type": "string",
              "enum": [
                "deviceSettings:vpn:edgeHub"
              ]
            },
            "vpnHubs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_vpn_hub"
              }
            }
          }
        },
        "edgeToEdge": {
          "type": "boolean"
        },
        "edgeToEdgeDetail": {
          "type": "object",
          "properties": {
            "autoSelectVpnHubs": {
              "type": "boolean"
            },
            "dynamic": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "isolation": {
                  "$ref": "#/definitions/device_settings_vpn_profile_isolation"
                },
                "type": {
                  "type": "string"
                },
                "timeout": {
                  "type": "integer"
                }
              }
            },
            "encryptionProtocol": {
              "type": "string"
            },
            "profileIsolation": {
              "$ref": "#/definitions/device_settings_vpn_profile_isolation_deprecated"
            },
            "isolation": {
              "$ref": "#/definitions/device_settings_vpn_profile_isolation"
            },
            "isolationGroupId": {
              "type": "string"
            },
            "isolationGroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "logicalId": {
                    "type": "string"
                  }
                }
              }
            },
            "useCloudGateway": {
              "type": "boolean"
            },
            "vpnHubs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_vpn_hub"
              }
            }
          }
        },
        "conditionalBackhaul": {
          "type": "boolean"
        },
        "backHaulEdges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_vpn_hub"
          }
        }
      }
    },
    "device_settings_vpn_profile_isolation_deprecated": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "profileLogicalId": {
          "type": "string"
        },
        "isolateDynamic": {
          "type": "boolean"
        }
      }
    },
    "device_settings_vpn_profile_isolation": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "device_settings_vpn_profile_isolation_group": {
      "type": "object",
      "properties": {
        "logicalId": {
          "type": "string"
        }
      }
    },
    "device_settings_vpn_hub": {
      "allOf": [
        {
          "$ref": "#/definitions/logicalid_reference"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "edgeHub",
                "edgeHubCluster"
              ]
            }
          }
        }
      ]
    },
    "device_settings_vqm": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "RFC6035"
          ]
        },
        "collectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_vqm_collector"
          }
        }
      }
    },
    "device_settings_vrrp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_vrrp_virtual_router"
          }
        }
      }
    },
    "device_settings_vrrp_virtual_router": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "interval": {
          "type": "integer"
        },
        "preempt": {
          "type": "boolean"
        },
        "preemptDelay": {
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "subinterfaceId": {
          "type": "integer"
        },
        "vlanId": {
          "type": "integer"
        },
        "vrid": {
          "type": "integer"
        }
      }
    },
    "device_settings_lan": {
      "type": "object",
      "properties": {
        "interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_lan_interface"
          }
        },
        "management": {
          "$ref": "#/definitions/subnet"
        },
        "managementTraffic": {
          "$ref": "#/definitions/device_settings_lan_management_traffic"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_lan_network"
          }
        },
        "visibility": {
          "type": "object",
          "properties": {
            "override": {
              "type": "boolean"
            },
            "mode": {
              "type": "string",
              "enum": [
                "MAC",
                "IP"
              ]
            }
          }
        }
      }
    },
    "device_settings_lan_interface": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "cwp": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "l2": {
          "type": "object",
          "properties": {
            "autonegotiation": {
              "type": "boolean"
            },
            "speed": {
              "type": "string"
            },
            "duplex": {
              "type": "string",
              "enum": [
                "FULL",
                "HALF"
              ]
            },
            "MTU": {
              "type": "integer"
            },
            "losDetection": {
              "type": "boolean"
            },
            "probeInterval": {
              "type": "string",
              "enum": [
                "1",
                "3",
                "5",
                "10"
              ]
            }
          }
        },
        "portMode": {
          "type": "string",
          "enum": [
            "access",
            "trunk"
          ]
        },
        "space": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "wired",
            "wireless"
          ]
        },
        "untaggedVlan": {
          "type": "string"
        },
        "vlanIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "authenticationType": {
          "type": "string",
          "enum": [
            "none",
            "802.1x"
          ]
        },
        "broadcastSsid": {
          "type": "boolean"
        },
        "passphrase": {
          "type": "string"
        },
        "ssid": {
          "type": "string"
        },
        "securityMode": {
          "type": "string",
          "enum": [
            "Open",
            "WPA2Enterprise",
            "WPA2Personal"
          ]
        }
      }
    },
    "device_settings_lan_network": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "advertise": {
          "type": "boolean"
        },
        "pingResponse": {
          "type": "boolean",
          "default": true
        },
        "bindEdgeAddress": {
          "type": "boolean"
        },
        "baseDhcpAddr": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "cost": {
          "type": "integer"
        },
        "dhcp": {
          "$ref": "#/definitions/device_settings_dhcp"
        },
        "disabled": {
          "type": "boolean"
        },
        "disableV4": {
          "type": "boolean"
        },
        "disableV6": {
          "type": "boolean"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "multicast": {
          "type": "object",
          "properties": {
            "igmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "IGMP_V2"
                  ]
                }
              }
            },
            "igmpHostQueryIntervalSeconds": {
              "type": "integer"
            },
            "igmpMaxQueryResponse": {
              "type": "integer"
            },
            "pim": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PIM_SM"
                  ]
                }
              }
            },
            "pimHelloTimerSeconds": {
              "type": "integer"
            },
            "pimKeepAliveTimerSeconds": {
              "type": "integer"
            },
            "pimPruneIntervalSeconds": {
              "type": "integer"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "numDhcpAddr": {
          "type": "integer"
        },
        "ospf": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "override": {
              "type": "boolean"
            },
            "area": {
              "type": "integer"
            },
            "passiveInterface": {
              "type": "boolean"
            }
          }
        },
        "fixedIp": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_fixed_ip"
          }
        },
        "segmentId": {
          "type": "integer"
        },
        "staticReserved": {
          "type": "integer"
        },
        "vlanId": {
          "type": "integer"
        },
        "vnfInsertion": {
          "type": "boolean"
        },
        "v6Detail": {
          "type": "object",
          "properties": {
            "override": {
              "type": "boolean"
            },
            "advertise": {
              "type": "boolean"
            },
            "bindEdgeAddress": {
              "type": "boolean"
            },
            "addressing": {
              "type": "object",
              "properties": {
                "cidrIp": {
                  "type": "string"
                },
                "cidrPrefix": {
                  "type": "integer"
                },
                "netmask": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            },
            "dhcpServer": {
              "$ref": "#/definitions/device_settings_dhcp_v6"
            },
            "routerAdvertisementHostSettings": {
              "$ref": "#/definitions/device_settings_router_advertisement_host_settings"
            }
          }
        }
      }
    },
    "device_settings_dhcp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "dhcpRelay": {
          "$ref": "#/definitions/device_settings_dhcp_relay"
        },
        "leaseTimeSeconds": {
          "type": "integer"
        },
        "baseDhcpAddr": {
          "type": "integer"
        },
        "numDhcpAddr": {
          "type": "integer"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_dhcp_option"
          }
        },
        "override": {
          "type": "boolean"
        }
      }
    },
    "device_settings_dhcp_v6": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "dhcpRelay": {
          "$ref": "#/definitions/device_settings_dhcp_relay"
        },
        "leaseTimeSeconds": {
          "type": "integer"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_dhcp_option"
          }
        },
        "prefixDelegation": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "pdlist": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_dhcp_v6_prefix_delegation_pool"
              }
            }
          }
        },
        "baseDhcpAddr": {
          "type": "integer"
        },
        "numDhcpAddr": {
          "type": "integer"
        },
        "staticReserved": {
          "type": "integer"
        },
        "fixedIp": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_fixed_ip"
          }
        }
      }
    },
    "device_settings_router_advertisement_host_settings": {
      "type": "object",
      "properties": {
        "mtu": {
          "type": "boolean"
        },
        "defaultRoutes": {
          "type": "boolean"
        },
        "specificRoutes": {
          "type": "boolean"
        },
        "nd6Timers": {
          "type": "boolean"
        }
      },
      "required": [
        "mtu",
        "defaultRoutes",
        "specificRoutes",
        "nd6Timers"
      ]
    },
    "device_settings_dhcp_v6_prefix_delegation_pool": {
      "type": "object",
      "properties": {
        "poolname": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "prefixLen": {
          "type": "integer"
        },
        "targetPrefixLen": {
          "type": "integer"
        }
      }
    },
    "device_settings_dhcp_relay": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "servers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "device_settings_dhcp_option": {
      "type": "object",
      "properties": {
        "option": {
          "type": "integer"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "metaData": {
          "type": "object",
          "properties": {
            "dataType": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "display": {
              "type": "boolean"
            },
            "list": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "option": {
              "type": "integer"
            }
          }
        }
      }
    },
    "device_settings_fixed_ip": {
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string"
        },
        "lanIp": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "device_settings_multi_source_qos": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "highRatio": {
          "type": "integer"
        },
        "normalRatio": {
          "type": "integer"
        },
        "lowRatio": {
          "type": "integer"
        },
        "maxCapThreshold": {
          "type": "integer"
        },
        "minCapThreshold": {
          "type": "integer"
        }
      }
    },
    "device_settings_ntp": {
      "type": "object",
      "properties": {
        "sourceInterface": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_ntp_server"
          }
        }
      }
    },
    "device_settings_ntp_server": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string"
        }
      }
    },
    "device_settings_ntp_as_server": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "NONE",
            "MD5"
          ]
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_ntp_key"
          }
        }
      }
    },
    "device_settings_ntp_key": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "keyNumber": {
          "type": "integer"
        }
      }
    },
    "device_settings_radio_settings": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "radios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_radio"
          }
        }
      }
    },
    "device_settings_l2_settings": {
      "type": "object",
      "properties": {
        "overrideARPTimeout": {
          "type": "boolean"
        },
        "arpStaleTimeoutMinutes": {
          "type": "integer"
        },
        "arpDeadTimeoutMinutes": {
          "type": "integer"
        },
        "arpCleanupTimeoutMinutes": {
          "type": "integer"
        }
      }
    },
    "device_settings_globalIPv6_settings": {
      "type": "object",
      "properties": {
        "advancedConfiguration": {
          "type": "object",
          "properties": {
            "disableAllIPv6Traffic": {
              "type": "boolean"
            },
            "dropRoutingHeaderTypeZeroPackets": {
              "type": "boolean"
            },
            "enforceExtensionHeaderValidation": {
              "type": "boolean"
            },
            "enforceExtensionHeaderOrderCheck": {
              "type": "boolean"
            },
            "dropnLogPacketsForRFCReservedFields": {
              "type": "boolean"
            }
          }
        },
        "icmpV6Messages": {
          "type": "object",
          "properties": {
            "disableDestinationUnreachable": {
              "type": "boolean"
            },
            "disableTimeExceeded": {
              "type": "boolean"
            },
            "disableParameterProblem": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "device_settings_radio": {
      "type": "object",
      "properties": {
        "band": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "mode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "radioId": {
          "type": "integer"
        },
        "width": {
          "type": "string"
        }
      }
    },
    "device_settings_routed_interface": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "disableV4": {
          "type": "boolean"
        },
        "disableV6": {
          "type": "boolean"
        },
        "overlayPreference": {
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6",
            "IPv4v6"
          ]
        },
        "addressing": {
          "$ref": "#/definitions/device_settings_routed_interface_addressing"
        },
        "v6Detail": {
          "$ref": "#/definitions/device_settings_routed_interface_v6_detail"
        },
        "advertise": {
          "type": "boolean"
        },
        "cellular": {
          "type": "object",
          "properties": {
            "simPin": {
              "type": "string"
            },
            "network": {
              "type": "string",
              "enum": [
                "ATT",
                "SPRINT",
                "VERIZON",
                "VODAFONE",
                "TELSTRA",
                "GENERIC"
              ]
            },
            "apn": {
              "type": "string"
            },
            "iptype": {
              "type": "string",
              "enum": [
                "IPv4",
                "IPv4v6"
              ]
            },
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "description": "Applicable only for CELL interfaces"
        },
        "dhcpServer": {
          "$ref": "#/definitions/device_settings_dhcp"
        },
        "dslSettings": {
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "enum": [
                "adsl2",
                "vdsl2"
              ]
            },
            "properties": {
              "$ref": "#/definitions/device_settings_routed_interface_dsl_settings"
            }
          }
        },
        "encryptOverlay": {
          "type": "boolean"
        },
        "l2": {
          "$ref": "#/definitions/device_settings_routed_interface_l2"
        },
        "multicast": {
          "type": "object",
          "properties": {
            "igmp": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "IGMP_V2"
                  ]
                }
              }
            },
            "igmpHostQueryIntervalSeconds": {
              "type": "integer"
            },
            "igmpMaxQueryResponse": {
              "type": "integer"
            },
            "pim": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "PIM_SM"
                  ]
                }
              }
            },
            "pimKeepAliveTimerSeconds": {
              "type": "integer"
            },
            "pimPruneIntervalSeconds": {
              "type": "integer"
            },
            "pimHelloTimerSeconds": {
              "type": "integer"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "natDirect": {
          "type": "boolean"
        },
        "ospf": {
          "$ref": "#/definitions/device_settings_routed_interface_ospf"
        },
        "pingResponse": {
          "type": "boolean",
          "default": true
        },
        "evdslModemAttached": {
          "type": "boolean",
          "default": false
        },
        "radiusAuthentication": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "macBypass": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "segmentId": {
          "type": "integer"
        },
        "sfpType": {
          "type": "string",
          "enum": [
            "standard",
            "dsl",
            "gpon"
          ]
        },
        "subinterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_subinterface"
          }
        },
        "rpf": {
          "type": "string",
          "enum": [
            "SPECIFIC",
            "LOOSE",
            "DISABLED"
          ]
        },
        "trusted": {
          "type": "boolean"
        },
        "underlayAccounting": {
          "type": "boolean",
          "default": true
        },
        "vlanId": {
          "type": "integer"
        },
        "wanOverlay": {
          "type": "string",
          "enum": [
            "DISABLED",
            "AUTO_DISCOVERED",
            "USER_DEFINED"
          ]
        }
      }
    },
    "device_settings_routed_interface_addressing": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "DHCP",
            "STATIC",
            "PPPOE"
          ]
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "device_settings_routed_interface_v6_detail": {
      "type": "object",
      "properties": {
        "addressing": {
          "$ref": "#/definitions/device_settings_routed_interface_addressingV6"
        },
        "wanOverlay": {
          "type": "string",
          "enum": [
            "DISABLED",
            "AUTO_DISCOVERED",
            "USER_DEFINED"
          ]
        },
        "rpf": {
          "type": "string",
          "enum": [
            "SPECIFIC",
            "LOOSE",
            "DISABLED"
          ]
        },
        "trusted": {
          "type": "boolean"
        },
        "natDirect": {
          "type": "boolean"
        },
        "dhcpServer": {
          "$ref": "#/definitions/device_settings_dhcp_v6"
        },
        "routerAdvertisementHostSettings": {
          "$ref": "#/definitions/device_settings_router_advertisement_host_settings"
        }
      }
    },
    "device_settings_routed_interface_addressingV6": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "STATIC",
            "DHCP_STATEFUL",
            "DHCP_STATELESS"
          ]
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "raEnabled": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "device_settings_routed_interface_dsl_settings": {
      "type": "object"
    },
    "device_settings_routed_interface_dsl_settings_adsl2": {
      "type": "object",
      "properties": {
        "pvc": {
          "type": "integer"
        },
        "vpi": {
          "type": "integer",
          "minimum": 0,
          "maximum": 255
        },
        "vci": {
          "type": "integer",
          "minimum": 35,
          "maximum": 65535
        },
        "vlan": {
          "type": "integer"
        },
        "vlanidtx": {
          "type": "integer"
        },
        "vlanidrx": {
          "type": "integer"
        },
        "vlanoptx": {
          "type": "integer"
        },
        "vlanoprx": {
          "type": "integer"
        }
      }
    },
    "device_settings_routed_interface_dsl_settings_vdsl2": {
      "type": "object",
      "properties": {
        "profile": {
          "type": "string",
          "enum": [
            "17a",
            "30a"
          ]
        }
      }
    },
    "device_settings_routed_interface_ospf": {
      "type": "object",
      "properties": {
        "area": {
          "type": "integer"
        },
        "authentication": {
          "type": "boolean"
        },
        "authId": {
          "type": "integer"
        },
        "authPassphrase": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "deadTimer": {
          "type": "integer"
        },
        "mode": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "exclusionRoutes": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "helloTimer": {
          "type": "integer"
        },
        "inboundRouteLearning": {
          "$ref": "#/definitions/device_settings_routed_interface_ospf_filter"
        },
        "md5Authentication": {
          "type": "boolean"
        },
        "MTU": {
          "type": "integer"
        },
        "outboundRouteAdvertisement": {
          "$ref": "#/definitions/device_settings_routed_interface_ospf_filter"
        },
        "passive": {
          "type": "boolean"
        },
        "vlanId": {
          "type": "integer"
        }
      }
    },
    "device_settings_routed_interface_ospf_filter": {
      "type": "object",
      "properties": {
        "defaultAction": {
          "type": "string",
          "enum": [
            "ADVERTISE",
            "IGNORE",
            "LEARN"
          ]
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "string"
              },
              "action": {
                "type": "string",
                "enum": [
                  "ADVERTISE",
                  "IGNORE",
                  "LEARN"
                ]
              }
            }
          }
        }
      }
    },
    "device_settings_routed_interface_l2": {
      "type": "object",
      "properties": {
        "autonegotiation": {
          "type": "boolean"
        },
        "speed": {
          "type": "string"
        },
        "duplex": {
          "type": "string",
          "enum": [
            "FULL",
            "HALF"
          ]
        },
        "MTU": {
          "type": "integer"
        },
        "losDetection": {
          "type": "boolean"
        },
        "probeInterval": {
          "type": "string",
          "enum": [
            "1",
            "3",
            "5",
            "10"
          ]
        }
      }
    },
    "device_settings_subinterface": {
      "allOf": [
        {
          "$ref": "#/definitions/device_settings_routed_interface"
        },
        {
          "type": "object",
          "properties": {
            "subinterfaceId": {
              "type": "integer"
            },
            "subinterfaceType": {
              "type": "string",
              "enum": [
                "SECONDARY_IP",
                "SUB_INTERFACE"
              ]
            }
          }
        }
      ]
    },
    "device_settings_segment": {
      "type": "object",
      "properties": {
        "authentication": {
          "$ref": "#/definitions/device_settings_authentication"
        },
        "bgp": {
          "$ref": "#/definitions/device_settings_bgp"
        },
        "css": {
          "$ref": "#/definitions/device_settings_cloud_security"
        },
        "secureAccess": {
          "$ref": "#/definitions/device_settings_secure_access"
        },
        "edgeDirect": {
          "$ref": "#/definitions/device_settings_nvs_from_edge"
        },
        "dns": {
          "$ref": "#/definitions/device_settings_dns"
        },
        "handOffControllers": {
          "$ref": "#/definitions/device_settings_handoff_gateways"
        },
        "handOffGateways": {
          "$ref": "#/definitions/device_settings_handoff_gateways"
        },
        "multiSourceQos": {
          "$ref": "#/definitions/device_settings_multi_source_qos"
        },
        "multicast": {
          "$ref": "#/definitions/device_settings_multicast"
        },
        "nat": {
          "$ref": "#/definitions/device_settings_nat"
        },
        "netflow": {
          "$ref": "#/definitions/device_settings_netflow"
        },
        "ntp": {
          "$ref": "#/definitions/device_settings_ntp"
        },
        "ospf": {
          "$ref": "#/definitions/device_settings_ospf"
        },
        "routes": {
          "type": "object",
          "properties": {
            "icmpProbes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_icmp_probe"
              }
            },
            "icmpResponders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_icmp_responder"
              }
            },
            "nsd": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_nsd_route"
              }
            },
            "static": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_static_route"
              }
            },
            "staticV6": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_static_route"
              }
            }
          }
        },
        "segment": {
          "$ref": "#/definitions/configuration_module_segment_metadata"
        },
        "snmp": {
          "$ref": "#/definitions/device_settings_snmp"
        },
        "syslog": {
          "$ref": "#/definitions/device_settings_syslog"
        },
        "vpn": {
          "$ref": "#/definitions/device_settings_vpn"
        },
        "vqm": {
          "$ref": "#/definitions/device_settings_vqm"
        },
        "vrrp": {
          "$ref": "#/definitions/device_settings_vrrp"
        }
      }
    },
    "device_settings_snmp": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "port": {
          "type": "integer"
        },
        "snmpv2c": {
          "$ref": "#/definitions/device_settings_snmpv2c"
        },
        "snmpv3": {
          "$ref": "#/definitions/device_settings_snmpv3"
        }
      }
    },
    "device_settings_snmpv2c": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "community": {
          "type": "string"
        },
        "allowedIp": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "device_settings_snmpv3": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/device_settings_snmpv3_user"
          }
        }
      }
    },
    "device_settings_snmpv3_user": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        },
        "authAlg": {
          "type": "string"
        },
        "privacy": {
          "type": "boolean"
        },
        "encrAlg": {
          "type": "string"
        }
      }
    },
    "device_settings_software_update": {
      "type": "object",
      "properties": {
        "windowed": {
          "type": "boolean"
        },
        "window": {
          "$ref": "#/definitions/device_settings_software_update_window"
        }
      }
    },
    "device_settings_software_update_window": {
      "type": "object",
      "properties": {
        "day": {
          "type": "integer"
        },
        "beginHour": {
          "type": "integer"
        },
        "endHour": {
          "type": "integer"
        }
      }
    },
    "device_settings_tacacs": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string",
          "enum": [
            "deviceSettings:tacacs"
          ]
        },
        "sourceInterface": {
          "type": "string"
        }
      }
    },
    "device_settings_vnfs": {
      "type": "object",
      "properties": {
        "edge": {
          "allOf": [
            {
              "$ref": "#/definitions/logicalid_reference"
            },
            {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:vnfs:edge"
                }
              }
            }
          ]
        },
        "hasVnfs": {
          "type": "boolean"
        },
        "securityVnf": {
          "type": "object",
          "properties": {
            "vms": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/device_settings_security_vnf_vm"
              }
            }
          }
        }
      }
    },
    "device_settings_security_vnf_vm": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "securityVnf"
        },
        "vendor": {
          "type": "string",
          "enum": [
            "PaloAlto",
            "CheckPoint",
            "Fortinet",
            "CentOS"
          ]
        },
        "edge": {
          "allOf": [
            {
              "$ref": "#/definitions/logicalid_reference"
            },
            {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:vnfs:edge"
                }
              }
            }
          ]
        },
        "license": {
          "allOf": [
            {
              "$ref": "#/definitions/logicalid_reference"
            },
            {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:securityVnf:license"
                }
              }
            }
          ]
        },
        "service": {
          "allOf": [
            {
              "$ref": "#/definitions/logicalid_reference"
            },
            {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:securityVnf:service"
                }
              }
            }
          ]
        },
        "uuid": {
          "type": "string"
        },
        "uuidTimestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "device_settings_loopback_interfaces": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "cidrIp": {
            "type": "string"
          },
          "cidrPrefix": {
            "type": "number"
          },
          "advertise": {
            "type": "boolean"
          },
          "pingResponse": {
            "type": "boolean"
          },
          "segmentId": {
            "type": "number"
          },
          "ospf": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "area": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "disableV4": {
            "type": "boolean"
          },
          "disableV6": {
            "type": "boolean"
          },
          "v6Detail": {
            "type": "object",
            "properties": {
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "device_settings_lan_management_traffic": {
      "type": "object",
      "properties": {
        "override": {
          "type": "boolean"
        },
        "sourceInterface": {
          "type": "string"
        }
      }
    },
    "WAN": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/WAN_data"
            },
            "refs": {
              "$ref": "#/definitions/wanRefs"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "WAN_data": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "logicalId": {
                "type": "string"
              },
              "internalId": {
                "type": "string"
              },
              "discovery": {
                "type": "string",
                "enum": [
                  "DISABLED",
                  "AUTO_DISCOVERED",
                  "USER_DEFINED"
                ]
              },
              "mode": {
                "type": "string",
                "enum": [
                  "PUBLIC",
                  "PRIVATE"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "WIRED",
                  "WIRELESS"
                ]
              },
              "addressingVersion": {
                "type": "string",
                "enum": [
                  "IPv4",
                  "IPv6",
                  "IPv4v6"
                ]
              },
              "name": {
                "type": "string"
              },
              "isp": {
                "type": "string"
              },
              "publicIpAddress": {
                "type": "string"
              },
              "publicIpAddressV6": {
                "type": "string"
              },
              "sourceIpAddress": {
                "type": "string"
              },
              "nextHopIpAddress": {
                "type": "string"
              },
              "sourceIpAddressV6": {
                "type": "string"
              },
              "nextHopIpAddressV6": {
                "type": "string"
              },
              "customVlanId": {
                "type": "boolean"
              },
              "vlanId": {
                "type": "integer"
              },
              "enable8021P": {
                "type": "boolean"
              },
              "priority8021P": {
                "type": "integer"
              },
              "virtualIpAddress": {
                "type": "string"
              },
              "dynamicBwAdjustmentEnabled": {
                "type": "boolean"
              },
              "bwMeasurement": {
                "type": "string"
              },
              "upstreamMbps": {
                "type": "string"
              },
              "downstreamMbps": {
                "type": "string"
              },
              "backupOnly": {
                "type": "boolean"
              },
              "hotStandby": {
                "type": "boolean"
              },
              "minActiveLinks": {
                "type": "integer"
              },
              "overheadBytes": {
                "type": "integer"
              },
              "udpHolePunching": {
                "type": "boolean"
              },
              "MTU": {
                "type": "integer"
              },
              "pmtudDisabled": {
                "type": "boolean"
              },
              "mplsNetwork": {
                "type": "string"
              },
              "dscpTag": {
                "type": "string"
              },
              "staticSlaEnabled": {
                "type": "boolean"
              },
              "classesofServiceEnabled": {
                "type": "boolean"
              },
              "strictIpPrecedence": {
                "type": "boolean"
              },
              "encryptOverlay": {
                "type": "boolean"
              },
              "staticSLA": {
                "type": "object",
                "properties": {
                  "latencyMs": {
                    "type": "integer"
                  },
                  "jitterMs": {
                    "type": "integer"
                  },
                  "lossPct": {
                    "type": "integer"
                  }
                }
              },
              "classesOfService": {
                "type": "object",
                "properties": {
                  "classId": {
                    "type": "integer"
                  },
                  "classesOfService": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "dscpTags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "staticSLA": {
                          "type": "object",
                          "properties": {
                            "latencyMs": {
                              "type": "integer"
                            },
                            "jitterMs": {
                              "type": "integer"
                            },
                            "lossPct": {
                              "type": "string"
                            }
                          }
                        },
                        "bandwidthPct": {
                          "type": "integer"
                        },
                        "bandwidthGuaranteed": {
                          "type": "boolean"
                        },
                        "defaultClassOfService": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "interfaces": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "lastActive": {
                "type": "string"
              },
              "privateNetwork": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "ref": {
                    "type": "string",
                    "pattern": "wan:privateNetwork"
                  }
                }
              }
            }
          }
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "logicalId": {
                "type": "string"
              },
              "interface": {
                "type": "string"
              },
              "internalId": {
                "type": "string"
              },
              "ipAddress": {
                "type": "string"
              },
              "isp": {
                "type": "string"
              },
              "lastActive": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "privateNetworkRefData": {
      "allOf": [
        {
          "$ref": "#/definitions/ref"
        },
        {
          "properties": {
            "data": {
              "type": "object"
            },
            "modified": {
              "type": "string",
              "format": "date-time"
            },
            "version": {
              "type": "string"
            },
            "object": {
              "type": "string",
              "enum": [
                "PRIVATE_NETWORK"
              ]
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "parentGroupId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "privateNetworkRef": {
      "type": "object",
      "properties": {
        "wan:privateNetwork": {
          "type": "object"
        }
      }
    },
    "wanRefs": {
      "allOf": [
        {
          "$ref": "#/definitions/genericRefs"
        },
        {
          "$ref": "#/definitions/privateNetworkRef"
        }
      ]
    },
    "metaData": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/metadata_data"
            }
          },
          "required": [
            "data"
          ]
        }
      ]
    },
    "metadata_data": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "object",
          "properties": {
            "logicalId": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      }
    },
    "application": {
      "properties": {
        "class": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "knownIpPortMapping": {
          "$ref": "#/definitions/ip_port_mapping"
        },
        "protocolPortMapping": {
          "$ref": "#/definitions/protocol_port_mapping"
        }
      },
      "required": [
        "id",
        "displayName",
        "class",
        "description",
        "knownIpPortMapping",
        "protocolPortMapping"
      ],
      "type": "object"
    },
    "application_metadata": {
      "properties": {
        "blobId": {
          "type": "integer"
        },
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "manifest": {
          "$ref": "#/definitions/application_metadata_manifest"
        },
        "modified": {
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networkId": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "uploadDetails": {
          "$ref": "#/definitions/application_metadata_upload_details"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "networkId",
        "created",
        "name",
        "logicalId",
        "type",
        "description",
        "version",
        "manifest",
        "blobId",
        "modified",
        "fileName",
        "uploadDetails"
      ],
      "type": "object"
    },
    "application_metadata_manifest": {
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "description",
        "version"
      ],
      "type": "object"
    },
    "application_metadata_upload_details": {
      "additionalProperties": true,
      "properties": {
        "size": {
          "type": "integer"
        }
      },
      "required": [
        "size"
      ],
      "type": "object"
    },
    "auth_object": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password2": {
          "format": "password",
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ],
      "type": "object"
    },
    "basic_metric": {
      "enum": [
        "packetsRx",
        "packetsTx",
        "totalPackets",
        "bytesRx",
        "bytesTx",
        "totalBytes"
      ],
      "type": "string"
    },
    "basic_metrics": {
      "items": {
        "$ref": "#/definitions/basic_metric"
      },
      "type": "array",
      "description": "A list of metrics to report. When omitted, this method returns all available metrics."
    },
    "edge_link_metric": {
      "type": "string",
      "enum": [
        "bytesRx",
        "bytesTx",
        "totalBytes",
        "totalPackets",
        "p1BytesRx",
        "p1BytesTx",
        "p1PacketsRx",
        "p1PacketsTx",
        "p2BytesRx",
        "p2BytesTx",
        "p2PacketsRx",
        "p2PacketsTx",
        "p3BytesRx",
        "p3BytesTx",
        "p3PacketsRx",
        "p3PacketsTx",
        "packetsRx",
        "packetsTx",
        "controlBytesRx",
        "controlBytesTx",
        "controlPacketsRx",
        "controlPacketsTx",
        "bestBwKbpsRx",
        "bestBwKbpsTx",
        "bestJitterMsRx",
        "bestJitterMsTx",
        "bestLatencyMsRx",
        "bestLatencyMsTx",
        "bestLossPctRx",
        "bestLossPctTx",
        "bpsOfBestPathRx",
        "bpsOfBestPathTx",
        "signalStrength",
        "scoreTx",
        "scoreRx"
      ]
    },
    "model_configuration": {
      "type": "object",
      "properties": {
        "configurationType": {
          "type": "string",
          "enum": [
            "NETWORK_BASED",
            "SEGMENT_BASED"
          ]
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED"
          ]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "edgeCount": {
          "type": "integer"
        },
        "effective": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configuration_module"
          }
        },
        "name": {
          "type": "string"
        },
        "schemaVersion": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "isStaging": {
          "$ref": "#/definitions/tinyint"
        }
      }
    },
    "empty_object": {
      "type": "object",
      "properties": {}
    },
    "bgp_peer_status_record": {
      "type": "object",
      "properties": {
        "enterpriseLogicalId": {
          "type": "string"
        },
        "neighborAS": {
          "type": "string"
        },
        "neighborIp": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "IDLE",
            "CONNECT",
            "ACTIVE",
            "OPENSENT",
            "OPENCONFIRM",
            "ESTABLISHED",
            "CLEARING",
            "IDLEADMIN",
            "IDLEPRFXCT",
            "REMOVED"
          ]
        },
        "msgRcvd": {
          "type": "integer"
        },
        "pfxRcvd": {
          "type": "integer"
        },
        "msgSent": {
          "type": "integer"
        },
        "upDownTime": {
          "type": "integer"
        }
      }
    },
    "config_edge_bgp_filter_set": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "config_edge_bgp_neighbor": {
      "type": "object",
      "properties": {
        "neighborAS": {
          "type": "string"
        },
        "neighborIp": {
          "type": "string"
        },
        "neighborTag": {
          "type": "string",
          "enum": [
            "UPLINK"
          ]
        },
        "inboundFilter": {
          "$ref": "#/definitions/config_edge_bgp_filter_set"
        },
        "outboundFilter": {
          "$ref": "#/definitions/config_edge_bgp_filter_set"
        },
        "allowAS": {
          "type": "boolean"
        },
        "connect": {
          "type": "string"
        },
        "defaultRoute": {
          "type": "boolean"
        },
        "holdtime": {
          "type": "string"
        },
        "keepalive": {
          "type": "string"
        },
        "enableMd5": {
          "type": "boolean"
        },
        "md5Password": {
          "type": "string"
        }
      }
    },
    "configuration_clone_configuration_result": {
      "properties": {
        "id": {
          "description": "The ID of the newly cloned configuration",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "configuration_clone_and_convert_configuration_result": {
      "properties": {
        "id": {
          "description": "The ID of the newly cloned configuration",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "configuration_clone_enterprise_template_result": {
      "properties": {
        "id": {
          "description": "The ID of the newly cloned configuration",
          "type": "integer"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "configuration_delete_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "configuration_get_configuration_modules_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/configuration_module"
        },
        {
          "required": [
            "id",
            "name",
            "type",
            "data",
            "refs",
            "description",
            "configurationId"
          ]
        }
      ]
    },
    "configuration_get_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "effective",
            "modified"
          ]
        }
      ]
    },
    "configuration_get_routable_applications_result": {
      "properties": {
        "applicationClassToApplication": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_many"
            }
          ],
          "description": "Maps application class IDs (strings) to application IDs (integers)"
        },
        "applicationToApplicationClass": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_many"
            }
          ],
          "description": "Maps application IDs (strings) to class IDs (integers)"
        },
        "applicationClasses": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_one"
            }
          ],
          "description": "Map of application class IDs to class names"
        },
        "applications": {
          "items": {
            "$ref": "#/definitions/application"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/application_metadata"
        }
      },
      "required": [
        "applications",
        "applicationClasses",
        "applicationClassToApplication",
        "applicationToApplicationClass",
        "metaData"
      ],
      "type": "object"
    },
    "configuration_get_identifiable_applications_result": {
      "properties": {
        "applicationClassToApplication": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_many"
            }
          ],
          "description": "Maps application class IDs (strings) to application IDs (integers)"
        },
        "applicationToApplicationClass": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_many"
            }
          ],
          "description": "Maps application IDs (strings) to class IDs (integers)"
        },
        "applicationClasses": {
          "allOf": [
            {
              "$ref": "#/definitions/id_map_one_to_one"
            }
          ],
          "description": "Map of application class IDs to class names"
        },
        "applications": {
          "items": {
            "$ref": "#/definitions/application"
          },
          "type": "array"
        }
      },
      "required": [
        "applications",
        "applicationClasses",
        "applicationClassToApplication",
        "applicationToApplicationClass"
      ],
      "type": "object"
    },
    "configuration_get_default_applications_result": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/default_application"
      }
    },
    "configuration_options_list": {
      "items": {
        "enum": [
          "modules",
          "edgeCount",
          "enterprises",
          "enterpriseCount",
          "counts"
        ],
        "type": "string"
      },
      "type": "array"
    },
    "diagnostic_bundle_update_diagnostic_bundle_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "configuration_update_configuration_module_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "configuration_set_configuration_bastion_state_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "user_two_factor_configuration": {
      "type": "object",
      "properties": {
        "enable": {
          "$ref": "#/definitions/tinyint"
        },
        "require": {
          "$ref": "#/definitions/tinyint"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "base_enterprise_user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "userType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "isNative": {
          "$ref": "#/definitions/tinyint"
        },
        "isActive": {
          "$ref": "#/definitions/tinyint"
        },
        "isLocked": {
          "$ref": "#/definitions/tinyint"
        },
        "disableSecondFactor": {
          "$ref": "#/definitions/tinyint"
        },
        "email": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "^(\\d{4})-0?(\\d+)-0?(\\d+)[T ]0?(\\d+):0?(\\d+):0?(\\d+)$"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "salt": {
          "type": "string"
        },
        "passwordModified": {
          "type": "string",
          "format": "^(\\d{4})-0?(\\d+)-0?(\\d+)[T ]0?(\\d+):0?(\\d+):0?(\\d+)$"
        },
        "sshUsername": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string",
          "enum": [
            "BASIC",
            "PRIVILEGED"
          ]
        }
      }
    },
    "destinations": {
      "properties": {
        "ip_addr": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "disaster_recovery_client_contact": {
      "properties": {
        "activeAddress": {
          "type": "string"
        },
        "activeLastResponseTime": {
          "format": "date-time",
          "type": "string"
        },
        "clientLogicalId": {
          "type": "string"
        },
        "clientType": {
          "enum": [
            "EDGE",
            "GATEWAY"
          ],
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "modified": {
          "format": "date-time",
          "type": "string"
        },
        "standbyAddress": {
          "type": "string"
        },
        "standbyLastResponseTime": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "id",
        "clientType",
        "clientLogicalId",
        "activeAddress",
        "activeLastResponseTime",
        "standbyAddress",
        "standbyLastResponseTime",
        "modified"
      ],
      "type": "object"
    },
    "disaster_recovery_configure_active_for_replication_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_demote_active_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_get_replication_blob": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "disaster_recovery_get_replication_blob_result": {
      "properties": {
        "activeAccessFromStandby": {
          "type": "string"
        }
      },
      "required": [
        "activeAccessFromStandby"
      ],
      "type": "object"
    },
    "disaster_recovery_get_replication_status_result": {
      "properties": {
        "activeAddress": {
          "type": "string"
        },
        "activeReplicationAddress": {
          "type": "string"
        },
        "clientContact": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/disaster_recovery_client_contact"
          }
        },
        "clientCount": {
          "type": "object",
          "properties": {
            "edgeCount": {
              "type": "integer"
            },
            "gatewayCount": {
              "type": "integer"
            },
            "currentActiveEdgeCount": {
              "type": "integer"
            },
            "currentStandbyEdgeCount": {
              "type": "integer"
            },
            "currentActiveGatewayCount": {
              "type": "integer"
            },
            "currentStandbyGatewayCount": {
              "type": "integer"
            }
          }
        },
        "drState": {
          "enum": [
            "UNCONFIGURED",
            "ACTIVE_CONFIGURING",
            "ACTIVE_CONFIGURED",
            "ACTIVE_UNCONFIG",
            "LAUNCHING_STANDBY",
            "LAUNCHED_STANDBY",
            "ACTIVE_WAIT_STANDBY",
            "PENDING_STANDBY_CANDIDATE",
            "STANDBY_CANDIDATE",
            "STANDBY_CONFIG_RQST",
            "STANDBY_CONFIGURING",
            "STANDBY_CONFIGURED",
            "PENDING_STANDBY_UNCONFIG",
            "STANDBY_UNCONFIG",
            "PENDING_STANDBY_PROMOTION",
            "STANDBY_PROMOTED",
            "PENDING_ACTIVE_DEMOTION",
            "COPYING_DB",
            "COPY_DB_DONE",
            "COPYING_FILES",
            "COPY_FILES_DONE",
            "SYNC_CONFIGURING",
            "STANDBY_SYNC",
            "STANDBY_BACKGROUND_IMPORT",
            "STANDBY_BACKGROUND_IMPORT_DONE",
            "STANDBY_DATA_MIGRATION",
            "STANDBY_DATA_MIGRATION_DONE",
            "STANDBY_DATA_MIGRATION_IN_PROGRESS",
            "STANDBY_RUNNING",
            "UPGRADING",
            "FAILURE_ACTIVE_CONFIGURING",
            "FAILURE_LAUNCHING_STANDBY",
            "FAILURE_STANDBY_CONFIGURING",
            "FAILURE_GET_STANDBY_CONFIG",
            "FAILURE_COPYING_DB",
            "FAILURE_COPYING_FILES",
            "FAILURE_SYNC_CONFIGURING",
            "FAILURE_BACKGROUND_IMPORT",
            "FAILURE_DATA_MIGRATION",
            "FAILURE_SYNCING_FILES",
            "FAILURE_GET_STANDBY_STATUS",
            "FAILURE_GET_ACTIVE_STATUS",
            "FAILURE_MYSQL_ACTIVE_STATUS",
            "FAILURE_MYSQL_STANDBY_STATUS",
            "FAILURE_STANDBY_CANDIDATE",
            "FAILURE_STANDBY_UNCONFIG",
            "FAILURE_STANDBY_PROMOTION",
            "FAILURE_ACTIVE_DEMOTION"
          ],
          "type": "string"
        },
        "drVCOUser": {
          "type": "string"
        },
        "failureDescription": {
          "type": "string"
        },
        "lastDrProtectedTime": {
          "type": "string",
          "format": "date-time"
        },
        "role": {
          "enum": [
            "STANDALONE",
            "ACTIVE",
            "STANDBY",
            "ZOMBIE"
          ],
          "type": "string"
        },
        "roleTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "standbyList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "standbyAddress": {
                "type": "string"
              },
              "standbyAddressV6": {
                "type": "string"
              },
              "standbyReplicationAddress": {
                "type": "string"
              },
              "standbyUuid": {
                "type": "string"
              }
            }
          }
        },
        "stateHistory": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "enum": [
                  "UNCONFIGURED",
                  "ACTIVE_CONFIGURING",
                  "ACTIVE_CONFIGURED",
                  "ACTIVE_UNCONFIG",
                  "LAUNCHING_STANDBY",
                  "LAUNCHED_STANDBY",
                  "ACTIVE_WAIT_STANDBY",
                  "PENDING_STANDBY_CANDIDATE",
                  "STANDBY_CANDIDATE",
                  "STANDBY_CONFIG_RQST",
                  "STANDBY_CONFIGURING",
                  "STANDBY_CONFIGURED",
                  "PENDING_STANDBY_UNCONFIG",
                  "STANDBY_UNCONFIG",
                  "PENDING_STANDBY_PROMOTION",
                  "STANDBY_PROMOTED",
                  "PENDING_ACTIVE_DEMOTION",
                  "COPYING_DB",
                  "COPY_DB_DONE",
                  "COPYING_FILES",
                  "COPY_FILES_DONE",
                  "SYNC_CONFIGURING",
                  "STANDBY_SYNC",
                  "STANDBY_BACKGROUND_IMPORT",
                  "STANDBY_BACKGROUND_IMPORT_DONE",
                  "STANDBY_DATA_MIGRATION",
                  "STANDBY_DATA_MIGRATION_DONE",
                  "STANDBY_DATA_MIGRATION_IN_PROGRESS",
                  "STANDBY_RUNNING",
                  "UPGRADING",
                  "FAILURE_ACTIVE_CONFIGURING",
                  "FAILURE_LAUNCHING_STANDBY",
                  "FAILURE_STANDBY_CONFIGURING",
                  "FAILURE_GET_STANDBY_CONFIG",
                  "FAILURE_COPYING_DB",
                  "FAILURE_COPYING_FILES",
                  "FAILURE_SYNC_CONFIGURING",
                  "FAILURE_BACKGROUND_IMPORT",
                  "FAILURE_DATA_MIGRATION",
                  "FAILURE_SYNCING_FILES",
                  "FAILURE_GET_STANDBY_STATUS",
                  "FAILURE_GET_ACTIVE_STATUS",
                  "FAILURE_MYSQL_ACTIVE_STATUS",
                  "FAILURE_MYSQL_STANDBY_STATUS",
                  "FAILURE_STANDBY_CANDIDATE",
                  "FAILURE_STANDBY_UNCONFIG",
                  "FAILURE_STANDBY_PROMOTION",
                  "FAILURE_ACTIVE_DEMOTION"
                ]
              },
              "to": {
                "type": "string",
                "enum": [
                  "UNCONFIGURED",
                  "ACTIVE_CONFIGURING",
                  "ACTIVE_CONFIGURED",
                  "ACTIVE_UNCONFIG",
                  "LAUNCHING_STANDBY",
                  "LAUNCHED_STANDBY",
                  "ACTIVE_WAIT_STANDBY",
                  "PENDING_STANDBY_CANDIDATE",
                  "STANDBY_CANDIDATE",
                  "STANDBY_CONFIG_RQST",
                  "STANDBY_CONFIGURING",
                  "STANDBY_CONFIGURED",
                  "PENDING_STANDBY_UNCONFIG",
                  "STANDBY_UNCONFIG",
                  "PENDING_STANDBY_PROMOTION",
                  "STANDBY_PROMOTED",
                  "PENDING_ACTIVE_DEMOTION",
                  "COPYING_DB",
                  "COPY_DB_DONE",
                  "COPYING_FILES",
                  "COPY_FILES_DONE",
                  "SYNC_CONFIGURING",
                  "STANDBY_SYNC",
                  "STANDBY_BACKGROUND_IMPORT",
                  "STANDBY_BACKGROUND_IMPORT_DONE",
                  "STANDBY_DATA_MIGRATION",
                  "STANDBY_DATA_MIGRATION_DONE",
                  "STANDBY_DATA_MIGRATION_IN_PROGRESS",
                  "STANDBY_RUNNING",
                  "UPGRADING",
                  "FAILURE_ACTIVE_CONFIGURING",
                  "FAILURE_LAUNCHING_STANDBY",
                  "FAILURE_STANDBY_CONFIGURING",
                  "FAILURE_GET_STANDBY_CONFIG",
                  "FAILURE_COPYING_DB",
                  "FAILURE_COPYING_FILES",
                  "FAILURE_SYNC_CONFIGURING",
                  "FAILURE_BACKGROUND_IMPORT",
                  "FAILURE_DATA_MIGRATION",
                  "FAILURE_SYNCING_FILES",
                  "FAILURE_GET_STANDBY_STATUS",
                  "FAILURE_GET_ACTIVE_STATUS",
                  "FAILURE_MYSQL_ACTIVE_STATUS",
                  "FAILURE_MYSQL_STANDBY_STATUS",
                  "FAILURE_STANDBY_CANDIDATE",
                  "FAILURE_STANDBY_UNCONFIG",
                  "FAILURE_STANDBY_PROMOTION",
                  "FAILURE_ACTIVE_DEMOTION"
                ]
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "stateTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "vcoIp": {
          "type": "string"
        },
        "vcoReplicationIp": {
          "type": "string"
        },
        "vcoUuid": {
          "type": "string"
        }
      },
      "required": [
        "drState",
        "failureDescription",
        "role",
        "roleTimestamp",
        "activeAddress",
        "standbyList",
        "drVCOUser",
        "vcoUuid",
        "vcoIp"
      ],
      "type": "object"
    },
    "disaster_recovery_prepare_for_standby": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "disaster_recovery_prepare_for_standby_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_promote_standby_to_active_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_remove_standby": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "disaster_recovery_remove_standby_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "disaster_recovery_transition_to_standby_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_delete_edge_bgp_neighbor_records_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "edge_delete_edge_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "edge_edge_cancel_reactivation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_edge_provision": {
      "type": "object",
      "properties": {
        "enterpriseId": {
          "type": "integer"
        },
        "configurationId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "modelNumber": {
          "type": "string",
          "enum": [
            "edge500",
            "edge5X0",
            "edge510",
            "edge510lte",
            "edge515",
            "edge6X0",
            "edge610lte",
            "edge840",
            "edge1000",
            "edge1000qat",
            "edge3X00",
            "edge3X10",
            "virtual"
          ]
        },
        "description": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "haEnabled": {
          "type": "boolean"
        },
        "generateCertificate": {
          "type": "boolean"
        },
        "subjectCN": {
          "type": "string"
        },
        "subjectO": {
          "type": "string"
        },
        "subjectOU": {
          "type": "string"
        },
        "challengePassword": {
          "type": "string"
        },
        "privateKeyPassword": {
          "type": "string"
        },
        "edgeLicenseId": {
          "type": "integer"
        },
        "customInfo": {
          "type": "string"
        },
        "analyticsMode": {
          "type": "string",
          "enum": [
            "SDWAN_ONLY",
            "SDWAN_ANALYTICS",
            "ANALYTICS_ONLY"
          ]
        },
        "generateToken": {
          "type": "boolean"
        }
      },
      "required": [
        "configurationId",
        "modelNumber"
      ]
    },
    "edge_edge_provision_result": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "activationKey": {
          "type": "string"
        },
        "generatedCertificate": {
          "type": "object",
          "properties": {
            "certificate": {
              "type": "string"
            },
            "ca-certificate": {
              "type": "string"
            },
            "privateKey": {
              "type": "string"
            },
            "privateKeyPassword": {
              "type": "string"
            },
            "csr": {
              "type": "string"
            }
          }
        },
        "token": {
          "type": "object",
          "properties": {
            "hmac": {
              "type": "string"
            },
            "logicalId": {
              "type": "string"
            }
          },
          "required": [
            "hmac",
            "logicalId"
          ]
        }
      },
      "required": [
        "id",
        "activationKey"
      ]
    },
    "edge_edge_request_reactivation_result": {
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "activationKeyExpires": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "activationKey",
        "activationKeyExpires"
      ]
    },
    "edge_get_edge_configuration_modules": {
      "type": "object",
      "properties": {
        "edgeId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "modules": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "imageUpdate",
              "controlPlane",
              "managementPlane",
              "firewall",
              "QOS",
              "deviceSettings",
              "WAN",
              "metaData",
              "properties",
              "analyticsSettings"
            ]
          }
        }
      }
    },
    "edge_get_edge_configuration_stack_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "modified",
            "modules"
          ]
        }
      ]
    },
    "edge_get_edge_result": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "properties": {
            "configuration": {
              "$ref": "#/definitions/model_configuration"
            },
            "enterprise": {
              "$ref": "#/definitions/enterprise"
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "recentLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "site": {
              "$ref": "#/definitions/site"
            },
            "selfHealing": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "created",
            "enterpriseId",
            "siteId",
            "activationKey",
            "activationKeyExpires",
            "activationState",
            "activationTime",
            "softwareVersion",
            "bastionState",
            "buildNumber",
            "softwareUpdated",
            "selfMacAddress",
            "deviceId",
            "logicalId",
            "serialNumber",
            "modelNumber",
            "deviceFamily",
            "name",
            "dnsName",
            "description",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "edgeState",
            "edgeStateTime",
            "isLive",
            "systemUpSince",
            "serviceUpSince",
            "lastContact",
            "serviceState",
            "endpointPkiMode",
            "haState",
            "haPreviousState",
            "haLastContact",
            "haSerialNumber",
            "modified"
          ],
          "type": "object"
        }
      ]
    },
    "edge_object": {
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "activationKeyExpires": {
          "type": "string"
        },
        "activationState": {
          "enum": [
            "UNASSIGNED",
            "PENDING",
            "ACTIVATED",
            "REACTIVATION_PENDING"
          ],
          "type": "string"
        },
        "activationTime": {
          "type": "string"
        },
        "alertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED",
            "PROMOTION_REQUESTED",
            "PROMOTION_PENDING",
            "PROMOTED"
          ]
        },
        "buildNumber": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "customInfo": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "deviceFamily": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "dnsName": {
          "type": "string"
        },
        "edgeState": {
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ],
          "type": "string"
        },
        "edgeStateTime": {
          "type": "string"
        },
        "endpointPkiMode": {
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ],
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "factorySoftwareVersion": {
          "type": "string"
        },
        "factoryBuildNumber": {
          "type": "string"
        },
        "platformFirmwareVersion": {
          "type": "string"
        },
        "platformBuildNumber": {
          "type": "string"
        },
        "modemFirmwareVersion": {
          "type": "string"
        },
        "modemBuildNumber": {
          "type": "string"
        },
        "lteRegion": {
          "type": "string"
        },
        "haLastContact": {
          "type": "string"
        },
        "haPreviousState": {
          "enum": [
            "UNCONFIGURED",
            "PENDING_INIT",
            "PENDING_CONFIRMATION",
            "PENDING_CONFIRMED",
            "PENDING_DISSOCIATION",
            "READY",
            "FAILED"
          ],
          "type": "string"
        },
        "haSerialNumber": {
          "type": "string"
        },
        "haState": {
          "enum": [
            "UNCONFIGURED",
            "PENDING_INIT",
            "PENDING_CONFIRMATION",
            "PENDING_CONFIRMED",
            "PENDING_DISSOCIATION",
            "READY",
            "FAILED"
          ],
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "isLive": {
          "type": "integer"
        },
        "lastContact": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "modelNumber": {
          "type": "string"
        },
        "modified": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operatorAlertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "selfMacAddress": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "serviceState": {
          "enum": [
            "IN_SERVICE",
            "OUT_OF_SERVICE",
            "PENDING_SERVICE"
          ],
          "type": "string"
        },
        "serviceUpSince": {
          "type": "string"
        },
        "siteId": {
          "type": "integer"
        },
        "softwareUpdated": {
          "type": "string"
        },
        "softwareVersion": {
          "type": "string"
        },
        "systemUpSince": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "edge_set_edge_hand_off_gateways_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_update_edge_admin_password_result": {
      "properties": {
        "id": {
          "description": "The ID of the action queued",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "set_client_device_host_name_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_update_edge_attributes_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_set_edge_bastion_state_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "edge_update_edge_credentials_by_configuration_result": {
      "properties": {
        "actionIds": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "required": [
        "actionIds"
      ],
      "type": "object"
    },
    "edge_set_edge_operator_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "edge_unset_edge_operator_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_set_enterprise_operator_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "edge_set_edge_enterprise_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_alert_notification_user_data": {
      "properties": {
        "email": {
          "type": "string"
        },
        "emailEnabled": {
          "type": "integer"
        },
        "enabled": {
          "type": "integer"
        },
        "enterpriseUserId": {
          "type": "integer"
        },
        "mobileEnabled": {
          "type": "integer"
        },
        "mobilePhone": {
          "type": "string"
        },
        "smsEnabled": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "emailEnabled",
        "enabled",
        "enterpriseUserId",
        "mobileEnabled",
        "mobilePhone",
        "smsEnabled",
        "username"
      ],
      "type": "object"
    },
    "enterprise_alert_notification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "enterpriseAlertTriggerId": {
          "type": "number"
        },
        "enterpriseId": {
          "type": "number"
        },
        "created": {
          "type": "string"
        },
        "enterpriseUserList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_alert_notification_user_data"
          }
        },
        "smsEnabled": {
          "type": "number"
        },
        "smsList": {
          "type": "string"
        },
        "smsText": {
          "type": "string"
        },
        "emailEnabled": {
          "type": "number"
        },
        "emailList": {
          "type": "string"
        },
        "emailText": {
          "type": "string"
        },
        "mobileEnabled": {
          "type": "number"
        },
        "mobileList": {
          "type": "string"
        },
        "mobileText": {
          "type": "string"
        },
        "snmpEnabled": {
          "type": "number"
        },
        "snmpList": {
          "type": "string"
        },
        "modified": {
          "type": "string"
        }
      }
    },
    "enterprise_delete_enterprise_delete_enterprise_gateway_records_record": {
      "properties": {
        "gatewayId": {
          "type": "integer"
        },
        "neighborIp": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "enterprise_delete_enterprise_gateway_records_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_delete_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_delete_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_delete_enterprise_service_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_enterprise_proxy": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_proxy"
        },
        {
          "required": [
            "id",
            "created",
            "networkId",
            "proxyType",
            "operateGateways",
            "logicalId",
            "name",
            "domain",
            "prefix",
            "description",
            "contactName",
            "contactPhone",
            "contactMobile",
            "contactEmail",
            "streetAddress",
            "streetAddress2",
            "city",
            "state",
            "postalCode",
            "country",
            "lat",
            "lon",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_addresses_result_item": {
      "properties": {
        "address": {
          "type": "string"
        },
        "entity": {
          "enum": [
            "ACTIVE_VCO",
            "STANDBY_VCO",
            "GATEWAY",
            "DATACENTER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "enterprise_get_enterprise_alert_definitions_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_alert_definition"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "type",
            "definition",
            "firstNotificationSeconds",
            "maxNotifications",
            "notificationIntervalSeconds",
            "resetIntervalSeconds",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_alert_configurations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_alert_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "alertDefinitionId",
            "enterpriseId",
            "enabled",
            "name",
            "description",
            "type",
            "definition",
            "firstNotificationSeconds",
            "maxNotifications",
            "notificationIntervalSeconds",
            "resetIntervalSeconds",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_alerts_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_alert_trigger"
        },
        {
          "type": "object",
          "properties": {
            "notifications": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_alert_notification"
              }
            }
          }
        },
        {
          "required": [
            "id",
            "created",
            "triggerTime",
            "enterpriseAlertConfigurationId",
            "enterpriseId",
            "edgeId",
            "edgeName",
            "linkId",
            "linkName",
            "enterpriseObjectId",
            "enterpriseObjectName",
            "name",
            "type",
            "state",
            "stateSetTime",
            "lastContact",
            "firstNotificationSeconds",
            "maxNotifications",
            "notificationIntervalSeconds",
            "resetIntervalSeconds",
            "comment",
            "nextNotificationTime",
            "remainingNotifications",
            "timezone",
            "locale",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_all_alert_recipients_result": {
      "properties": {
        "emailEnabled": {
          "type": "boolean"
        },
        "emailList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enterpriseUsers": {
          "items": {
            "$ref": "#/definitions/enterprise_alert_notification_user_data"
          },
          "type": "array"
        },
        "mobileEnabled": {
          "type": "boolean"
        },
        "mobileList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "smsEnabled": {
          "type": "boolean"
        },
        "smsList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "snmpEnabled": {
          "type": "boolean"
        },
        "snmpList": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "webhookEnabled": {
          "type": "boolean"
        },
        "webhookList": {
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "emailEnabled",
        "emailList",
        "enterpriseUsers",
        "mobileEnabled",
        "mobileList",
        "smsEnabled",
        "smsList"
      ],
      "type": "object"
    },
    "enterprise_get_enterprise_capabilities_result": {
      "type": "object",
      "properties": {
        "edgeVnfs.enable": {
          "type": "boolean"
        },
        "edgeVnfs.securityVnf.paloAlto": {
          "type": "boolean"
        },
        "edgeVnfs.securityVnf.checkpoint": {
          "type": "boolean"
        },
        "edgeVnfs.securityVnf.fortinet": {
          "type": "boolean"
        },
        "enableCosMapping": {
          "type": "boolean"
        },
        "enableEnterpriseAuth": {
          "type": "boolean"
        },
        "enableFwLogs": {
          "type": "boolean"
        },
        "enableStatefulFirewall": {
          "type": "boolean"
        },
        "enableNetworks": {
          "type": "boolean"
        },
        "enablePremium": {
          "type": "boolean"
        },
        "enableSegmentation": {
          "type": "boolean"
        },
        "enableServiceRateLimiting": {
          "type": "boolean"
        },
        "enableRoleCustomization": {
          "type": "boolean"
        },
        "enableSecureEdgeAccess": {
          "type": "boolean"
        }
      },
      "example": {
        "edgeVnfs.enable": true,
        "edgeVnfs.securityVnf.paloAlto": true,
        "edgeVnfs.securityVnf.checkpoint": true,
        "edgeVnfs.securityVnf.fortinet": true,
        "enableCosMapping": true,
        "enableEnterpriseAuth": true,
        "enableFwLogs": false,
        "enableStatefulFirewall": false,
        "enableNetworks": true,
        "enablePremium": true,
        "enableSegmentation": true,
        "enableServiceRateLimiting": false,
        "enableRoleCustomization": false,
        "enableSecureEdgeAccess": false
      }
    },
    "enterprise_get_analytics_configuration_result": {
      "type": "object",
      "properties": {
        "analyticsCapability": {
          "type": "string",
          "enum": [
            "NONE",
            "APPLICATION_BRANCH"
          ]
        },
        "analyticsEdgeLimit": {
          "type": "integer"
        },
        "analyticsSelfHealing": {
          "type": "boolean"
        }
      }
    },
    "enterprise_proxy_get_enterprise_proxy_capabilities_result": {
      "type": "object",
      "properties": {
        "enableRoleCustomization": {
          "type": "boolean"
        }
      }
    },
    "enterprise_get_enterprise_configurations_with_policies": {
      "title": "enterprise_get_enterprise_configurations_with_policies",
      "type": "object",
      "properties": {
        "enterpriseId": {
          "type": "integer"
        },
        "with": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "quiescedGatewayUsage"
            ]
          }
        }
      }
    },
    "enterprise_get_enterprise_configurations_with_policies_result": {
      "title": "enterprise_get_enterprise_configurations_with_policies_result",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "configurationType": {
            "type": "string",
            "enum": [
              "NETWORK_BASED",
              "SEGMENT_BASED"
            ]
          },
          "bastionState": {
            "type": "string",
            "enum": [
              "UNCONFIGURED",
              "STAGE_REQUESTED",
              "UNSTAGE_REQUESTED",
              "STAGED",
              "UNSTAGED"
            ]
          },
          "created": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "edgeCount": {
            "type": "integer"
          },
          "effective": {
            "type": "string"
          },
          "hasQuiescedGatewayUsage": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "isStaging": {
            "type": "integer"
          },
          "logicalId": {
            "type": "string"
          },
          "modified": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "policies": {
            "type": "object",
            "properties": {
              "bizPolicyEnabled": {
                "type": "boolean"
              },
              "deviceSettingsEnabled": {
                "type": "boolean"
              },
              "firewall": {
                "type": "string",
                "enum": [
                  "none",
                  "enabled",
                  "disabled"
                ]
              }
            },
            "required": [
              "bizPolicyEnabled",
              "deviceSettingsEnabled",
              "firewall"
            ]
          },
          "schemaVersion": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      }
    },
    "enterprise_get_enterprise_configurations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "properties": {
            "edges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "buildNumber": {
                    "type": "string"
                  },
                  "softwareVersion": {
                    "type": "string"
                  },
                  "modelNumber": {
                    "type": "string"
                  },
                  "activationState": {
                    "enum": [
                      "UNASSIGNED",
                      "PENDING",
                      "ACTIVATED",
                      "REACTIVATION_PENDING"
                    ],
                    "type": "string"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "lastContact": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "effective",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_operator_configuration_type": {
      "title": "enterprise_get_enterprise_operator_configuration_type",
      "type": "object",
      "properties": {
        "enterpriseId": {
          "type": "integer"
        }
      }
    },
    "enterprise_get_enterprise_operator_configuration_type_result": {
      "title": "enterprise_get_enterprise_operator_configuration_type_result",
      "type": "object",
      "properties": {
        "configurationType": {
          "type": "string",
          "enum": [
            "NETWORK_BASED",
            "SEGMENT_BASED"
          ]
        }
      },
      "required": [
        "configurationType"
      ]
    },
    "count_result": {
      "title": "count_result",
      "type": "object",
      "properties": {
        "count": {
          "type": "integer"
        }
      },
      "required": [
        "count"
      ],
      "additionalProperties": false
    },
    "api_sorting": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "additionalProperties": false
      }
    },
    "api_filter": {
      "type": "object"
    },
    "api_filters": {
      "type": "object"
    },
    "metric_filter": {
      "type": "object"
    },
    "metric_filters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/metric_filter"
      }
    },
    "quick_search": {
      "type": "string",
      "minLength": 1
    },
    "enterprise_get_enterprise_edges_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "enterprise_get_enterprise_edges_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "properties": {
            "certificates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_certificate"
              }
            },
            "configuration": {
              "type": "object",
              "properties": {
                "operator": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "modules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "isEdgeSpecific": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ENTERPRISE",
                              "OPERATOR",
                              "GATEWAY"
                            ]
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "enterprise": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "modules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "edgeSpecificData": {
                            "type": "object"
                          },
                          "isEdgeSpecific": {
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "ENTERPRISE",
                              "OPERATOR",
                              "GATEWAY"
                            ]
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "ha": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "ACTIVE_ACTIVE",
                    "ACTIVE_STANDBY",
                    "VRRP"
                  ]
                },
                "data": {
                  "type": "object"
                }
              }
            },
            "licenses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_license"
              }
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "recentLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "site": {
              "$ref": "#/definitions/site"
            },
            "isHub": {
              "type": "boolean"
            },
            "isSoftwareVersionSupportedByVco": {
              "type": "boolean"
            }
          },
          "required": [
            "id",
            "created",
            "enterpriseId",
            "siteId",
            "activationKey",
            "activationKeyExpires",
            "activationState",
            "activationTime",
            "softwareVersion",
            "bastionState",
            "buildNumber",
            "factorySoftwareVersion",
            "factoryBuildNumber",
            "platformFirmwareVersion",
            "platformBuildNumber",
            "modemFirmwareVersion",
            "modemBuildNumber",
            "softwareUpdated",
            "selfMacAddress",
            "deviceId",
            "logicalId",
            "serialNumber",
            "modelNumber",
            "deviceFamily",
            "name",
            "dnsName",
            "description",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "edgeState",
            "edgeStateTime",
            "isLive",
            "systemUpSince",
            "serviceUpSince",
            "lastContact",
            "serviceState",
            "endpointPkiMode",
            "haState",
            "haPreviousState",
            "haLastContact",
            "haSerialNumber",
            "modified"
          ],
          "type": "object"
        }
      ]
    },
    "enterprise_get_enterprise_edge_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "enterprise_get_enterprise_edge_list_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "properties": {
            "certificates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_certificate"
              }
            },
            "configuration": {
              "type": "object",
              "properties": {
                "operator": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "isEdgeSpecific": {
                      "type": "boolean"
                    },
                    "imageUpdate": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "buildNumber": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "enterprise": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "edgeOverrides": {
                  "type": "object",
                  "properties": {
                    "deviceSettings": {
                      "type": "boolean"
                    },
                    "firewall": {
                      "type": "boolean"
                    },
                    "firewallDisabled": {
                      "type": "boolean"
                    },
                    "qos": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "ha": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "ACTIVE_ACTIVE",
                    "ACTIVE_STANDBY",
                    "VRRP"
                  ]
                },
                "data": {
                  "type": "object"
                }
              }
            },
            "licenses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_license"
              }
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "recentLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/link"
              }
            },
            "site": {
              "$ref": "#/definitions/site"
            },
            "isHub": {
              "type": "boolean"
            },
            "cloudServices": {
              "$ref": "#/definitions/get_enterprise_edge_cloud_services_result"
            },
            "nvsFromEdge": {
              "$ref": "#/definitions/get_enterprise_edge_cloud_services_result"
            },
            "vnfs": {
              "$ref": "#/definitions/get_enterprise_edge_vnfs_result"
            }
          },
          "required": [
            "id",
            "created",
            "enterpriseId",
            "siteId",
            "activationKey",
            "activationKeyExpires",
            "activationState",
            "activationTime",
            "softwareVersion",
            "bastionState",
            "buildNumber",
            "softwareUpdated",
            "selfMacAddress",
            "deviceId",
            "logicalId",
            "serialNumber",
            "modelNumber",
            "deviceFamily",
            "name",
            "dnsName",
            "description",
            "alertsEnabled",
            "operatorAlertsEnabled",
            "edgeState",
            "edgeStateTime",
            "isLive",
            "systemUpSince",
            "serviceUpSince",
            "lastContact",
            "serviceState",
            "endpointPkiMode",
            "haState",
            "haPreviousState",
            "haLastContact",
            "haSerialNumber",
            "modified"
          ],
          "type": "object"
        }
      ]
    },
    "edge_list_ha_details_active_standby": {
      "type": "object",
      "properties": {
        "haLastContact": {
          "type": "string",
          "format": "date-time"
        },
        "haPreviousState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "PENDING_INIT",
            "PENDING_CONFIRMATION",
            "PENDING_CONFIRMED",
            "PENDING_DISSOCIATION",
            "READY",
            "FAILED"
          ]
        },
        "haSerialNumber": {
          "type": "string"
        },
        "haState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "PENDING_INIT",
            "PENDING_CONFIRMATION",
            "PENDING_CONFIRMED",
            "PENDING_DISSOCIATION",
            "READY",
            "FAILED"
          ]
        }
      },
      "required": [
        "haLastContact",
        "haPreviousState",
        "haSerialNumber",
        "haState"
      ]
    },
    "edge_list_ha_details_active_active": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "integer"
        },
        "clusterName": {
          "type": "string"
        }
      },
      "required": [
        "clusterId",
        "clusterName"
      ]
    },
    "edge_list_ha_details_vrrp": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/device_settings_vrrp_virtual_router"
      }
    },
    "enterprise_get_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        }
      ]
    },
    "enterprise_get_enterprise_network_allocations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        }
      ]
    },
    "enterprise_get_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "properties": {
            "enterpriseProxy": {
              "$ref": "#/definitions/enterprise_enterprise_proxy"
            }
          },
          "required": [
            "domain",
            "contactPhone",
            "locale",
            "alertsEnabled",
            "endpointPkiMode",
            "contactEmail",
            "prefix",
            "contactName",
            "timezone",
            "id",
            "gatewayPoolId",
            "networkId",
            "city",
            "lon",
            "state",
            "streetAddress",
            "postalCode",
            "streetAddress2",
            "description",
            "accountNumber",
            "contactMobile",
            "lat",
            "logicalId",
            "operatorAlertsEnabled",
            "name",
            "created",
            "country",
            "modified",
            "bastionState"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_route_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        }
      ]
    },
    "exit_entity_type": {
      "title": "exit_entity_type",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "logicalId",
        "name"
      ]
    },
    "enterprise_get_enterprise_route_table_result": {
      "properties": {
        "profiles": {
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/model_configuration"
              },
              {
                "required": [
                  "id",
                  "description",
                  "name"
                ]
              }
            ],
            "type": "object"
          },
          "type": "array"
        },
        "subnets": {
          "items": {
            "$ref": "#/definitions/enterprise_route_collection"
          },
          "type": "array"
        },
        "exits": {
          "type": "object",
          "properties": {
            "edges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exit_entity_type"
              }
            },
            "hubs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exit_entity_type"
              }
            },
            "gateways": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exit_entity_type"
              }
            },
            "nvs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/exit_entity_type"
              }
            }
          },
          "required": [
            "edges",
            "hubs",
            "nvs",
            "gateways"
          ]
        }
      },
      "type": "object"
    },
    "enterprise_get_enterprise_services_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "profileCount": {
              "type": "integer"
            },
            "edgeCount": {
              "type": "integer"
            },
            "groupCount": {
              "type": "integer"
            },
            "edgeQOSUsage": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "segmentObjectId": {
                    "type": "integer"
                  },
                  "edgeId": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "profileId": {
                    "type": "integer"
                  }
                }
              }
            },
            "secureAccessCount": {
              "type": "integer"
            },
            "secureAccess": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "enterprise_object": {
      "allOf": [
        {
          "$ref": "#/definitions/site"
        },
        {
          "type": "object",
          "properties": {
            "gatewayPoolId": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "networkId": {
              "type": "integer"
            },
            "returnData": {
              "type": "boolean"
            },
            "user": {
              "$ref": "#/definitions/auth_object"
            }
          }
        }
      ]
    },
    "clone_enterprise_v2_request": {
      "allOf": [
        {
          "$ref": "#/definitions/site"
        },
        {
          "$ref": "#/definitions/enterprise_insert_enterprise_delegation_params"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "user": {
              "allOf": [
                {
                  "$ref": "#/definitions/auth_object"
                },
                {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "officePhone": {
                      "type": "string"
                    },
                    "mobilePhone": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "gatewayPoolId": {
              "type": "integer"
            },
            "networkId": {
              "type": "integer"
            },
            "accountNumber": {
              "type": "string"
            },
            "configurationId": {
              "type": "integer"
            },
            "licenses": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            },
            "serviceLicenses": {
              "$ref": "#/definitions/get_enterprise_service_license_result"
            },
            "with": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "id",
            "name",
            "user",
            "configurationId"
          ]
        }
      ]
    },
    "enterprise_insert_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_enterprise_network_segment_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_enterprise_delegation_params": {
      "type": "object",
      "properties": {
        "enableEnterpriseDelegationToOperator": {
          "type": "boolean"
        },
        "enableEnterpriseDelegationToProxy": {
          "type": "boolean"
        },
        "enableEnterpriseUserManagementDelegationToOperator": {
          "type": "boolean"
        },
        "delegateEdgeImageManagementToEnterprise": {
          "type": "boolean"
        },
        "enableExportRestriction": {
          "type": "boolean"
        },
        "assignedOperatorProfileConfigurationIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "enterprise_insert_enterprise": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object"
        },
        {
          "$ref": "#/definitions/enterprise_insert_enterprise_delegation_params"
        },
        {
          "type": "object",
          "properties": {
            "configurationId": {
              "type": "integer"
            },
            "licenses": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            },
            "serviceLicenses": {
              "$ref": "#/definitions/get_enterprise_service_license_result"
            },
            "analyticsConfiguration": {
              "$ref": "#/definitions/enterprise_get_analytics_configuration_result"
            }
          },
          "required": [
            "configurationId",
            "name"
          ]
        }
      ]
    },
    "enterprise_insert_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise": {
      "allOf": [
        {
          "$ref": "#/definitions/site"
        },
        {
          "type": "object",
          "properties": {
            "gatewayPoolId": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "networkId": {
              "type": "integer"
            },
            "returnData": {
              "type": "boolean"
            },
            "user": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "email": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    },
    "enterprise_update_enterprise_result": {
      "$ref": "#/definitions/rows_modified_confirmation"
    },
    "enterprise_set_enterprise_bastion_state_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_proxy_insert_enterprise_proxy_enterprise": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_insert_enterprise"
        },
        {
          "type": "object",
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "enterprise_proxy_insert_enterprise_proxy_enterprise_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_insert_enterprise_result"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_enterprises_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "type": "object",
          "properties": {
            "edgeCount": {
              "type": "integer"
            },
            "edges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_object"
              }
            },
            "serviceLicenses": {
              "$ref": "#/definitions/get_enterprise_service_license_result"
            }
          }
        }
      ]
    },
    "proxy_edge_inventory_object": {
      "type": "object",
      "properties": {
        "enterpriseName": {
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeName": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "edgeState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "haSerialNumber": {
          "type": "string"
        },
        "activationState": {
          "type": "string",
          "enum": [
            "UNASSIGNED",
            "PENDING",
            "ACTIVATED",
            "REACTIVATION_PENDING"
          ]
        },
        "activationTime": {
          "type": "string",
          "format": "date-time"
        },
        "modelNumber": {
          "type": "string"
        },
        "softwareVersion": {
          "type": "string"
        },
        "softwareUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "lastContact": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "enterpriseName",
        "enterpriseId",
        "edgeName",
        "edgeId",
        "created",
        "edgeState",
        "serialNumber",
        "haSerialNumber",
        "activationState",
        "activationTime",
        "modelNumber",
        "softwareVersion",
        "softwareUpdated",
        "lastContact"
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_edge_inventory_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/proxy_edge_inventory_object"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_operator_profiles_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "type": "object",
          "properties": {
            "edges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_object"
              }
            },
            "enterprises": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/configuration_enterprise"
              }
            }
          },
          "required": [
            "id",
            "created",
            "name",
            "version",
            "description",
            "effective",
            "modified"
          ]
        }
      ]
    },
    "enterprise_insert_enterprise_service_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_alert_configurations_result": {
      "type": "object",
      "properties": {
        "enterpriseAlertConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_alert_configuration"
          }
        }
      }
    },
    "enterprise_insert_or_update_enterprise_capability_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_insert_or_update_enterprise_proxy_capability_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_set_enterprise_maximum_segments_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_specific_rate_limits_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_insert_or_update_enterprise_specific_rate_limits_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_set_enterprise_distributed_cost_calculation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_set_nsd_buckets_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_set_enterprise_refresh_routes_version_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_property": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isPassword": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "JSON",
            "DATE",
            "DATETIME"
          ]
        },
        "description": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_get_enterprise_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "enterpriseId",
            "value",
            "isPassword",
            "dataType",
            "description",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_use_nsd_policy_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "enterpriseId",
            "value",
            "isPassword",
            "dataType",
            "description",
            "modified"
          ]
        }
      ]
    },
    "enterprise_get_enterprise_secure_access_max_pops": {
      "type": "object",
      "properties": {
        "maxPops": {
          "type": "integer"
        }
      }
    },
    "enterprise_get_enterprise_gateway_handoff_result": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string"
            },
            "isPassword": {
              "type": "boolean"
            },
            "dataType": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "modified": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "enterpriseId",
            "value"
          ]
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_gateway_handoff": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff"
        }
      ]
    },
    "enterprise_insert_or_update_enterprise_gateway_handoff_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_gateway_pools_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_pool"
        },
        {
          "properties": {
            "enterprises": {
              "items": {
                "$ref": "#/definitions/enterprise"
              },
              "type": "array"
            },
            "gateways": {
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/gateway_pool_gateway"
                  },
                  {
                    "properties": {
                      "roles": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/gateway_role"
                        }
                      }
                    }
                  }
                ]
              },
              "type": "array"
            }
          }
        }
      ]
    },
    "enterprise_route_collection": {
      "properties": {
        "eligableExits": {
          "items": {
            "$ref": "#/definitions/enterprise_route"
          },
          "type": "array"
        },
        "preferredExits": {
          "items": {
            "$ref": "#/definitions/enterprise_route"
          },
          "type": "array"
        },
        "subnet": {
          "type": "string"
        },
        "ipVersion": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "enterprise_set_enterprise_all_alert_recipients_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_get_enterprise_all_alert_recipients_result"
        }
      ]
    },
    "enterprise_update_enterprise_network_allocation_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_network_segment_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_route_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_route_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_route_collection"
        },
        {
          "required": [
            "subnet",
            "preferredExits",
            "eligableExits"
          ]
        }
      ]
    },
    "enterprise_update_enterprise_security_policy_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_update_enterprise_service_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_get_enterprise_multicast_route_table_list_result": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "integer"
        },
        "segmentId": {
          "type": "integer"
        },
        "sourceAddress": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "rpAddress": {
          "type": "string"
        },
        "edgeCount": {
          "type": "integer"
        },
        "edges": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "state"
            ]
          }
        }
      },
      "required": [
        "id",
        "enterpriseId",
        "cidrIp",
        "cidrPrefix",
        "segmentId",
        "sourceAddress",
        "created",
        "modified",
        "rpAddress",
        "edgeCount",
        "edges"
      ]
    },
    "event_get_enterprise_events_result": {
      "type": "object",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/enterprise_event"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ]
    },
    "event_get_operator_events_result": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/operator_event"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ],
      "type": "object"
    },
    "event_get_proxy_events_result": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/proxy_event"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ],
      "type": "object"
    },
    "event_get_enterprise_events_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "event_get_enterprise_events_list_result": {
      "title": "event_get_enterprise_events_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_event"
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "firewall_get_enterprise_firewall_logs_list_result": {
      "title": "firewall_get_enterprise_firewall_logs_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_event"
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "event_get_enterprise_object_events_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "event_get_enterprise_object_events_list_result": {
      "title": "event_get_enterprise_object_events_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_event"
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "event_get_edge_ha_events_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "event_get_edge_ha_events_list_result": {
      "title": "event_get_edge_ha_events_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_event"
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "event_get_operator_events_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "event_get_operator_events_list_result": {
      "title": "event_get_operator_events_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/operator_event"
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "event_get_proxy_events_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "event_get_proxy_events_list_result": {
      "title": "event_get_proxy_events_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/proxy_event"
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "enterprise_get_enterprise_alerts_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "enterprise_get_enterprise_alerts_list_result": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/enterprise_get_enterprise_alerts_result_item"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ],
      "type": "object"
    },
    "network_get_network_gateways_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "network_get_network_gateways_list_result": {
      "title": "network_get_network_gateways_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "activationKey": {
                "type": "string"
              },
              "activationState": {
                "type": "string",
                "enum": [
                  "UNASSIGNED",
                  "PENDING",
                  "ACTIVATED",
                  "REACTIVATION_PENDING"
                ]
              },
              "activationTime": {
                "type": "string",
                "format": "date-time"
              },
              "bastionState": {
                "type": "string",
                "enum": [
                  "UNCONFIGURED",
                  "STAGE_REQUESTED",
                  "UNSTAGE_REQUESTED",
                  "STAGED",
                  "UNSTAGED"
                ]
              },
              "buildNumber": {
                "type": "string"
              },
              "certificates": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_certificate"
                }
              },
              "connectedEdges": {
                "type": "integer"
              },
              "connectedEdgeList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vceid": {
                      "type": "string"
                    }
                  }
                }
              },
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "dataCenters": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "description": {
                "type": "string"
              },
              "deviceId": {
                "type": "string"
              },
              "dnsName": {
                "type": "string"
              },
              "endpointPkiMode": {
                "type": "string",
                "enum": [
                  "CERTIFICATE_DISABLED",
                  "CERTIFICATE_OPTIONAL",
                  "CERTIFICATE_REQUIRED"
                ]
              },
              "enterpriseAssociations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_enterprise_assoc"
                }
              },
              "enterpriseAssociationCount": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer"
                }
              },
              "enterprises": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/enterprise"
                }
              },
              "enterpriseProxyId": {
                "type": "integer"
              },
              "gatewayState": {
                "type": "string",
                "enum": [
                  "NEVER_ACTIVATED",
                  "DEGRADED",
                  "QUIESCED",
                  "DISABLED",
                  "OUT_OF_SERVICE",
                  "CONNECTED",
                  "OFFLINE"
                ]
              },
              "handOffDetail": {
                "$ref": "#/definitions/gateway_handoff_detail"
              },
              "handOffEdges": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_handoff_edge"
                }
              },
              "id": {
                "type": "integer"
              },
              "ipAddress": {
                "type": "string"
              },
              "ipsecGatewayDetail": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "strictHostCheck": {
                    "type": "boolean"
                  },
                  "strictHostCheckDN": {
                    "type": "string"
                  }
                }
              },
              "isLoadBalanced": {
                "type": "boolean"
              },
              "lastContact": {
                "type": "string"
              },
              "logicalId": {
                "type": "string"
              },
              "modified": {
                "type": "string",
                "format": "date-time"
              },
              "name": {
                "type": "string"
              },
              "networkId": {
                "type": "integer"
              },
              "pools": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_gateway_pool"
                }
              },
              "privateIpAddress": {
                "type": "string"
              },
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_role"
                }
              },
              "serviceState": {
                "type": "string",
                "enum": [
                  "IN_SERVICE",
                  "OUT_OF_SERVICE",
                  "PENDING_SERVICE",
                  "QUIESCED"
                ]
              },
              "serviceUpSince": {
                "type": "string"
              },
              "site": {
                "$ref": "#/definitions/site"
              },
              "siteId": {
                "type": "integer"
              },
              "softwareVersion": {
                "type": "string"
              },
              "systemUpSince": {
                "type": "string"
              },
              "utilization": {
                "type": "number"
              },
              "utilizationDetail": {
                "type": "object",
                "properties": {
                  "load": {
                    "type": "number"
                  },
                  "overall": {
                    "type": "number"
                  },
                  "cpu": {
                    "type": "number"
                  },
                  "memory": {
                    "type": "number"
                  }
                }
              },
              "poolsCount": {
                "type": "integer"
              },
              "certificatesCount": {
                "type": "integer"
              }
            }
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "enterprise_proxy_get_enterprise_proxy_gateways_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "enterprise_proxy_get_enterprise_proxy_gateways_list_result": {
      "title": "enterprise_proxy_get_enterprise_proxy_gateways_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "activationKey": {
                "type": "string"
              },
              "activationState": {
                "type": "string",
                "enum": [
                  "UNASSIGNED",
                  "PENDING",
                  "ACTIVATED",
                  "REACTIVATION_PENDING"
                ]
              },
              "activationTime": {
                "type": "string",
                "format": "date-time"
              },
              "bastionState": {
                "type": "string",
                "enum": [
                  "UNCONFIGURED",
                  "STAGE_REQUESTED",
                  "UNSTAGE_REQUESTED",
                  "STAGED",
                  "UNSTAGED"
                ]
              },
              "buildNumber": {
                "type": "string"
              },
              "certificates": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_certificate"
                }
              },
              "connectedEdges": {
                "type": "integer"
              },
              "connectedEdgeList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vceid": {
                      "type": "string"
                    }
                  }
                }
              },
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "dataCenters": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "description": {
                "type": "string"
              },
              "deviceId": {
                "type": "string"
              },
              "dnsName": {
                "type": "string"
              },
              "endpointPkiMode": {
                "type": "string",
                "enum": [
                  "CERTIFICATE_DISABLED",
                  "CERTIFICATE_OPTIONAL",
                  "CERTIFICATE_REQUIRED"
                ]
              },
              "enterpriseAssociations": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_enterprise_assoc"
                }
              },
              "enterpriseAssociationCount": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer"
                }
              },
              "enterprises": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/enterprise"
                }
              },
              "enterpriseProxyId": {
                "type": "integer"
              },
              "gatewayState": {
                "type": "string",
                "enum": [
                  "NEVER_ACTIVATED",
                  "DEGRADED",
                  "QUIESCED",
                  "DISABLED",
                  "OUT_OF_SERVICE",
                  "CONNECTED",
                  "OFFLINE"
                ]
              },
              "handOffDetail": {
                "$ref": "#/definitions/gateway_handoff_detail"
              },
              "handOffEdges": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_handoff_edge"
                }
              },
              "id": {
                "type": "integer"
              },
              "ipAddress": {
                "type": "string"
              },
              "ipsecGatewayDetail": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "strictHostCheck": {
                    "type": "boolean"
                  },
                  "strictHostCheckDN": {
                    "type": "string"
                  }
                }
              },
              "isLoadBalanced": {
                "type": "boolean"
              },
              "lastContact": {
                "type": "string"
              },
              "logicalId": {
                "type": "string"
              },
              "modified": {
                "type": "string",
                "format": "date-time"
              },
              "name": {
                "type": "string"
              },
              "networkId": {
                "type": "integer"
              },
              "pools": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_gateway_pool"
                }
              },
              "privateIpAddress": {
                "type": "string"
              },
              "roles": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_role"
                }
              },
              "serviceState": {
                "type": "string",
                "enum": [
                  "IN_SERVICE",
                  "OUT_OF_SERVICE",
                  "PENDING_SERVICE",
                  "QUIESCED"
                ]
              },
              "serviceUpSince": {
                "type": "string"
              },
              "site": {
                "$ref": "#/definitions/site"
              },
              "siteId": {
                "type": "integer"
              },
              "softwareVersion": {
                "type": "string"
              },
              "systemUpSince": {
                "type": "string"
              },
              "utilization": {
                "type": "number"
              },
              "utilizationDetail": {
                "type": "object",
                "properties": {
                  "load": {
                    "type": "number"
                  },
                  "overall": {
                    "type": "number"
                  },
                  "cpu": {
                    "type": "number"
                  },
                  "memory": {
                    "type": "number"
                  }
                }
              },
              "poolsCount": {
                "type": "integer"
              },
              "certificatesCount": {
                "type": "integer"
              }
            }
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "enterprise_get_enterprise_multicast_route_table_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "enterprise_get_enterprise_multicast_route_table_list_paginated_result": {
      "title": "enterprise_get_enterprise_multicast_route_table_list_paginated_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "enterpriseId": {
                "type": "integer"
              },
              "cidrIp": {
                "type": "string"
              },
              "cidrPrefix": {
                "type": "integer"
              },
              "segmentId": {
                "type": "integer"
              },
              "sourceAddress": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "modified": {
                "type": "string",
                "format": "date-time"
              },
              "rpAddress": {
                "type": "string"
              },
              "edgeCount": {
                "type": "integer"
              },
              "edges": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "state"
                  ]
                }
              },
              "edgeName": {
                "type": "string"
              },
              "segmentName": {
                "type": "string"
              }
            }
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "flow_metric_summary": {
      "type": "object",
      "properties": {
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "flowCount": {
          "type": "integer"
        },
        "packetsRx": {
          "type": "integer",
          "format": "int64"
        },
        "packetsTx": {
          "type": "integer",
          "format": "int64"
        },
        "totalBytes": {
          "type": "integer",
          "format": "int64"
        },
        "totalPackets": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "time_series": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "max": {
          "type": "integer",
          "format": "int64"
        },
        "metric": {
          "$ref": "#/definitions/path_metric"
        },
        "min": {
          "type": "integer",
          "format": "int64"
        },
        "average": {
          "type": "integer",
          "format": "int64"
        },
        "median": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "tickInterval": {
          "type": "integer"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "distribution": {
          "$ref": "#/definitions/time_series_distribution"
        }
      },
      "required": [
        "data",
        "metric",
        "max",
        "min",
        "startTime",
        "tickInterval",
        "total"
      ]
    },
    "time_series_distribution": {
      "type": "object"
    },
    "path_quality_state_distribution": {
      "type": "object",
      "properties": {
        "OFFLINE": {
          "type": "integer"
        },
        "UNKNOWN": {
          "type": "integer"
        },
        "RED": {
          "type": "integer"
        },
        "YELLOW": {
          "type": "integer"
        },
        "GREEN": {
          "type": "integer"
        }
      }
    },
    "time_series_metadata": {
      "type": "object",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/time_series"
          }
        }
      },
      "required": [
        "series"
      ]
    },
    "enterprise_user_with_role_info": {
      "allOf": [
        {
          "$ref": "#/definitions/base_enterprise_user"
        },
        {
          "properties": {
            "roleId": {
              "type": "integer"
            },
            "roleName": {
              "type": "string"
            },
            "isSuper": {
              "$ref": "#/definitions/tinyint"
            }
          },
          "required": [
            "id",
            "created",
            "userType",
            "username",
            "domain",
            "password",
            "salt",
            "firstName",
            "lastName",
            "officePhone",
            "mobilePhone",
            "email",
            "isNative",
            "isActive",
            "isLocked",
            "disableSecondFactor",
            "lastLogin",
            "modified",
            "passwordModified",
            "isSuper",
            "roleId",
            "roleName"
          ]
        }
      ]
    },
    "enterprise_user_with_role_and_assocs": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_info"
        },
        {
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseProxyId": {
              "type": "integer"
            },
            "networkId": {
              "type": "integer"
            }
          },
          "required": [
            "id",
            "created",
            "userType",
            "username",
            "domain",
            "password",
            "firstName",
            "lastName",
            "officePhone",
            "mobilePhone",
            "email",
            "isNative",
            "isActive",
            "isLocked",
            "disableSecondFactor",
            "lastLogin",
            "modified",
            "passwordModified",
            "isSuper",
            "roleId",
            "roleName",
            "enterpriseId",
            "enterpriseProxyId",
            "networkId"
          ]
        }
      ]
    },
    "base_operator_user": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "operatorId": {
          "type": "integer"
        },
        "userType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "isNative": {
          "$ref": "#/definitions/tinyint"
        },
        "isActive": {
          "$ref": "#/definitions/tinyint"
        },
        "isLocked": {
          "$ref": "#/definitions/tinyint"
        },
        "disableSecondFactor": {
          "$ref": "#/definitions/tinyint"
        },
        "email": {
          "type": "string"
        },
        "lastLogin": {
          "type": "string",
          "format": "^(\\d{4})-0?(\\d+)-0?(\\d+)[T ]0?(\\d+):0?(\\d+):0?(\\d+)$"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "salt": {
          "type": "string"
        },
        "passwordModified": {
          "type": "string",
          "format": "^(\\d{4})-0?(\\d+)-0?(\\d+)[T ]0?(\\d+):0?(\\d+):0?(\\d+)$"
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED"
          ]
        },
        "sshUsername": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string",
          "enum": [
            "BASIC",
            "PRIVILEGED"
          ]
        }
      }
    },
    "operator_user_with_role_info": {
      "allOf": [
        {
          "$ref": "#/definitions/base_operator_user"
        },
        {
          "properties": {
            "roleId": {
              "type": "integer"
            },
            "roleName": {
              "type": "string"
            },
            "isSuper": {
              "$ref": "#/definitions/tinyint"
            }
          },
          "required": [
            "id",
            "created",
            "operatorId",
            "userType",
            "username",
            "domain",
            "password",
            "salt",
            "firstName",
            "lastName",
            "officePhone",
            "mobilePhone",
            "email",
            "isNative",
            "isActive",
            "isLocked",
            "disableSecondFactor",
            "lastLogin",
            "modified",
            "passwordModified",
            "bastionState",
            "isSuper",
            "roleId",
            "roleName"
          ]
        }
      ]
    },
    "gateway_delete_gateway_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "gateway_gateway_provision_result": {
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "activationKey",
        "logicalId"
      ],
      "type": "object"
    },
    "gateway_roles_object": {
      "items": {
        "properties": {
          "gatewayRole": {
            "enum": [
              "DATA_PLANE",
              "CONTROL_PLANE",
              "VPN_TUNNEL",
              "ON_PREMISE",
              "CDE",
              "CWS",
              "CCI"
            ],
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        },
        "required": [
          "gatewayRole"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "gateway_update_gateway_attributes_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "gateway_set_gateway_bastion_state_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "gateway_get_gateway_edge_assignments_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "type": "object",
          "properties": {
            "enterpriseName": {
              "type": "string"
            },
            "enterpriseProxyId": {
              "type": "integer"
            },
            "enterpriseProxyName": {
              "type": "string"
            },
            "lat": {
              "type": "number",
              "format": "double"
            },
            "lon": {
              "type": "number",
              "format": "double"
            },
            "city": {
              "type": "string"
            },
            "state": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            }
          }
        }
      ]
    },
    "id_map_one_to_many": {
      "additionalProperties": {
        "type": "integer"
      },
      "type": "object"
    },
    "id_map_one_to_one": {
      "additionalProperties": {
        "type": "integer"
      },
      "type": "string"
    },
    "js_date_formats": {
      "type": "string",
      "format": "date-time"
    },
    "interval": {
      "properties": {
        "end": {
          "$ref": "#/definitions/js_date_formats"
        },
        "start": {
          "$ref": "#/definitions/js_date_formats"
        }
      },
      "required": [
        "start"
      ],
      "type": "object"
    },
    "ip_port_mapping": {
      "properties": {
        "subnets": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tcpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "udpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "link_quality_event_get_link_quality_events_result": {
      "type": "object",
      "properties": {
        "overallLinkQuality": {
          "$ref": "#/definitions/link_quality_object"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/link_quality_object"
      }
    },
    "link_service_groups": {
      "items": {
        "enum": [
          "ALL",
          "PRIVATE_WIRED",
          "PUBLIC_WIRED",
          "PUBLIC_WIRELESS"
        ],
        "type": "string"
      },
      "type": "array"
    },
    "list_metadata": {
      "properties": {
        "limit": {
          "type": "integer",
          "minimum": 0
        },
        "more": {
          "type": "boolean"
        },
        "nextPageLink": {
          "type": "string"
        },
        "prevPageLink": {
          "type": "string"
        }
      },
      "required": [
        "limit",
        "more"
      ],
      "type": "object"
    },
    "live_mode_data": {
      "properties": {
        "linkStats": {
          "$ref": "#/definitions/live_mode_data_link_stats"
        }
      },
      "required": [
        "linkStats"
      ],
      "type": "object"
    },
    "live_mode_data_link_stats": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/live_mode_data_link_stats_data"
          },
          "type": "array"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "timestamp",
        "data"
      ],
      "type": "object"
    },
    "live_mode_data_link_stats_data": {
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/live_mode_data_link_stats_data_data"
          },
          "type": "array"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "timestamp",
        "data"
      ],
      "type": "object"
    },
    "live_mode_data_link_stats_data_data": {
      "properties": {
        "backupOnly": {
          "type": "integer"
        },
        "bestJitterMsRx": {
          "type": "integer"
        },
        "bestJitterMsTx": {
          "type": "integer"
        },
        "bestLatencyMsRx": {
          "type": "integer"
        },
        "bestLatencyMsTx": {
          "type": "integer"
        },
        "bestLossPctRx": {
          "type": "number",
          "format": "float"
        },
        "bestLossPctTx": {
          "type": "number",
          "format": "float"
        },
        "bpsOfBestPathRx": {
          "type": "integer"
        },
        "bpsOfBestPathTx": {
          "type": "integer"
        },
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "controlPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "destinations": {
          "items": {
            "$ref": "#/definitions/destinations"
          },
          "type": "array"
        },
        "icmpBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "icmpBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "icmpPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "icmpPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "interface": {
          "type": "string"
        },
        "internalId": {
          "type": "string"
        },
        "localIpAddress": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "mode": {
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ],
          "type": "string"
        },
        "mtu": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "otherBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "otherBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "otherPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "otherPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p1BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p1PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p2PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3BytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "p3PacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "publicIpAddress": {
          "type": "string"
        },
        "scoreRx": {
          "type": "number",
          "format": "float",
          "description": "*Deprecated* MOS score imputed based on Edge-reported latency, jitter, and loss."
        },
        "scoreTx": {
          "type": "number",
          "format": "float",
          "description": "*Deprecated* MOS score imputed based on Edge-reported latency, jitter, and loss."
        },
        "signalStrength": {
          "type": "number",
          "format": "float"
        },
        "state": {
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ],
          "type": "string"
        },
        "tcpBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "tcpBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "tcpPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "tcpPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "type": {
          "enum": [
            "WIRED",
            "WIRELESS"
          ],
          "type": "string"
        },
        "udpBytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "udpBytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "udpHolePunching": {
          "type": "integer"
        },
        "udpPacketsRx": {
          "type": "integer",
          "format": "int64"
        },
        "udpPacketsTx": {
          "type": "integer",
          "format": "int64"
        },
        "vlanId": {
          "type": "integer"
        },
        "vpnState": {
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DEAD",
            "STANDBY"
          ],
          "type": "string",
          "description": "*Deprecated* - Do not use"
        }
      },
      "type": "object"
    },
    "live_mode_enter_live_mode_result": {
      "properties": {
        "actionId": {
          "description": "The ID of the action queued",
          "type": "integer"
        },
        "alreadyLive": {
          "type": "boolean"
        },
        "lastContact": {
          "type": "integer"
        },
        "refreshIntervalMs": {
          "type": "integer"
        },
        "token": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "live_mode_exit_live_mode_result": {
      "properties": {
        "id": {
          "description": "The ID of the action queued",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "live_mode_read_live_data_result": {
      "properties": {
        "data": {
          "$ref": "#/definitions/live_mode_data"
        },
        "status": {
          "$ref": "#/definitions/live_mode_status"
        },
        "timestamp": {
          "type": "integer"
        }
      },
      "required": [
        "timestamp",
        "data",
        "status"
      ],
      "type": "object"
    },
    "live_mode_status": {
      "properties": {
        "isActive": {
          "type": "boolean"
        },
        "lastContact": {
          "type": "integer"
        }
      },
      "required": [
        "isActive",
        "lastContact"
      ],
      "type": "object"
    },
    "metrics_get_edge_app_link_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "linkId": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            },
            "serviceGroups": {
              "$ref": "#/definitions/link_service_groups"
            }
          },
          "required": [
            "linkId",
            "name",
            "serviceGroups"
          ]
        }
      ]
    },
    "metrics_get_edge_app_link_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            },
            "serviceGroups": {
              "$ref": "#/definitions/link_service_groups"
            }
          },
          "required": [
            "name",
            "serviceGroups"
          ]
        }
      ]
    },
    "metrics_get_edge_app_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "application": {
              "type": "integer"
            },
            "category": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            },
            "linkId": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "application"
          ]
        }
      ]
    },
    "metrics_get_edge_app_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_category_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "category": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "category"
          ]
        }
      ]
    },
    "metrics_get_edge_category_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_segment_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "segment": {
              "type": "integer"
            },
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "segment"
          ]
        }
      ]
    },
    "metrics_get_edge_segment_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_dest_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "destDomain": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "destDomain",
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_dest_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_device_metrics_device_edge_info": {
      "properties": {
        "edgeId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "hostName": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string"
        },
        "lastContact": {
          "format": "date-time",
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "metrics_get_edge_device_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "edgeInfo": {
              "$ref": "#/definitions/metrics_get_edge_device_metrics_device_edge_info"
            },
            "info": {
              "$ref": "#/definitions/client_device"
            },
            "name": {
              "type": "string"
            },
            "sourceMac": {
              "type": "string"
            }
          },
          "required": [
            "edgeInfo",
            "info",
            "name",
            "sourceMac"
          ]
        }
      ]
    },
    "metrics_get_edge_device_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_link_metrics_result_item": {
      "properties": {
        "bestJitterMsRx": {
          "type": "number",
          "format": "float",
          "description": "Best Rx (download) jitter observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestJitterMsTx": {
          "type": "number",
          "format": "float",
          "description": "Best Tx (upload) jitter observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLatencyMsRx": {
          "type": "number",
          "format": "float",
          "description": "Best Rx (download) latency observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLatencyMsTx": {
          "type": "number",
          "format": "float",
          "description": "Best Tx (upload) latency observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLossPctRx": {
          "type": "number",
          "format": "float",
          "description": "Best Rx (download) loss observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLossPctTx": {
          "type": "number",
          "format": "float",
          "description": "Best Tx (upload) loss observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bpsOfBestPathRx": {
          "type": "integer",
          "description": "Speedtest-measured Rx bandwidth in bits per second (measured on Edge service startup)"
        },
        "bpsOfBestPathTx": {
          "type": "integer",
          "description": "Speedtest-measured Tx bandwidth in bits per second (measured on Edge service startup)"
        },
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane bytes transferred in Rx direction"
        },
        "controlBytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane bytes transferred in Tx direction"
        },
        "controlPacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane packets transferred in Rx direction"
        },
        "controlPacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane packets transferred in Tx direction"
        },
        "link": {
          "$ref": "#/definitions/link"
        },
        "linkId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "p1BytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Rx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p1BytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Tx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p1PacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Rx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p1PacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Tx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p2BytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Rx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p2BytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Tx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p2PacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Rx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p2PacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Tx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p3BytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Rx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "p3BytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Tx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "p3PacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Rx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "p3PacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Tx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "scoreRx": {
          "type": "number",
          "format": "float",
          "description": "*Deprecated* MOS score based on Edge-reported latency, jitter, and loss."
        },
        "scoreTx": {
          "type": "number",
          "format": "float",
          "description": "*Deprecated* MOS score based on Edge-reported latency, jitter, and loss."
        },
        "signalStrength": {
          "type": "number",
          "format": "float",
          "description": "Signal strength reported by wireless modems (only applicable for wireless links). Subject to variable reporting standards depending on the make/model of the modem."
        },
        "state": {
          "type": "integer",
          "description": "*Deprecated* - Do not use"
        }
      },
      "required": [
        "link",
        "linkId",
        "name"
      ],
      "type": "object",
      "example": [
        {
          "linkId": 11498,
          "bytesTx": 11436959,
          "bytesRx": 5648897,
          "packetsTx": 25624,
          "packetsRx": 22995,
          "totalBytes": 17085856,
          "totalPackets": 48619,
          "p1BytesRx": 681775,
          "p1BytesTx": 186182,
          "p1PacketsRx": 793,
          "p1PacketsTx": 754,
          "p2BytesRx": 1357834,
          "p2BytesTx": 9997151,
          "p2PacketsRx": 8725,
          "p2PacketsTx": 12148,
          "p3BytesRx": 2818915,
          "p3BytesTx": 193102,
          "p3PacketsRx": 2219,
          "p3PacketsTx": 1350,
          "controlBytesRx": 790373,
          "controlBytesTx": 1060524,
          "controlPacketsRx": 11258,
          "controlPacketsTx": 11372,
          "bpsOfBestPathRx": 357688000,
          "bpsOfBestPathTx": 22490000,
          "bestJitterMsRx": 0,
          "bestJitterMsTx": 1,
          "bestLatencyMsRx": 13.5,
          "bestLatencyMsTx": 4.5,
          "bestLossPctRx": 0,
          "bestLossPctTx": 0,
          "scoreTx": 4.400000095367432,
          "scoreRx": 4.400000095367432,
          "signalStrength": 0,
          "state": 0,
          "link": {
            "id": 11498,
            "created": "2019-01-01T00:00:00.000Z",
            "edgeId": 146,
            "logicalId": "ac:3b:77:31:cc:32:0000",
            "internalId": "00000004-76dd-4e97-9cba-73b2cf4c4e9b",
            "interface": "GE4",
            "macAddress": null,
            "ipAddress": "66.170.99.1",
            "netmask": null,
            "networkSide": "WAN",
            "networkType": "ETHERNET",
            "displayName": "VMware",
            "isp": "VMware",
            "org": "VMware",
            "lat": 37.3773,
            "lon": -122.019402,
            "lastActive": "2019-01-01T00:00:00.000Z",
            "state": "STABLE",
            "backupState": "UNCONFIGURED",
            "vpnState": "STABLE",
            "lastEvent": "2019-01-01T00:00:00.000Z",
            "lastEventState": "STABLE",
            "alertsEnabled": 1,
            "operatorAlertsEnabled": 1,
            "serviceState": "IN_SERVICE",
            "modified": "2019-01-01T00:00:00.000Z"
          },
          "name": "GE4"
        }
      ]
    },
    "metrics_get_edge_link_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "edgeId": {
              "type": "integer"
            },
            "link": {
              "$ref": "#/definitions/link"
            },
            "linkId": {
              "type": "integer"
            }
          },
          "required": [
            "edgeId",
            "linkId",
            "link"
          ]
        }
      ],
      "example": {
        "series": [
          {
            "metric": "bytesTx",
            "startTime": 1579882723541,
            "tickInterval": 300000,
            "data": [
              6045775,
              5452740
            ],
            "total": 11498515,
            "min": 5452740,
            "max": 6045775
          }
        ],
        "linkId": 11498,
        "edgeId": 146,
        "link": {
          "id": 11498,
          "created": "2019-01-01T00:00:00.000Z",
          "edgeId": 146,
          "logicalId": "ac:3b:77:31:cc:32:0000",
          "internalId": "00000004-76dd-4e97-9cba-73b2cf4c4e9b",
          "interface": "GE4",
          "macAddress": null,
          "ipAddress": "66.170.99.1",
          "netmask": null,
          "networkSide": "WAN",
          "networkType": "ETHERNET",
          "displayName": "VMware",
          "isp": "VMware",
          "org": "VMware",
          "lat": 37.3773,
          "lon": -122.019402,
          "lastActive": "2019-01-01T00:00:00.000Z",
          "state": "STABLE",
          "backupState": "UNCONFIGURED",
          "vpnState": "STABLE",
          "lastEvent": "2019-01-01T00:00:00.000Z",
          "lastEventState": "STABLE",
          "alertsEnabled": 1,
          "operatorAlertsEnabled": 1,
          "serviceState": "IN_SERVICE",
          "modified": "2019-01-01T00:00:00.000Z"
        }
      }
    },
    "metrics_get_edge_os_metrics_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/flow_metric_summary"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            },
            "os": {
              "type": "integer"
            }
          },
          "required": [
            "os",
            "name"
          ]
        }
      ]
    },
    "metrics_get_edge_os_series_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/time_series_metadata"
        },
        {
          "properties": {
            "name": {
              "type": "integer"
            }
          },
          "required": [
            "name"
          ]
        }
      ]
    },
    "monitoring_get_aggregate_edge_link_metrics_result_item": {
      "type": "object",
      "properties": {
        "bestJitterMsRx": {
          "type": "number",
          "format": "float",
          "description": "Best Rx (download) jitter observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestJitterMsTx": {
          "type": "number",
          "format": "float",
          "description": "Best Tx (upload) jitter observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLatencyMsRx": {
          "type": "number",
          "format": "float",
          "description": "Best Rx (download) latency observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLatencyMsTx": {
          "type": "number",
          "format": "float",
          "description": "Best Tx (upload) latency observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLossPctRx": {
          "type": "number",
          "format": "float",
          "description": "Best Rx (download) loss observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bestLossPctTx": {
          "type": "number",
          "format": "float",
          "description": "Best Tx (upload) loss observed on a link, among paths to all SD-WAN peers (gateways & hubs)"
        },
        "bpsOfBestPathRx": {
          "type": "integer",
          "description": "Speedtest-measured Rx bandwidth in bits per second (measured on Edge service startup)"
        },
        "bpsOfBestPathTx": {
          "type": "integer",
          "description": "Speedtest-measured Tx bandwidth in bits per second (measured on Edge service startup)"
        },
        "bytesRx": {
          "type": "integer",
          "format": "int64"
        },
        "bytesTx": {
          "type": "integer",
          "format": "int64"
        },
        "controlBytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane bytes transferred in Rx direction"
        },
        "controlBytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane bytes transferred in Tx direction"
        },
        "controlPacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane packets transferred in Rx direction"
        },
        "controlPacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane packets transferred in Tx direction"
        },
        "link": {
          "$ref": "#/definitions/monitored_link"
        },
        "linkId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "p1BytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Rx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p1BytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Tx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p1PacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Rx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p1PacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Tx direction via priority queue reserved for high-priority traffic (e.g. voice)"
        },
        "p2BytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Rx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p2BytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Tx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p2PacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Rx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p2PacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Tx direction via priority queue reserved for medium-priority traffic (e.g. video)"
        },
        "p3BytesRx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Rx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "p3BytesTx": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred in Tx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "p3PacketsRx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Rx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "p3PacketsTx": {
          "type": "integer",
          "format": "int64",
          "description": "Packets transferred in Tx direction via priority queue reserved for low-priority traffic (e.g. transactional)"
        },
        "scoreRx": {
          "type": "number",
          "format": "float",
          "description": "*Deprecated* MOS score based on Edge-reported latency, jitter, and loss."
        },
        "scoreTx": {
          "type": "number",
          "format": "float",
          "description": "*Deprecated* MOS score based on Edge-reported latency, jitter, and loss."
        },
        "signalStrength": {
          "type": "number",
          "format": "float",
          "description": "Signal strength reported by wireless modems (only applicable for wireless links). Subject to variable reporting standards depending on the make/model of the modem."
        },
        "state": {
          "type": "integer",
          "description": "*Deprecated* - Do not use"
        }
      },
      "required": [
        "link",
        "linkId",
        "name"
      ],
      "example": {
        "linkId": 11498,
        "bytesTx": 173934999,
        "bytesRx": 236354143,
        "packetsTx": 912902,
        "packetsRx": 905328,
        "totalBytes": 410289142,
        "totalPackets": 1818230,
        "p1BytesRx": 16703121,
        "p1BytesTx": 10514739,
        "p1PacketsRx": 29456,
        "p1PacketsTx": 34343,
        "p2BytesRx": 138233115,
        "p2BytesTx": 99403633,
        "p2PacketsRx": 307414,
        "p2PacketsTx": 302256,
        "p3BytesRx": 44737943,
        "p3BytesTx": 13679788,
        "p3PacketsRx": 43957,
        "p3PacketsTx": 39294,
        "controlBytesRx": 36679964,
        "controlBytesTx": 50336839,
        "controlPacketsRx": 524501,
        "controlPacketsTx": 537009,
        "bpsOfBestPathRx": 357688000,
        "bpsOfBestPathTx": 22490000,
        "bestJitterMsRx": 0,
        "bestJitterMsTx": 1.2211,
        "bestLatencyMsRx": 11.5789,
        "bestLatencyMsTx": 5.9474,
        "bestLossPctRx": 0,
        "bestLossPctTx": 0,
        "scoreTx": 4.400000095367432,
        "scoreRx": 4.398631642994128,
        "signalStrength": 0,
        "state": 0,
        "name": "GE4",
        "link": {
          "enterpriseName": "VMware SD-WAN by VeloCloud",
          "enterpriseId": 4,
          "enterpriseProxyId": 177,
          "enterpriseProxyName": "VMware",
          "edgeName": "Palo Alto Edge",
          "edgeState": "CONNECTED",
          "edgeSystemUpSince": "2019-01-01T00:00:00.000Z",
          "edgeServiceUpSince": "2019-01-01T00:00:00.000Z",
          "edgeLastContact": "2019-01-01T00:00:00.000Z",
          "edgeId": 146,
          "edgeSerialNumber": "VC00000000122",
          "edgeHASerialNumber": null,
          "edgeModelNumber": "edge500",
          "edgeLatitude": 37.3773,
          "edgeLongitude": -122.019402,
          "displayName": "VMware",
          "isp": "VMware",
          "interface": "GE4",
          "internalId": "00000004-76dd-4e97-9cba-73b2cf4c4e9b",
          "linkState": "STABLE",
          "linkLastActive": "2019-01-01T00:00:00.000Z",
          "linkVpnState": "STABLE",
          "linkId": 11498,
          "linkIpAddress": "66.170.99.1"
        }
      }
    },
    "monitoring_get_aggregate_enterprise_events_result": {
      "type": "object",
      "properties": {
        "data": {
          "items": {
            "$ref": "#/definitions/aggregate_enterprise_event"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        }
      },
      "required": [
        "metaData",
        "data"
      ]
    },
    "monitoring_get_aggregates_result": {
      "type": "object",
      "properties": {
        "edgeCount": {
          "type": "integer"
        },
        "edges": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "enterprises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise_with_proxy_attributes"
          }
        }
      }
    },
    "monitoring_get_enterprise_bgp_peer_status_result_item": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/bgp_peer_status_record"
        },
        "dataKey": {
          "type": "string"
        },
        "gatewayId": {
          "type": "integer"
        },
        "gatewayLogicalId": {
          "type": "string"
        },
        "gatewayName": {
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "state": {
          "type": "string",
          "enum": [
            "IDLE",
            "CONNECT",
            "ACTIVE",
            "OPENSENT",
            "OPENCONFIRM",
            "ESTABLISHED",
            "CLEARING",
            "IDLEADMIN",
            "IDLEPRFXCT",
            "REMOVED"
          ]
        },
        "tag": {
          "type": "string",
          "enum": [
            "BGP_NEIGHBOR_SUMMARY"
          ]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "monitoring_get_enterprise_edge_bgp_peer_status_result_item": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/bgp_peer_status_record"
        },
        "dataKey": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeLogicalId": {
          "type": "string"
        },
        "edgeName": {
          "type": "string"
        },
        "edgeState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ]
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "tag": {
          "type": "string",
          "enum": [
            "BGP_NEIGHBOR_SUMMARY"
          ]
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "bfd_peer_timer": {
      "type": "object",
      "properties": {
        "receive": {
          "type": "string"
        },
        "transmit": {
          "type": "string"
        }
      }
    },
    "bfd_peer_status_record": {
      "type": "object",
      "properties": {
        "remoteTimers": {
          "$ref": "#/definitions/bfd_peer_timer"
        },
        "localTimers": {
          "$ref": "#/definitions/bfd_peer_timer"
        },
        "state": {
          "type": "string",
          "enum": [
            "INIT",
            "UP",
            "DOWN",
            "SHUTDOWN",
            "UNKNOWN"
          ]
        },
        "sessionTime": {
          "type": "string"
        },
        "segmentId": {
          "type": "string"
        },
        "peerAddress": {
          "type": "string"
        },
        "localAddress": {
          "type": "string"
        },
        "enterpriseLogicalId": {
          "type": "string"
        }
      }
    },
    "monitoring_get_enterprise_bfd_peer_status_result_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "gatewayName": {
          "type": "string"
        },
        "gatewayId": {
          "type": "integer"
        },
        "gatewayLogicalId": {
          "type": "string"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "tag": {
          "type": "string"
        },
        "dataKey": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/bfd_peer_status_record"
        },
        "state": {
          "type": "string",
          "enum": [
            "INIT",
            "UP",
            "DOWN",
            "SHUTDOWN",
            "UNKNOWN"
          ]
        }
      }
    },
    "monitoring_get_enterprise_edge_bfd_peer_status_result_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeName": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeLogicalId": {
          "type": "string"
        },
        "edgeState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ]
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "tag": {
          "type": "string"
        },
        "dataKey": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/bfd_peer_status_record"
        },
        "state": {
          "type": "string",
          "enum": [
            "INIT",
            "UP",
            "DOWN",
            "SHUTDOWN",
            "UNKNOWN"
          ]
        }
      }
    },
    "edge_record": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "tag": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "PENDING",
            "STANDBY",
            "UP",
            "DOWN",
            "UNKNOWN"
          ]
        },
        "dataKey": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "edge_nvs_tunnel_status_edge_record_data": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the provider service entity"
        },
        "nvs": {
          "type": "string",
          "description": "The `logicalId` of the provider service entity"
        },
        "link": {
          "type": "string",
          "description": "The `logicalId` of the WAN link to which tunnel belongs"
        },
        "segmentLogicalId": {
          "type": "string",
          "description": "The `logicalId` of the network segment to which the tunnel belongs"
        },
        "segmentId": {
          "type": "integer"
        },
        "local_interface_ip": {
          "type": "string"
        },
        "local_public_ip": {
          "type": "string"
        },
        "nvs_ip": {
          "type": "string"
        },
        "routing": {
          "type": "string"
        },
        "pathId": {
          "type": "string",
          "description": "An Edge-generated unique identifier for the tunnel"
        },
        "ikeIdType": {
          "type": "string"
        },
        "ikeIdValue": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "PENDING",
            "STANDBY",
            "UP",
            "DOWN",
            "UNKNOWN"
          ]
        },
        "provider": {
          "type": "object"
        },
        "site": {
          "type": "object"
        }
      }
    },
    "monitoring_get_enterprise_edge_nvs_tunnel_status_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_record"
        },
        {
          "type": "object",
          "properties": {
            "edgeName": {
              "type": "string"
            },
            "edgeLogicalId": {
              "type": "string"
            },
            "tag": {
              "type": "string",
              "pattern": "EDGE_NVS_TUNNEL"
            },
            "state": {
              "type": "string",
              "enum": [
                "PENDING",
                "STANDBY",
                "UP",
                "DOWN",
                "UNKNOWN"
              ]
            },
            "dataKey": {
              "type": "string",
              "description": "Edge-generated `pathId` that uniquely identifies a tunnel"
            },
            "data": {
              "$ref": "#/definitions/edge_nvs_tunnel_status_edge_record_data"
            }
          }
        }
      ]
    },
    "monitored_link": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "edgeHASerialNumber": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "edgeLastContact": {
          "format": "date-time",
          "type": "string"
        },
        "edgeLatitude": {
          "type": "number",
          "format": "double"
        },
        "edgeLongitude": {
          "type": "number",
          "format": "double"
        },
        "edgeModelNumber": {
          "type": "string"
        },
        "edgeName": {
          "type": "string"
        },
        "edgeSerialNumber": {
          "type": "string"
        },
        "edgeServiceUpSince": {
          "format": "date-time",
          "type": "string"
        },
        "edgeState": {
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "OFFLINE",
            "DISABLED",
            "EXPIRED",
            "CONNECTED"
          ],
          "type": "string"
        },
        "edgeSystemUpSince": {
          "format": "date-time",
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enterpriseName": {
          "type": "string"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "enterpriseProxyName": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "internalId": {
          "type": "string"
        },
        "isp": {
          "type": "string"
        },
        "linkId": {
          "type": "integer"
        },
        "linkIpAddress": {
          "type": "string"
        },
        "linkIpV6Address": {
          "type": "string"
        },
        "linkLastActive": {
          "format": "date-time",
          "type": "string"
        },
        "linkState": {
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DISCONNECTED",
            "QUIET",
            "INITIAL",
            "STANDBY"
          ],
          "type": "string"
        },
        "linkMode": {
          "enum": [
            "ACTIVE",
            "BACKUP",
            "HOTSTANDBY"
          ],
          "type": "string"
        },
        "linkBackupState": {
          "enum": [
            "UNCONFIGURED",
            "STANDBY",
            "ACTIVE"
          ],
          "type": "string"
        },
        "linkVpnState": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "STABLE",
            "UNSTABLE",
            "DEAD",
            "STANDBY"
          ],
          "description": "*Deprecated* - Do not use"
        }
      },
      "required": [
        "displayName",
        "edgeHASerialNumber",
        "edgeId",
        "edgeLastContact",
        "edgeLatitude",
        "edgeLongitude",
        "edgeModelNumber",
        "edgeName",
        "edgeSerialNumber",
        "edgeServiceUpSince",
        "edgeState",
        "edgeSystemUpSince",
        "enterpriseId",
        "enterpriseName",
        "interface",
        "internalId",
        "isp",
        "linkId",
        "linkIpAddress",
        "linkIpV6Address",
        "linkLastActive",
        "linkState",
        "linkMode",
        "linkBackupState",
        "linkVpnState"
      ]
    },
    "monitoring_get_enterprise_edge_link_status_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/monitored_link"
        }
      ]
    },
    "monitoring_get_enterprise_edge_vnf_status_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "vendor": {
                  "type": "string"
                },
                "vendorSpecificData": {
                  "type": "object"
                }
              }
            },
            "edgeCount": {
              "type": "integer"
            },
            "edgeUsage": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "configurationId": {
                    "type": "integer"
                  },
                  "edgeSpecificId": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "profileId": {
                    "type": "integer"
                  },
                  "vnfStatus": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "vmStatus": {
                        "type": "string"
                      },
                      "vnfInsertionEnabled": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "network_delete_network_gateway_pool_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "network_get_network_configurations_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "id",
            "created",
            "description",
            "effective",
            "modified",
            "name",
            "version"
          ]
        }
      ]
    },
    "network_get_network_enterprises_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "properties": {
            "enterpriseProxyId": {
              "type": "integer"
            },
            "enterpriseProxyName": {
              "type": "string"
            },
            "edgeCount": {
              "type": "integer"
            },
            "edges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_object"
              }
            },
            "edgeConfigUpdate": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "enabledOnUpgrade": {
                  "type": "boolean"
                }
              }
            },
            "serviceLicenses": {
              "$ref": "#/definitions/get_enterprise_service_license_result"
            }
          }
        }
      ]
    },
    "network_get_network_gateway_pools_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_pool"
        },
        {
          "properties": {
            "gateways": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/gateway_pool_gateway"
                  },
                  {
                    "properties": {
                      "roles": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/gateway_role"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "enterprises": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enterprise_with_proxy_attributes"
              }
            }
          },
          "required": [
            "id",
            "networkId",
            "enterpriseProxyId",
            "created",
            "name",
            "description",
            "isDefault",
            "logicalId",
            "handOffType",
            "modified"
          ]
        }
      ]
    },
    "network_get_network_gateway_pools_list_result": {
      "title": "network_get_network_gateway_pools_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "networkId": {
                "type": "integer"
              },
              "enterpriseProxyId": {
                "type": "integer"
              },
              "created": {
                "type": "string",
                "format": "date-time"
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "logicalId": {
                "type": "string"
              },
              "isDefault": {
                "type": "boolean"
              },
              "handOffType": {
                "type": "string",
                "enum": [
                  "NONE",
                  "ALLOW",
                  "ONLY"
                ]
              },
              "modified": {
                "type": "string",
                "format": "date-time"
              },
              "gateways": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/gateway_pool_gateway"
                }
              },
              "enterprises": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/enterprise_with_proxy_attributes"
                }
              },
              "gatewayCount": {
                "type": "integer"
              },
              "enterpriseCount": {
                "type": "integer"
              }
            }
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "network_get_network_gateway_pools_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "gateway_handoff_edge": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_object"
        },
        {
          "type": "object",
          "properties": {
            "edgeId": {
              "type": "integer"
            },
            "isPrimary": {
              "type": "integer"
            },
            "pinned": {
              "type": "integer"
            },
            "enterpriseLogicalId": {
              "type": "string"
            },
            "enterpriseName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "gateway_enterprise_assoc": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise"
        },
        {
          "type": "object",
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseObjectId": {
              "type": "integer"
            },
            "edgeId": {
              "type": "integer"
            },
            "gatewayType": {
              "type": "string",
              "enum": [
                "OTHER",
                "SUPER",
                "DATACENTER",
                "HANDOFF",
                "SUPER_ALT"
              ]
            },
            "pinned": {
              "type": "integer"
            },
            "enterpriseObjectName": {
              "type": "string"
            },
            "enterpriseObjectType": {
              "type": "string"
            },
            "edgeName": {
              "type": "string"
            },
            "edgeLogicalId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "edge_certificate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "csrId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "certificate": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "subjectKeyId": {
          "type": "string"
        },
        "fingerPrint": {
          "type": "string"
        },
        "fingerPrint256": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gateway_certificate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "csrId": {
          "type": "integer"
        },
        "gatewayId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "certificate": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "subjectKeyId": {
          "type": "string"
        },
        "fingerPrint": {
          "type": "string"
        },
        "fingerPrint256": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "gateway_gateway_pool": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_pool"
        },
        {
          "type": "object",
          "properties": {
            "gatewayPoolAssocId": {
              "type": "integer"
            },
            "gatewayId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "gateway_role": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "gatewayId": {
          "type": "integer"
        },
        "gatewayRole": {
          "type": "string",
          "enum": [
            "DATA_PLANE",
            "CONTROL_PLANE",
            "VPN_TUNNEL",
            "ON_PREMISE",
            "CDE",
            "CWS",
            "CCI"
          ],
          "x-alternate-name": "gatewayRoleProperty"
        },
        "required": {
          "type": "integer"
        }
      }
    },
    "gateway_handoff_segment_metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "segmentId": {
          "type": "integer"
        },
        "segmentLogicalId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "REGULAR",
            "CDE",
            "PRIVATE"
          ]
        }
      }
    },
    "gateway_handoff_value_bgp_priority_setup_auto_as": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "gateway_handoff_value_bgp_priority_setup_auto_med": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "gateway_handoff_value_vlan": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "cTag": {
          "type": "integer"
        },
        "sTag": {
          "type": "integer"
        },
        "transportLanVLAN": {
          "type": "string"
        }
      }
    },
    "gateway_handoff_value_segments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/gateway_handoff_value"
      }
    },
    "gateway_handoff_value": {
      "type": "object",
      "properties": {
        "segments": {
          "$ref": "#/definitions/gateway_handoff_value_segments"
        },
        "segment": {
          "$ref": "#/definitions/gateway_handoff_segment_metadata"
        },
        "bgpPrioritySetup": {
          "type": "object",
          "properties": {
            "autoAs": {
              "$ref": "#/definitions/gateway_handoff_value_bgp_priority_setup_auto_as"
            },
            "autoMed": {
              "$ref": "#/definitions/gateway_handoff_value_bgp_priority_setup_auto_med"
            },
            "communityMapping": {
              "$ref": "#/definitions/gateway_handoff_community_mapping"
            },
            "v6CommunityMapping": {
              "$ref": "#/definitions/gateway_handoff_community_mapping"
            }
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "NONE",
            "802.1Q",
            "802.1ad",
            "QinQ (0x9100)",
            "QinQ (0x8100)"
          ]
        },
        "override": {
          "type": "boolean"
        },
        "cTag": {
          "type": "integer"
        },
        "sTag": {
          "type": "integer"
        },
        "localAddress": {
          "$ref": "#/definitions/gateway_handoff_value_local_address"
        },
        "v6LocalAddress": {
          "$ref": "#/definitions/gateway_handoff_value_local_address"
        },
        "staticRoutes": {
          "type": "object",
          "properties": {
            "override": {
              "type": "boolean"
            },
            "subnets": {
              "$ref": "#/definitions/gateway_handoff_value_subnets"
            },
            "v6Subnets": {
              "$ref": "#/definitions/gateway_handoff_value_subnets"
            }
          }
        },
        "bfd": {
          "$ref": "#/definitions/gateway_handoff_value_bfd"
        },
        "bgp": {
          "$ref": "#/definitions/gateway_handoff_value_bgp"
        },
        "bgpInboundMap": {
          "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
        },
        "v6BgpInboundMap": {
          "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
        },
        "bgpOutboundMap": {
          "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
        },
        "v6BgpOutboundMap": {
          "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
        },
        "VLAN": {
          "$ref": "#/definitions/gateway_handoff_value_vlan"
        },
        "overrides": {
          "type": "object",
          "properties": {
            "VLAN": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "cTag": {
                    "type": "integer"
                  },
                  "sTag": {
                    "type": "integer"
                  },
                  "transportLanVLAN": {
                    "type": "string"
                  }
                }
              }
            },
            "bgp": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/gateway_handoff_value_bgp"
              }
            },
            "bgpInboundMap": {
              "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
            },
            "bgpOutboundMap": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/gateway_handoff_bgp_rules_map"
              }
            },
            "localAddress": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/gateway_handoff_value_local_address"
              }
            },
            "v6LocalAddress": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/gateway_handoff_value_local_address"
              }
            },
            "subnets": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "gateway_handoff": {
      "type": "object",
      "properties": {
        "enterpriseId": {
          "type": "integer"
        },
        "value": {
          "$ref": "#/definitions/gateway_handoff_value"
        }
      }
    },
    "gateway_handoff_value_bgp": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff_value_bgp_v4"
        },
        {
          "type": "object",
          "properties": {
            "v6Detail": {
              "$ref": "#/definitions/gateway_handoff_value_bgp_common"
            }
          }
        }
      ]
    },
    "gateway_handoff_value_bgp_v4": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff_value_bgp_common"
        },
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ASN": {
              "type": "string"
            },
            "localIP": {
              "type": "string"
            },
            "nextHopIP": {
              "type": "string"
            }
          }
        }
      ]
    },
    "gateway_handoff_value_bgp_common": {
      "type": "object",
      "properties": {
        "neighborIp": {
          "type": "string"
        },
        "neighborASN": {
          "type": "string"
        },
        "encryption": {
          "type": "boolean"
        },
        "enableBfd": {
          "type": "boolean"
        },
        "disableASPathCarryOver": {
          "type": "boolean"
        },
        "enableMd5": {
          "type": "boolean"
        },
        "md5Password": {
          "type": "string"
        }
      }
    },
    "gateway_handoff_bgp_rules_map": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_handoff_bgp_rule"
          }
        },
        "override": {
          "type": "boolean"
        }
      }
    },
    "gateway_handoff_bgp_rule": {
      "allOf": [
        {
          "$ref": "#/definitions/bgp_filter_rule"
        }
      ]
    },
    "bgp_filter_rule": {
      "type": "object",
      "properties": {
        "action": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "match": {
          "type": "object",
          "properties": {
            "exactMatch": {
              "type": "boolean"
            },
            "type": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "gateway_handoff_value_bfd": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff_value_bfd_v4"
        },
        {
          "type": "object",
          "properties": {
            "v6Detail": {
              "$ref": "#/definitions/gateway_handoff_value_bfd_common"
            }
          }
        }
      ]
    },
    "gateway_handoff_value_bfd_v4": {
      "allOf": [
        {
          "$ref": "#/definitions/gateway_handoff_value_bfd_common"
        },
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "gateway_handoff_value_bfd_common": {
      "type": "object",
      "properties": {
        "peerAddress": {
          "type": "string"
        },
        "localAddress": {
          "type": "string"
        },
        "detectMultiplier": {
          "type": "integer"
        },
        "receiveInterval": {
          "type": "integer"
        },
        "transmitInterval": {
          "type": "integer"
        }
      }
    },
    "gateway_handoff_value_local_address": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "number"
        },
        "useForPrivate": {
          "type": "boolean"
        },
        "advertiseViaBgp": {
          "type": "boolean"
        },
        "override": {
          "type": "boolean"
        }
      }
    },
    "gateway_handoff_value_subnets": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cidrIp": {
            "type": "string"
          },
          "cidrPrefix": {
            "type": "number"
          },
          "encrypt": {
            "type": "boolean"
          },
          "handOffType": {
            "type": "string",
            "enum": [
              "NAT",
              "VLAN"
            ]
          },
          "routeCost": {
            "type": "integer",
            "minimum": 0,
            "maximum": 255
          }
        }
      }
    },
    "gateway_handoff_community_mapping": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "priorityMode": {
          "type": "string",
          "enum": [
            "ALL_SEGMENTS",
            "PER_SEGMENT"
          ]
        },
        "priorities": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "community": {
                "type": "string"
              },
              "community2": {
                "type": "string"
              },
              "priority": {
                "type": "integer"
              }
            }
          }
        },
        "communityAdditive": {
          "type": "boolean"
        }
      }
    },
    "network_get_network_gateways_result_item": {
      "type": "object",
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "activationState": {
          "type": "string",
          "enum": [
            "UNASSIGNED",
            "PENDING",
            "ACTIVATED",
            "REACTIVATION_PENDING"
          ]
        },
        "activationTime": {
          "type": "string",
          "format": "date-time"
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED"
          ]
        },
        "buildNumber": {
          "type": "string"
        },
        "certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_certificate"
          }
        },
        "connectedEdges": {
          "type": "integer"
        },
        "connectedEdgeList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "vceid": {
                "type": "string"
              }
            }
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "dataCenters": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "description": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "dnsName": {
          "type": "string"
        },
        "endpointPkiMode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ]
        },
        "enterpriseAssociations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_enterprise_assoc"
          }
        },
        "enterpriseAssociationCount": {
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        },
        "enterprises": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/enterprise"
          }
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "gatewayState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "QUIESCED",
            "DISABLED",
            "OUT_OF_SERVICE",
            "CONNECTED",
            "OFFLINE"
          ]
        },
        "handOffDetail": {
          "$ref": "#/definitions/gateway_handoff_detail"
        },
        "handOffEdges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_handoff_edge"
          }
        },
        "id": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipsecGatewayDetail": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "strictHostCheck": {
              "type": "boolean"
            },
            "strictHostCheckDN": {
              "type": "string"
            }
          }
        },
        "isLoadBalanced": {
          "type": "boolean"
        },
        "lastContact": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "networkId": {
          "type": "integer"
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_gateway_pool"
          }
        },
        "privateIpAddress": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_role"
          }
        },
        "serviceState": {
          "type": "string",
          "enum": [
            "IN_SERVICE",
            "OUT_OF_SERVICE",
            "PENDING_SERVICE",
            "QUIESCED"
          ]
        },
        "serviceUpSince": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "siteId": {
          "type": "integer"
        },
        "softwareVersion": {
          "type": "string"
        },
        "systemUpSince": {
          "type": "string"
        },
        "utilization": {
          "type": "number"
        },
        "utilizationDetail": {
          "type": "object",
          "properties": {
            "load": {
              "type": "number"
            },
            "overall": {
              "type": "number"
            },
            "cpu": {
              "type": "number"
            },
            "memory": {
              "type": "number"
            }
          }
        },
        "syslog": {
          "$ref": "#/definitions/gateway_syslog_settings"
        }
      }
    },
    "enterprise_proxy_get_enterprise_proxy_gateways_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/network_get_network_gateways_result_item"
        }
      ]
    },
    "network_get_eligible_replacement_gateways_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/network_get_network_gateways_result_item"
        }
      ]
    },
    "enterprise_get_enterprise_pool_gateways_result_item": {
      "type": "object",
      "properties": {
        "activationKey": {
          "type": "string"
        },
        "activationState": {
          "type": "string",
          "enum": [
            "UNASSIGNED",
            "PENDING",
            "ACTIVATED",
            "REACTIVATION_PENDING"
          ]
        },
        "alertsEnabled": {
          "$ref": "#/definitions/tinyint"
        },
        "activationTime": {
          "type": "string",
          "format": "date-time"
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED"
          ]
        },
        "buildNumber": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "dnsName": {
          "type": "string"
        },
        "endpointPkiMode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ]
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "gatewayPoolAssocId": {
          "type": "integer"
        },
        "gatewayState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "QUIESCED",
            "DISABLED",
            "OUT_OF_SERVICE",
            "CONNECTED",
            "OFFLINE"
          ]
        },
        "handOffDetail": {
          "$ref": "#/definitions/gateway_handoff_detail"
        },
        "handOffEdges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_handoff_edge"
          }
        },
        "id": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string"
        },
        "ipsecGatewayDetail": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "strictHostCheck": {
              "type": "boolean"
            },
            "strictHostCheckDN": {
              "type": "string"
            }
          }
        },
        "isLoadBalanced": {
          "$ref": "#/definitions/tinyint"
        },
        "lastContact": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "networkId": {
          "type": "integer"
        },
        "poolName": {
          "type": "string"
        },
        "privateIpAddress": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_role"
          }
        },
        "serviceState": {
          "type": "string",
          "enum": [
            "IN_SERVICE",
            "OUT_OF_SERVICE",
            "PENDING_SERVICE",
            "QUIESCED"
          ]
        },
        "serviceUpSince": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "siteId": {
          "type": "integer"
        },
        "softwareVersion": {
          "type": "string"
        },
        "systemUpSince": {
          "type": "string"
        },
        "utilization": {
          "type": "number"
        },
        "utilizationDetail": {
          "type": "object",
          "properties": {
            "load": {
              "type": "number"
            },
            "overall": {
              "type": "number"
            },
            "cpu": {
              "type": "number"
            },
            "memory": {
              "type": "number"
            }
          }
        }
      }
    },
    "network_get_network_operator_users_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/operator_user_with_role_info"
        }
      ]
    },
    "network_insert_network_gateway_pool_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "network_update_network_gateway_pool_attributes_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "new_user_abstract": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password2": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        },
        "isActive": {
          "type": "boolean"
        },
        "isNative": {
          "type": "boolean"
        },
        "disableSecondFactor": {
          "type": "boolean"
        },
        "officePhone": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "sshUsername": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string",
          "enum": [
            "BASIC",
            "PRIVILEGED"
          ]
        }
      },
      "required": [
        "username",
        "password",
        "roleId"
      ]
    },
    "new_enterprise_user": {
      "allOf": [
        {
          "$ref": "#/definitions/new_user_abstract"
        },
        {
          "type": "object",
          "properties": {
            "userType": {
              "type": "string",
              "enum": [
                "ENTERPRISE"
              ]
            },
            "enterpriseId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "enterprise_proxy_insert_or_update_enterprise_proxy_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_property": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isPassword": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "JSON",
            "DATE",
            "DATETIME"
          ]
        },
        "description": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "enterprise_proxy_get_enterprise_proxy_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_proxy_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "enterpriseProxyId",
            "value",
            "isPassword",
            "dataType",
            "description",
            "modified"
          ]
        }
      ]
    },
    "new_enterprise_proxy_user": {
      "allOf": [
        {
          "$ref": "#/definitions/new_user_abstract"
        },
        {
          "type": "object",
          "properties": {
            "userType": {
              "type": "string",
              "enum": [
                "MSP"
              ]
            },
            "enterpriseProxyId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "operator_user_insert_operator_user": {
      "allOf": [
        {
          "$ref": "#/definitions/new_user_abstract"
        },
        {
          "type": "object",
          "properties": {
            "networkId": {
              "type": "integer"
            }
          }
        }
      ]
    },
    "role_create_role_customization_result": {
      "allOf": [
        {
          "$ref": "#/definitions/empty_object"
        }
      ]
    },
    "role_delete_role_customization_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "role_get_user_type_roles_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/role"
        },
        {
          "required": [
            "id",
            "created",
            "operatorId",
            "networkId",
            "enterpriseId",
            "enterpriseProxyId",
            "name",
            "userType",
            "fromUserType",
            "isSuper",
            "description",
            "precedence",
            "modified"
          ]
        }
      ]
    },
    "get_composite_roles_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/role"
        },
        {
          "required": [
            "id",
            "created",
            "operatorId",
            "networkId",
            "enterpriseId",
            "enterpriseProxyId",
            "name",
            "userType",
            "fromUserType",
            "roleType",
            "isCustom",
            "isSuper",
            "description",
            "precedence",
            "modified"
          ]
        }
      ]
    },
    "get_functional_roles_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/role"
        },
        {
          "required": [
            "id",
            "created",
            "operatorId",
            "networkId",
            "enterpriseId",
            "enterpriseProxyId",
            "name",
            "userType",
            "fromUserType",
            "roleType",
            "isCustom",
            "isSuper",
            "description",
            "precedence",
            "modified"
          ]
        }
      ]
    },
    "set_delegated_result": {
      "type": "object",
      "properties": {
        "isDelegated": {
          "type": "boolean"
        }
      },
      "required": [
        "isDelegated"
      ]
    },
    "role_set_enterprise_delegated_to_enterprise_proxy_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "role_set_enterprise_delegated_to_operator_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "role_set_enterprise_proxy_delegated_to_operator_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "role_set_enterprise_user_management_delegated_to_operator_result": {
      "allOf": [
        {
          "$ref": "#/definitions/set_delegated_result"
        }
      ]
    },
    "system_property": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "isReadOnly": {
          "type": "boolean"
        },
        "isPassword": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "enum": [
            "STRING",
            "NUMBER",
            "BOOLEAN",
            "JSON",
            "DATE",
            "DATETIME"
          ]
        },
        "description": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "system_property_get_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/system_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "value",
            "defaultValue",
            "isReadOnly",
            "isPassword",
            "dataType",
            "description"
          ]
        }
      ]
    },
    "system_property_get_system_properties_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/system_property"
        },
        {
          "required": [
            "id",
            "created",
            "name",
            "value",
            "defaultValue",
            "isReadOnly",
            "isPassword",
            "dataType",
            "description"
          ]
        }
      ]
    },
    "system_property_insert_or_update_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "system_property_insert_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "system_property_update_system_property_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_get_enterprise_users_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_info"
        }
      ]
    },
    "enterprise_insert_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_user_delete_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "enterprise_user_get_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_and_assocs"
        }
      ]
    },
    "enterprise_user_update_enterprise_user": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "password2": {
          "type": "string",
          "format": "password"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "isNative": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "disableSecondFactor": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        },
        "sshUsername": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string",
          "enum": [
            "BASIC",
            "PRIVILEGED"
          ]
        }
      }
    },
    "enterprise_user_update_enterprise_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_proxy_delete_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_and_assocs"
        }
      ]
    },
    "enterprise_proxy_insert_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_proxy_update_enterprise_proxy_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "enterprise_proxy_get_enterprise_proxy_users_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_user_with_role_info"
        }
      ]
    },
    "operator_user_delete_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    },
    "operator_user_get_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/operator_user_with_role_info"
        },
        {
          "type": "object",
          "properties": {
            "networkId": {
              "type": "integer"
            }
          },
          "required": [
            "networkId"
          ]
        }
      ]
    },
    "operator_user_insert_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "operator_user_update_operator_user": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        },
        "password2": {
          "type": "string",
          "format": "password"
        },
        "roleId": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "mobilePhone": {
          "type": "string"
        },
        "officePhone": {
          "type": "string"
        },
        "operatorId": {
          "type": "integer"
        },
        "userType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "isNative": {
          "type": "boolean"
        },
        "isLocked": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "sshUsername": {
          "type": "string"
        },
        "accessLevel": {
          "type": "string",
          "enum": [
            "BASIC",
            "PRIVILEGED"
          ]
        }
      }
    },
    "operator_user_update_operator_user_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "operator_user_set_operator_user_bastion_state_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "operatorId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "userType": {
          "type": "string",
          "enum": [
            "OPERATOR",
            "MSP",
            "PARTNER",
            "ENTERPRISE",
            "END_USER",
            "CUSTOM",
            "SERVICE"
          ]
        },
        "fromUserType": {
          "type": "string",
          "enum": [
            "OPERATOR",
            "MSP",
            "PARTNER",
            "ENTERPRISE",
            "END_USER",
            "CUSTOM",
            "SERVICE"
          ]
        },
        "roleType": {
          "type": "string",
          "enum": [
            "COMPOSITE",
            "FUNCTIONAL"
          ]
        },
        "isCustom": {
          "type": "integer"
        },
        "isSuper": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "precedence": {
          "type": "integer"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protocol_port_mapping": {
      "properties": {
        "tcpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "udpPorts": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "rows_modified_confirmation": {
      "type": "object",
      "properties": {
        "error": {
          "description": "An error message explaining why the method failed",
          "type": "string"
        },
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      },
      "required": [
        "rows"
      ],
      "example": {
        "rows": 1
      }
    },
    "default_application": {
      "type": "object",
      "properties": {
        "label": {
          "description": "Name of an application",
          "type": "string"
        },
        "value": {
          "description": "ID of an application",
          "type": "integer"
        }
      },
      "required": [
        "label",
        "value"
      ],
      "example": {
        "label": "Unclassified",
        "value": 0
      }
    },
    "insertion_confirmation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The id of the newly-created object."
        },
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        },
        "error": {
          "description": "An error message explaining why the method failed",
          "type": "string"
        }
      },
      "required": [
        "rows"
      ],
      "example": {
        "id": 123,
        "rows": 1
      }
    },
    "deletion_confirmation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The id of the deleted object."
        },
        "error": {
          "description": "An error message explaining why the method failed",
          "type": "string"
        },
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      },
      "required": [
        "rows"
      ],
      "example": {
        "id": 123,
        "rows": 1
      }
    },
    "license": {
      "type": "object",
      "properties": {
        "tier": {
          "type": "string"
        },
        "bandwidth": {
          "type": "string"
        },
        "term": {
          "type": "number"
        },
        "cloudGatewayRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "contactPhone": {
          "type": "string"
        },
        "contactMobile": {
          "type": "string"
        },
        "contactEmail": {
          "type": "string"
        },
        "streetAddress": {
          "type": "string"
        },
        "streetAddress2": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "lon": {
          "type": "number",
          "format": "double"
        },
        "timezone": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "shippingSameAsLocation": {
          "$ref": "#/definitions/tinyint"
        },
        "shippingContactName": {
          "type": "string"
        },
        "shippingAddress": {
          "type": "string"
        },
        "shippingAddress2": {
          "type": "string"
        },
        "shippingCity": {
          "type": "string"
        },
        "shippingState": {
          "type": "string"
        },
        "shippingCountry": {
          "type": "string"
        },
        "shippingPostalCode": {
          "type": "string"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "firewall_get_enterprise_firewall_logs_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "firewall_get_enterprise_firewall_logs_result": {
      "type": "object",
      "properties": {
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/firewall_log_data"
          }
        },
        "rules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/firewall_rule"
          }
        }
      }
    },
    "firewall_log_data": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "allow": {
          "type": "integer"
        },
        "ruleLogicalId": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "ICMP",
            "ICMPIPV6",
            "TCP",
            "UDP",
            "GRE"
          ]
        },
        "sourceIp": {
          "type": "string"
        },
        "sourcePort": {
          "type": "integer"
        },
        "destIp": {
          "type": "string"
        },
        "destPort": {
          "type": "integer"
        },
        "icmpType": {
          "type": "string"
        },
        "length": {
          "type": "integer"
        },
        "reason": {
          "type": "string",
          "description": "DENY messages can optionally have a REASON field as of the 3.4 Edge release"
        },
        "bytesSent": {
          "type": "integer"
        },
        "bytesReceived": {
          "type": "integer"
        },
        "durationSecs": {
          "type": "integer"
        },
        "application": {
          "type": "string"
        },
        "messageType": {
          "type": "string",
          "enum": [
            "DENY",
            "ALLOW",
            "OPEN",
            "CLOSE",
            "UPDATE"
          ]
        }
      }
    },
    "firewall_rule": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "data": {
          "type": "string"
        },
        "deactivated": {
          "type": "string"
        },
        "edgeLogicalId": {
          "type": "string"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "logicalId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "INBOUND",
            "OUTBOUND",
            "SERVICE"
          ]
        }
      }
    },
    "vco_inventory_get_inventory_items_result": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/inventory_item"
      }
    },
    "inventory_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "deviceSerialNumber": {
          "type": "string"
        },
        "deviceUuid": {
          "type": "string"
        },
        "modelNumber": {
          "type": "string"
        },
        "siteId": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "acknowledged": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "edge": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "edge": {
              "type": "string"
            },
            "site": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "inventoryState": {
          "type": "string"
        },
        "inventoryEdgeState": {
          "type": "string"
        },
        "inventoryAction": {
          "type": "string"
        },
        "vcoOwnerId": {
          "type": "integer"
        },
        "vcoOwner": {
          "type": "object",
          "properties": {
            "accountNumber": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "basic_metric_summary": {
      "properties": {
        "min": {
          "type": "number"
        },
        "max": {
          "type": "number"
        },
        "average": {
          "type": "number"
        }
      },
      "type": "object",
      "required": [
        "min",
        "max",
        "average"
      ]
    },
    "gateway_metric": {
      "enum": [
        "tunnelCount",
        "memoryPct",
        "flowCount",
        "cpuPct",
        "handoffQueueDrops",
        "connectedEdges",
        "tunnelCountV6"
      ],
      "type": "string"
    },
    "gateway_metrics": {
      "items": {
        "$ref": "#/definitions/gateway_metric"
      },
      "type": "array"
    },
    "gateway_status_metrics_summary": {
      "type": "object",
      "title": "metrics_get_gateway_status_metrics_result",
      "properties": {
        "total": {
          "type": "integer"
        },
        "tunnelCount": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "tunnelCountV6": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "memoryPct": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "flowCount": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "cpuPct": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "handoffQueueDrops": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "connectedEdges": {
          "$ref": "#/definitions/basic_metric_summary"
        }
      }
    },
    "gateway_status_metrics_time_series_item": {
      "type": "object",
      "title": "gateway_status_metrics_time_series_item",
      "properties": {
        "tunnelCount": {
          "type": "integer"
        },
        "tunnelCountV6": {
          "type": "integer"
        },
        "memoryPct": {
          "type": "number"
        },
        "flowCount": {
          "type": "number"
        },
        "cpuPct": {
          "type": "number"
        },
        "handoffQueueDrops": {
          "type": "integer"
        },
        "connectedEdges": {
          "type": "integer"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "startTime"
      ]
    },
    "get_gateway_status_metrics_time_series_result": {
      "type": "object",
      "title": "gateway_status_metrics_time_series_result",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/gateway_status_metrics_time_series_item"
          }
        }
      },
      "required": [
        "series"
      ]
    },
    "monitoring_network_gateway_status_item": {
      "type": "object",
      "title": "monitoring_network_gateway_status_item",
      "properties": {
        "gatewayId": {
          "type": "integer"
        },
        "tunnelCount": {
          "type": "integer"
        },
        "tunnelCountV6": {
          "type": "integer"
        },
        "memoryPct": {
          "type": "number",
          "format": "float"
        },
        "flowCount": {
          "type": "number"
        },
        "cpuPct": {
          "type": "number",
          "format": "float"
        },
        "handoffQueueDrops": {
          "type": "integer"
        },
        "connectedEdges": {
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "gatewayId"
      ]
    },
    "monitoring_get_vco_health": {
      "type": "object",
      "title": "monitoring_get_vco_health",
      "properties": {
        "systemProperties": {
          "type": "object",
          "properties": {
            "backendJobProperties": {
              "type": "object"
            },
            "dbProperties": {
              "type": "object"
            },
            "connectionPoolProperties": {
              "type": "object"
            },
            "managementProperties": {
              "type": "object"
            },
            "networkProperties": {
              "type": "object"
            },
            "enterpriseProperties": {
              "type": "object"
            },
            "operatorProperties": {
              "type": "object"
            },
            "fileProperties": {
              "type": "object"
            },
            "alertProperties": {
              "type": "object"
            },
            "edgeProperties": {
              "type": "object"
            },
            "gatewayProperties": {
              "type": "object"
            },
            "storageProperties": {
              "type": "object"
            },
            "otherProperties": {
              "type": "object"
            }
          }
        }
      },
      "required": [
        "systemProperties"
      ]
    },
    "monitoring_get_network_gateway_status_result": {
      "type": "object",
      "title": "monitoring_network_gateway_status_result",
      "properties": {
        "metaData": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "more": {
              "type": "boolean"
            }
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/monitoring_network_gateway_status_item"
          }
        }
      },
      "required": [
        "metaData",
        "data"
      ]
    },
    "edge_metric": {
      "enum": [
        "tunnelCount",
        "tunnelCountV6",
        "memoryPct",
        "flowCount",
        "cpuPct",
        "cpuCoreTemp",
        "handoffQueueDrops"
      ],
      "type": "string"
    },
    "edge_metrics": {
      "items": {
        "$ref": "#/definitions/edge_metric"
      },
      "type": "array"
    },
    "edge_status_metrics_summary": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer"
        },
        "tunnelCount": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "tunnelCountV6": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "memoryPct": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "flowCount": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "cpuPct": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "cpuCoreTemp": {
          "$ref": "#/definitions/basic_metric_summary"
        },
        "handoffQueueDrops": {
          "$ref": "#/definitions/basic_metric_summary"
        }
      }
    },
    "edge_status_metrics_time_series_item": {
      "type": "object",
      "title": "edge_status_metrics_time_series_item",
      "properties": {
        "tunnelCount": {
          "type": "integer"
        },
        "tunnelCountV6": {
          "type": "integer"
        },
        "memoryPct": {
          "type": "number"
        },
        "flowCount": {
          "type": "number"
        },
        "cpuPct": {
          "type": "number"
        },
        "cpuCoreTemp": {
          "type": "integer"
        },
        "handoffQueueDrops": {
          "type": "integer"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "startTime"
      ]
    },
    "get_edge_status_metrics_time_series_result": {
      "type": "object",
      "title": "edge_status_metrics_time_series_result",
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/edge_status_metrics_time_series_item"
          }
        }
      },
      "required": [
        "series"
      ]
    },
    "monitoring_enterprise_edge_status_item": {
      "type": "object",
      "title": "monitoring_enterprise_edge_status_item",
      "properties": {
        "edgeId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "tunnelCount": {
          "type": "integer"
        },
        "tunnelCountV6": {
          "type": "integer"
        },
        "memoryPct": {
          "type": "number"
        },
        "flowCount": {
          "type": "number"
        },
        "cpuPct": {
          "type": "number"
        },
        "cpuCoreTemp": {
          "type": "integer"
        },
        "handoffQueueDrops": {
          "type": "integer"
        }
      },
      "required": [
        "edgeId"
      ]
    },
    "monitoring_get_enterprise_edge_status_result": {
      "type": "object",
      "title": "monitoring_enterprise_edge_status_result",
      "properties": {
        "metaData": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "more": {
              "type": "boolean"
            }
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/monitoring_enterprise_edge_status_item"
          }
        }
      },
      "required": [
        "metaData",
        "data"
      ]
    },
    "monitoring_nsd_via_edge_action_result_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "action": {
          "type": "string"
        },
        "status": {
          "type": "integer"
        },
        "statusMsg": {
          "type": "string"
        },
        "edgeId": {
          "type": "integer"
        },
        "providerId": {
          "type": "integer"
        }
      }
    },
    "monitoring_vpn_site_status_result": {
      "type": "object",
      "title": "monitoring_vpn_site_status_result",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/monitoring_nsd_via_edge_action_result_item"
          }
        },
        "metaData": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "more": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "monitoring_get_vpn_edge_action_status_result": {
      "type": "object",
      "title": "monitoring_get_vpn_edge_action_status_result",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/monitoring_nsd_via_edge_action_result_item"
          }
        },
        "metaData": {
          "type": "object",
          "properties": {
            "limit": {
              "type": "integer"
            },
            "more": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "monitoring_get_automation_client_api_tracking_info_result_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "command": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "httpStatusCode": {
          "type": "integer"
        },
        "params": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "edge_get_edge_certificates_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/edge_certificate"
        }
      ]
    },
    "enterprise_get_enterprise_network_segments_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/network_segment"
        },
        {
          "type": "object",
          "properties": {
            "edgeCount": {
              "type": "integer"
            },
            "edgeUsage": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "configurationId": {
                    "type": "integer"
                  },
                  "edgeSpecificId": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "profileId": {
                    "type": "integer"
                  }
                }
              }
            },
            "configuration": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "configurationType": {
                    "type": "string",
                    "enum": [
                      "NETWORK_BASED",
                      "SEGMENT_BASED"
                    ]
                  },
                  "bastionState": {
                    "type": "string",
                    "enum": [
                      "UNCONFIGURED",
                      "STAGE_REQUESTED",
                      "UNSTAGE_REQUESTED",
                      "STAGED",
                      "UNSTAGED"
                    ]
                  },
                  "schemaVersion": {
                    "type": "string"
                  },
                  "effective": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "modified": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "moduleId": {
                    "type": "integer"
                  },
                  "segmentObjectId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "enterprise_encode_enterprise_key_result": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "required": [
        "key"
      ]
    },
    "enterprise_decode_enterprise_key_result": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "required": [
        "key"
      ]
    },
    "network_segment": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/network_segment_data"
            },
            "profileCount": {
              "type": "integer"
            },
            "handoffUsage": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "isAllMPGCDE": {
              "type": "boolean"
            },
            "isAllCtrlCDE": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "network_segment_data": {
      "type": "object",
      "properties": {
        "segmentId": {
          "type": "integer"
        },
        "serviceVlan": {
          "type": "integer"
        },
        "delegateToEnterprise": {
          "type": "boolean"
        },
        "delegateToEnterpriseProxy": {
          "type": "boolean"
        }
      }
    },
    "cloud_security_service": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/cloud_security_service_data"
            }
          }
        }
      ]
    },
    "cloud_security_service_data": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "cloudSecurityService"
        },
        "provider": {
          "type": "string",
          "enum": [
            "symantecCloudSecurityService",
            "zscalerWebSecurityService",
            "genericCloudSecurityService"
          ]
        },
        "config": {
          "$ref": "#/definitions/cloud_security_service_provider_config"
        }
      }
    },
    "cloud_security_service_provider_config": {
      "type": "object",
      "properties": {
        "primaryServer": {
          "type": "string"
        },
        "secondaryServer": {
          "type": "string"
        },
        "enableTunnels": {
          "type": "boolean"
        },
        "sharedIkeAuth": {
          "type": "boolean"
        },
        "maxTunnelsPerIkeIdentity": {
          "type": "integer"
        },
        "automateDeployment": {
          "type": "boolean"
        },
        "credentials": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "validated": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "cloud_security_service_site": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/cloud_security_service_site_data"
            }
          }
        }
      ]
    },
    "cloud_security_service_site_data": {
      "type": "object"
    },
    "cloud_security_service_site_data_generic_ipsec": {
      "type": "object",
      "properties": {
        "ikeId": {
          "type": "string"
        },
        "ikeIdType": {
          "type": "string"
        },
        "psk": {
          "type": "string"
        },
        "pskType": {
          "type": "string"
        }
      }
    },
    "cloud_security_service_site_data_zscaler_gre": {
      "type": "object",
      "properties": {
        "customSourceIp": {
          "type": "string"
        },
        "linkInternalLogicalId": {
          "type": "string"
        },
        "primaryAddressing": {
          "type": "object",
          "properties": {
            "internalRouterIp": {
              "type": "string"
            },
            "internalRouterMask": {
              "type": "string"
            },
            "internalZenIp": {
              "type": "string"
            },
            "internalZenMask": {
              "type": "string"
            }
          }
        },
        "secondaryAddressing": {
          "type": "object",
          "properties": {
            "internalRouterIp": {
              "type": "string"
            },
            "internalRouterMask": {
              "type": "string"
            },
            "internalZenIp": {
              "type": "string"
            },
            "internalZenMask": {
              "type": "string"
            }
          }
        },
        "useCustomSourceIp": {
          "type": "boolean"
        }
      }
    },
    "cloud_web_security_policy": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/cloud_web_security_policy_data"
            }
          }
        }
      ]
    },
    "cloud_web_security_policy_data": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        }
      }
    },
    "nvs_from_edge_service": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/nvs_from_edge_service_data"
            }
          }
        }
      ]
    },
    "nvs_from_edge_service_data": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "nvsViaEdgeService"
        },
        "data": {
          "$ref": "#/definitions/nvs_from_edge_service_provider_data"
        }
      }
    },
    "nvs_from_edge_service_provider_data": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "provider": {
          "type": "string",
          "enum": [
            "genericIKEv2Router",
            "genericIKEv1Router",
            "microsoftAzureVirtualWan",
            "Zscaler"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "genericIKEv2Router",
            "genericIKEv1Router",
            "microsoftAzureVirtualWan",
            "Zscaler"
          ]
        },
        "tunnelMode": {
          "type": "string",
          "enum": [
            "ACTIVE_ACTIVE",
            "ACTIVE_HOT_STANDBY",
            "ACTIVE_STANDBY"
          ]
        },
        "automateDeployment": {
          "type": "boolean"
        },
        "iaasProvider": {
          "type": "object",
          "properties": {
            "subscriptionObjectLogicalId": {
              "type": "string"
            },
            "vendorSpecificData": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "providerCategory": {
          "type": "string",
          "enum": [
            "DATACENTER",
            "CSS"
          ]
        },
        "routingPolicy": {
          "type": "string"
        },
        "tunnelingProtocol": {
          "type": "string",
          "enum": [
            "IPSEC",
            "GRE"
          ]
        },
        "sharedIkeAuth": {
          "type": "boolean"
        },
        "sourceSubnets": {
          "type": "object",
          "properties": {
            "subnets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/nvs_from_edge_service_provider_subnet"
              }
            }
          }
        },
        "peerSubnets": {
          "type": "object",
          "properties": {
            "alwaysReachable": {
              "type": "boolean"
            },
            "subnets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/nvs_from_edge_service_provider_subnet"
              }
            },
            "version": {
              "type": "string"
            }
          }
        },
        "bgp": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            }
          }
        },
        "primaryServer": {
          "$ref": "#/definitions/nvs_from_edge_service_provider_server_config"
        },
        "backupServer": {
          "$ref": "#/definitions/nvs_from_edge_service_provider_server_config"
        },
        "keepBackupServerConnected": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "nvs_from_edge_service_provider_server_config": {
      "type": "object",
      "properties": {
        "IKEPROP": {
          "type": "object",
          "properties": {
            "DHGroup": {
              "type": "integer"
            },
            "PFS": {
              "type": "integer"
            },
            "authenticationAlgorithm": {
              "type": "string",
              "enum": [
                "Any",
                "MD5",
                "SHA_1",
                "SHA_256"
              ]
            },
            "authenticationMethod": {
              "type": "string"
            },
            "dpdTimeoutSeconds": {
              "type": "integer"
            },
            "encryptionAlgorithm": {
              "type": "string",
              "enum": [
                "Any",
                "AES_128_CBC",
                "AES_192_CBC",
                "AES_256_CBC",
                "AES_128_GCM",
                "AES_192_GCM",
                "AES_256_GCM",
                "NONE"
              ]
            },
            "ikev1MainMode": {
              "type": "boolean"
            },
            "lifeTimeSeconds": {
              "type": "integer"
            },
            "peerIkeId": {
              "type": "object",
              "properties": {
                "ikeId": {
                  "type": "string"
                },
                "ikeIdType": {
                  "type": "string",
                  "enum": [
                    "IPV4_ADDR",
                    "FQDN",
                    "USER_FQDN"
                  ]
                }
              }
            },
            "protocolVersion": {
              "type": "integer"
            }
          }
        },
        "IPSECPROP": {
          "type": "object",
          "properties": {
            "authenticationAlgorithm": {
              "type": "string"
            },
            "encryptionAlgorithm": {
              "type": "string",
              "enum": [
                "Any",
                "AES_128_CBC",
                "AES_192_CBC",
                "AES_256_CBC",
                "AES_128_GCM",
                "AES_192_GCM",
                "AES_256_GCM",
                "NONE"
              ]
            },
            "ipsecTunnelType": {
              "type": "string",
              "enum": [
                "ROUTE",
                "POLICY"
              ]
            },
            "lifeTimeSeconds": {
              "type": "integer"
            },
            "reKeyTimer": {
              "type": "integer"
            },
            "protocol": {
              "type": "string",
              "enum": [
                "ESP_AUTH",
                "ESP_NULL"
              ]
            },
            "dpdTimeoutSeconds": {
              "type": "integer"
            },
            "dpdType": {
              "type": "string"
            }
          }
        },
        "localLinkIp": {
          "type": "string"
        },
        "nvsPublicIp": {
          "type": "string"
        },
        "peerLinkIp": {
          "type": "string"
        }
      }
    },
    "nvs_from_edge_service_provider_subnet": {
      "type": "object",
      "properties": {
        "advertise": {
          "type": "boolean"
        },
        "cidrIp": {
          "type": "string",
          "format": "ipv4"
        },
        "metric": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "cidrPrefix": {
          "type": "string"
        },
        "netMask": {
          "type": "string",
          "format": "ipv4"
        }
      }
    },
    "nvs_from_edge_site": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/nvs_from_edge_site_data"
            }
          }
        }
      ]
    },
    "nvs_from_edge_site_data": {
      "type": "object"
    },
    "nvs_from_edge_site_data_generic_ipsec": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "linkInternalLogicalId": {
          "type": "string"
        },
        "maxTunnelsPerIkeIdentity": {
          "type": "integer"
        },
        "primaryTunnel": {
          "$ref": "#/definitions/nvs_from_edge_site_data_generic_ipsec_tunnel"
        },
        "backupTunnel": {
          "$ref": "#/definitions/nvs_from_edge_site_data_generic_ipsec_tunnel"
        }
      }
    },
    "nvs_from_edge_site_data_generic_ipsec_tunnel": {
      "type": "object",
      "properties": {
        "ikeAuth": {
          "type": "object",
          "properties": {
            "ikeId": {
              "type": "string"
            },
            "ikeIdType": {
              "type": "string",
              "enum": [
                "IPV4_ADDR",
                "FQDN",
                "USER_FQDN"
              ]
            },
            "psk": {
              "type": "string"
            },
            "pskType": {
              "type": "string"
            }
          }
        },
        "nvsPublicIp": {
          "type": "string"
        },
        "localLinkIp": {
          "type": "string"
        },
        "peerLinkIp": {
          "type": "string"
        },
        "keepalive": {
          "type": "object",
          "properties": {
            "destinationIp": {
              "type": "string"
            },
            "intervalSeconds": {
              "type": "integer"
            },
            "payloadSize": {
              "type": "integer"
            },
            "sourceIp": {
              "type": "string"
            }
          }
        }
      }
    },
    "security_vnf_service": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/security_vnf_service_data"
            }
          }
        }
      ]
    },
    "security_vnf_service_data": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "securityVnfService"
        },
        "vendor": {
          "type": "string",
          "enum": [
            "PaloAlto",
            "CheckPoint",
            "Fortinet",
            "CentOS"
          ]
        },
        "vendorSpecificData": {
          "$ref": "#/definitions/security_vnf_service_data"
        }
      }
    },
    "security_vnf_service_vendor_specific_data": {
      "type": "object"
    },
    "security_vnf_service_palo_alto_networks": {
      "type": "object",
      "properties": {
        "managementServer": {
          "type": "object",
          "properties": {
            "primary": {
              "type": "string"
            },
            "secondary": {
              "type": "string"
            },
            "authKey": {
              "type": "string"
            }
          }
        }
      }
    },
    "security_vnf_service_check_point_software": {
      "type": "object",
      "properties": {
        "managementServer": {
          "type": "object",
          "properties": {
            "primary": {
              "type": "string"
            },
            "sicKey": {
              "type": "string"
            }
          }
        },
        "vmConfiguration": {
          "type": "object",
          "properties": {
            "adminPassword": {
              "type": "string"
            }
          }
        },
        "image": {
          "$ref": "#/definitions/security_vnf_service_image_info"
        }
      }
    },
    "security_vnf_service_fortinet": {
      "type": "object",
      "properties": {
        "managementServer": {
          "type": "object",
          "properties": {
            "primary": {
              "type": "string"
            },
            "serialNumber": {
              "type": "string"
            },
            "registrationPassword": {
              "type": "string"
            }
          }
        },
        "image": {
          "$ref": "#/definitions/security_vnf_service_image_info"
        }
      }
    },
    "security_vnf_service_image_info": {
      "type": "object",
      "properties": {
        "downloadType": {
          "type": "string",
          "enum": [
            "s3",
            "http",
            "https"
          ]
        },
        "fileLocation": {
          "type": "string"
        },
        "fileChecksum": {
          "type": "string"
        },
        "fileChecksumType": {
          "type": "string"
        },
        "https": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        },
        "s3": {
          "type": "object",
          "properties": {
            "accessKeyId": {
              "type": "string"
            },
            "secretAccessKey": {
              "type": "string"
            }
          }
        }
      }
    },
    "security_vnf_image": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/security_vnf_image_data"
            }
          }
        }
      ]
    },
    "security_vnf_image_data": {
      "type": "object",
      "properties": {
        "service": {
          "allOf": [
            {
              "$ref": "#/definitions/logicalid_reference"
            },
            {
              "type": "object",
              "properties": {
                "ref": {
                  "type": "string",
                  "pattern": "deviceSettings:securityVnf:service"
                }
              }
            }
          ]
        },
        "IN_PROGRESS": {
          "$ref": "#/definitions/vnf_image_download_event_detail"
        },
        "COMPLETED": {
          "$ref": "#/definitions/vnf_image_download_event_detail"
        },
        "FAILED": {
          "$ref": "#/definitions/vnf_image_download_event_detail"
        }
      }
    },
    "security_vnf_license": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/security_vnf_license_data"
            }
          }
        }
      ]
    },
    "security_vnf_license_data": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "pattern": "securityVnfLicense"
        },
        "vendor": {
          "type": "string",
          "enum": [
            "PaloAlto",
            "CheckPoint",
            "Fortinet",
            "CentOS"
          ]
        },
        "vendorSpecificData": {
          "$ref": "#/definitions/security_vnf_license_data"
        }
      }
    },
    "security_vnf_license_vendor_specific_data": {
      "type": "object"
    },
    "security_vnf_license_palo_alto_networks": {
      "type": "object",
      "properties": {
        "licenseServer": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "apiKey": {
              "type": "string"
            }
          }
        },
        "authCode": {
          "type": "string"
        }
      }
    },
    "edge_vnf": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/security_vnf_service_data"
            }
          }
        }
      ]
    },
    "edge_vnf_data": {
      "type": "object",
      "properties": {
        "securityVnf": {
          "type": "object",
          "properties": {
            "vms": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/edge_vnf_security_vnf_vm"
              }
            }
          }
        }
      }
    },
    "edge_vnf_security_vnf_vm": {
      "type": "object",
      "properties": {
        "cidrIp": {
          "type": "string",
          "format": "ipv4"
        },
        "edgeEvent": {
          "type": "object",
          "properties": {
            "DEPLOYED": {
              "$ref": "#/definitions/vnf_vm_event_detail"
            },
            "status": {
              "type": "string",
              "enum": [
                "DEPLOYED",
                "POWERED_ON",
                "POWERED_OFF",
                "DELETED",
                "ERROR",
                "UNKNOWN"
              ]
            }
          }
        },
        "hostname": {
          "type": "string"
        },
        "insertionEnabled": {
          "type": "boolean"
        },
        "ref": {
          "type": "string",
          "pattern": "deviceSettings:vnfs:edge"
        },
        "type": {
          "type": "string",
          "pattern": "securityVnf"
        },
        "vendor": {
          "type": "string",
          "enum": [
            "PaloAlto",
            "CheckPoint",
            "Fortinet",
            "CentOS"
          ]
        },
        "vendorSpecificData": {
          "$ref": "#/definitions/edge_vnf_security_vnf_vm_vendor_specific_data"
        },
        "vlanId": {
          "type": "integer"
        },
        "vmDeploy": {
          "type": "boolean"
        },
        "vmPowerOff": {
          "type": "boolean"
        },
        "instanceId": {
          "type": "integer"
        }
      }
    },
    "vnf_vm_event": {
      "allOf": [
        {
          "$ref": "#/definitions/event_base"
        },
        {
          "properties": {
            "detail": {
              "$ref": "#/definitions/vnf_vm_event_detail"
            }
          },
          "required": [
            "id",
            "eventTime",
            "event",
            "category",
            "severity",
            "detail"
          ]
        }
      ]
    },
    "vnf_vm_event_detail": {
      "type": "object",
      "properties": {
        "configUuid": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "edgeSerialNumber": {
          "type": "string"
        },
        "isEdgeActive": {
          "type": "boolean"
        },
        "runningConfig": {
          "type": "object"
        },
        "status": {
          "type": "string",
          "enum": [
            "DEPLOYED",
            "POWERED_ON",
            "POWERED_OFF",
            "DELETED",
            "ERROR",
            "UNKNOWN"
          ]
        },
        "uuid": {
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "enum": [
            "PaloAlto",
            "CheckPoint",
            "Fortinet",
            "CentOS"
          ]
        },
        "vnfEdgeLogicalId": {
          "type": "string"
        },
        "vnfType": {
          "type": "string",
          "enum": [
            "securityVnf"
          ]
        }
      }
    },
    "edge_vnf_security_vnf_vm_vendor_specific_data": {
      "type": "object"
    },
    "edge_vnf_security_vnf_vm_palo_alto_networks": {
      "type": "object",
      "properties": {
        "deviceGroupName": {
          "type": "string"
        },
        "deviceTemplateName": {
          "type": "string"
        }
      }
    },
    "edge_vnf_security_vnf_vm_check_point_software": {
      "type": "object"
    },
    "edge_vnf_security_vnf_vm_fortinet": {
      "type": "object",
      "properties": {
        "inspectionMode": {
          "type": "string",
          "enum": [
            "proxy",
            "flow"
          ]
        },
        "license": {
          "type": "string"
        }
      }
    },
    "enterprise_user_do_all_users_have_phones": {
      "type": "object",
      "properties": {
        "doUsersHavePhones": {
          "type": "boolean"
        },
        "doesPhoneHasAtLeastOneUser": {
          "type": "boolean"
        }
      }
    },
    "vpn_generate_vpn_gateway_configuration_result": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "object": {
          "type": "string",
          "enum": [
            "NETWORK_ALLOCATION",
            "NETWORK_SERVICE",
            "CUSTOM_APPLICATION",
            "ROUTING_CONFIGURATION",
            "NETWORK_SEGMENT",
            "HA_SERVICE",
            "PRIVATE_NETWORK",
            "CDE_GATEWAY",
            "EDGE_LICENSE",
            "PROPERTY",
            "ANALYTICS_CONFIGURATION",
            "ZSCALER_LOCATION",
            "ZSCALER_SUBLOCATION",
            "NSD_CONFIGURATION"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "dns",
            "authentication",
            "dataCenter",
            "dataCenterEdge",
            "edgeHub",
            "partnerGateway",
            "edgeHubCluster",
            "edgeBranchCluster",
            "localUiCredentials",
            "edgeBranchClusterMember",
            "edgeHubClusterMember",
            "securityVnf",
            "edgeVrrpPairSet",
            "cloudSecurityService",
            "cloudSecurityServiceSite",
            "securityVnfLicense",
            "securityVnfService",
            "primary",
            "secondary",
            "controllerGateway",
            "tacacs",
            "netflowCollector",
            "iaasSubscription",
            "netflowFilter",
            "vnfImage",
            "edgeDirectNVSSite",
            "nvsViaEdgeService",
            "zscaler",
            "cloudWebSecurity",
            "cloudWebSecurityPolicy",
            "secureAccess",
            "cloudToCloudInterConnect",
            "zscalerMtGreSite",
            "custom"
          ]
        },
        "data": {
          "$ref": "#/definitions/data_center_data"
        }
      }
    },
    "data_center_data": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "isCDE": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "primary": {
          "$ref": "#/definitions/data_center_vpn_tunnel"
        },
        "secondary": {
          "$ref": "#/definitions/data_center_vpn_tunnel"
        },
        "subnets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "advertise": {
                "type": "boolean"
              },
              "cidrIp": {
                "type": "string",
                "format": "ipv4"
              },
              "cidrIpStart": {
                "type": "string",
                "format": "ipv4"
              },
              "cidrIpEnd": {
                "type": "string",
                "format": "ipv4"
              },
              "cidrPrefix": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "netMask": {
                "type": "string",
                "format": "ipv4"
              }
            }
          }
        },
        "iaasProvider": {
          "type": "object",
          "properties": {
            "subscriptionObjectId": {
              "type": "integer"
            },
            "vendor": {
              "type": "string"
            },
            "vendorSpecificData": {
              "$ref": "#/definitions/data_center_iaas_provider_vendor_specific_data"
            },
            "tunnelsEnabledOnSync": {
              "type": "boolean"
            },
            "syncStatus": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "string"
                },
                "stateTimestamp": {
                  "type": "integer"
                },
                "lastSyncTimestamp": {
                  "type": "integer"
                },
                "errorDetail": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "response": {
                      "$ref": "#/definitions/upstream_api_response"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "data_center_iaas_provider_vendor_specific_data": {
      "type": "object"
    },
    "data_center_iaas_provider_microsoft_azure": {
      "type": "object",
      "properties": {
        "virtualWanId": {
          "type": "string"
        },
        "virtualHubId": {
          "type": "string"
        },
        "primaryVpnSiteId": {
          "type": "string"
        },
        "redundantVpnSiteId": {
          "type": "string"
        },
        "deploymentState": {
          "type": "string",
          "enum": [
            "VPN_SITE_CREATION_PENDING",
            "VPN_SITE_CREATION_IN_PROGRESS",
            "VPN_SITE_CREATION_FAILED",
            "VPN_DEPLOYMENT_PENDING",
            "VPN_DEPLOYMENT_IN_PROGRESS",
            "VPN_DEPLOYMENT_FAILED",
            "SUCCEEDED"
          ]
        }
      }
    },
    "data_center_vpn_tunnel": {
      "type": "object",
      "properties": {
        "IKESA": {
          "type": "object",
          "properties": {
            "DHGroup": {
              "type": "integer"
            },
            "authenticationAlgorithm": {
              "type": "string"
            },
            "authenticationMethod": {
              "type": "string"
            },
            "ikeVersion": {
              "type": "integer"
            },
            "lifeTimeSeconds": {
              "type": "integer"
            },
            "phaseOneNegotiationMode": {
              "type": "string",
              "enum": [
                "main",
                "aggressive"
              ]
            },
            "sharedKey": {
              "type": "string"
            },
            "sharedKeyType": {
              "type": "string"
            }
          }
        },
        "IPSECDPD": {
          "type": "object",
          "properties": {
            "intervalSeconds": {
              "type": "integer"
            },
            "retries": {
              "type": "integer"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "IPSECSA": {
          "type": "object",
          "properties": {
            "authenticationAlgorithm": {
              "type": "string"
            },
            "encryptionAlgorithm": {
              "type": "string"
            },
            "lifeTimeSeconds": {
              "type": "integer"
            },
            "mode": {
              "type": "string"
            },
            "perfectForwardSecurity": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          }
        },
        "bgpNeighbor": {
          "$ref": "#/definitions/data_center_bgp_neighbor"
        },
        "dataCenterLinkIp": {
          "type": "string",
          "format": "ipv4"
        },
        "dataCenterPublicIp": {
          "type": "string",
          "format": "ipv4"
        },
        "disabled": {
          "type": "boolean"
        },
        "fragmentationAvoidance": {
          "type": "object",
          "properties": {
            "tcpMssAdjustmentBytes": {
              "type": "integer"
            },
            "clearDontFragmentBit": {
              "type": "string"
            },
            "fragmentationStyle": {
              "type": "string"
            }
          }
        },
        "gatewayLinkIp": {
          "type": "string",
          "format": "ipv4"
        },
        "gatewayPublicIp": {
          "type": "string",
          "format": "ipv4"
        },
        "geoData": {
          "type": "object",
          "properties": {
            "latitude": {
              "type": "number"
            },
            "longitude": {
              "type": "number"
            }
          }
        },
        "redundant": {
          "$ref": "#/definitions/data_center_vpn_tunnel"
        },
        "serviceFQDN": {
          "type": "string"
        },
        "tunnelInterface": {
          "type": "object",
          "properties": {
            "MTU": {
              "type": "integer"
            }
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Cisco ISR",
            "Cisco ASA",
            "SonicWall",
            "Palo Alto",
            "Other",
            "Generic Policy",
            "Zscaler",
            "GenericIKEv2Router",
            "CheckPoint",
            "Microsoft Azure Virtual Hub",
            "AWS VPN Gateway"
          ]
        },
        "typeAlias": {
          "type": "string",
          "enum": [
            "Cisco ISR",
            "Cisco ASA",
            "SonicWall",
            "Palo Alto",
            "Other",
            "Generic Policy",
            "Zscaler",
            "GenericIKEv2Router",
            "CheckPoint",
            "Microsoft Azure Virtual Hub",
            "AWS VPN Gateway"
          ]
        }
      }
    },
    "export_enterprise_edge_license_data_result": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "export_network_edge_license_data_result": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "export_enterprise_proxy_edge_license_data_result": {
      "type": "object",
      "properties": {
        "csv": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "get_edge_license_details_by_enterprise_proxy_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "activatedEdgeCount": {
            "type": "integer"
          },
          "edgeCount": {
            "type": "integer"
          },
          "enterpriseCount": {
            "type": "integer"
          },
          "enterpriseProxyId": {
            "type": "integer"
          },
          "enterpriseProxyName": {
            "type": "string"
          }
        }
      }
    },
    "get_edge_license_details_by_enterprise_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "activatedEdgeCount": {
            "type": "integer"
          },
          "edgeCount": {
            "type": "integer"
          },
          "enterpriseCount": {
            "type": "integer"
          },
          "enterpriseProxyId": {
            "type": "integer"
          },
          "enterpriseProxyName": {
            "type": "string"
          },
          "enterpriseName": {
            "type": "string"
          }
        }
      }
    },
    "set_edge_edge_licenses_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "edgeId": {
            "type": "integer"
          },
          "edgeLicenseId": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      }
    },
    "update_analytics_settings_for_edges_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "set_enterprise_edge_license_edition_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "original": {
            "type": "string"
          },
          "replacement": {
            "type": "string"
          }
        }
      }
    },
    "update_enterprise_edge_licenses_result": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "update_enterprise_proxy_edge_licenses_result": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "edge_license": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "licenseId": {
          "type": "integer"
        },
        "sku": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "alias": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "quota": {
          "type": "string"
        },
        "termMonths": {
          "type": "integer"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "edition": {
          "type": "string"
        },
        "bandwidthTier": {
          "type": "string"
        },
        "active": {
          "$ref": "#/definitions/tinyint"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "get_enterprise_proxy_edge_licenses_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "activatedEdgeCount": {
            "type": "integer"
          },
          "active": {
            "type": "integer"
          },
          "alias": {
            "type": "string"
          },
          "bandwidthTier": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "detail": {
            "type": "object",
            "properties": {
              "regions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "addOns": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "edgeCount": {
            "type": "integer"
          },
          "edition": {
            "type": "string"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "enterpriseCount": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "licenseId": {
            "type": "integer"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "quota": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "termMonths": {
            "type": "integer"
          }
        }
      }
    },
    "get_enterprise_edge_licenses_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "activatedEdgeCount": {
            "type": "integer"
          },
          "active": {
            "type": "integer"
          },
          "alias": {
            "type": "string"
          },
          "bandwidthTier": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "detail": {
            "type": "object",
            "properties": {
              "regions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "addOns": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "edgeCount": {
            "type": "integer"
          },
          "edition": {
            "type": "string"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer"
          },
          "licenseId": {
            "type": "integer"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "quota": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "termMonths": {
            "type": "integer"
          }
        }
      }
    },
    "get_edge_license_enabled_on_enterprise_proxy_result": {
      "type": "object",
      "properties": {
        "edgeLicenseEnabled": {
          "type": "boolean"
        }
      }
    },
    "get_enterprise_edge_cloud_services_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "link": {
            "type": "string"
          },
          "local_interface_ip": {
            "type": "string"
          },
          "local_public_ip": {
            "type": "string"
          },
          "nvs_ip": {
            "type": "string"
          },
          "pathId": {
            "type": "string"
          },
          "segmentId": {
            "type": "integer"
          },
          "segmentLogicalId": {
            "type": "string"
          },
          "site": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "logicalId": {
                "type": "string"
              },
              "data": {
                "type": "object",
                "properties": {
                  "ikeIdType": {
                    "type": "string"
                  },
                  "pskType": {
                    "type": "string"
                  },
                  "ikeId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "provider": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "logicalId": {
                "type": "string"
              },
              "data": {
                "type": "object",
                "properties": {
                  "primaryServer": {
                    "type": "string"
                  },
                  "secondaryServer": {
                    "type": "string"
                  },
                  "automateDeployment": {
                    "type": "boolean"
                  },
                  "enableTunnels": {
                    "type": "boolean"
                  },
                  "sharedIkeAuth": {
                    "type": "boolean"
                  },
                  "maxTunnelsPerIkeIdentity": {
                    "type": "integer"
                  },
                  "provider": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "get_enterprise_edge_vnfs_result": {
      "type": "object",
      "properties": {
        "securityVnf": {
          "type": "object",
          "properties": {
            "vms": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "logicalId": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "vendor": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "vendorSpecificData": {
                        "type": "object",
                        "properties": {
                          "deviceGroupName": {
                            "type": "string"
                          },
                          "deviceTemplateName": {
                            "type": "string"
                          }
                        }
                      },
                      "vmDeploy": {
                        "type": "boolean"
                      },
                      "vmPowerOff": {
                        "type": "boolean"
                      },
                      "vlanId": {
                        "type": "integer"
                      },
                      "cidrIp": {
                        "type": "string"
                      },
                      "hostname": {
                        "type": "string"
                      },
                      "insertionEnabled": {
                        "type": "boolean"
                      },
                      "instanceId": {
                        "type": "integer"
                      }
                    }
                  },
                  "status": {
                    "type": "object",
                    "properties": {
                      "vmStatus": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "serialNumber": {
                        "type": "string"
                      },
                      "isEdgeActive": {
                        "type": "boolean"
                      },
                      "vnfInsertionEnabled": {
                        "type": "boolean"
                      },
                      "runningConfig": {
                        "$ref": "#/definitions/get_enterprise_edge_vnf_vm_status_running_config_result"
                      },
                      "healthStatsTimestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "healthStats": {
                        "type": "object",
                        "properties": {
                          "cpuPercent": {
                            "type": "integer"
                          },
                          "memoryInMB": {
                            "type": "integer"
                          },
                          "storageInGB": {
                            "type": "integer"
                          },
                          "state": {
                            "type": "string"
                          },
                          "runningConfig": {
                            "$ref": "#/definitions/get_enterprise_edge_vnf_vm_status_running_config_result"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "get_enterprise_edge_vnf_vm_status_running_config_result": {
      "type": "object",
      "properties": {
        "cidrPrefix": {
          "type": "integer"
        },
        "insertionEnabled": {
          "type": "boolean"
        },
        "vmPowerOff": {
          "type": "boolean"
        },
        "vendor": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "uuidTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "license": {
          "type": "object",
          "properties": {
            "logicalId": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            }
          }
        },
        "service": {
          "type": "object",
          "properties": {
            "logicalId": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            }
          }
        },
        "hostname": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "vlanId": {
          "type": "integer"
        },
        "cidrIp": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "edge": {
          "type": "object",
          "properties": {
            "logicalId": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            }
          }
        },
        "modifiedTimestamp": {
          "type": "integer"
        },
        "dns": {
          "type": "string"
        },
        "vendorSpecificData": {
          "type": "object",
          "properties": {
            "configTemplateName": {
              "type": "string"
            },
            "authCodeValidationTimeStamp": {
              "type": "string"
            },
            "managementServer": {
              "type": "object",
              "properties": {
                "authKey": {
                  "type": "string"
                },
                "primary": {
                  "type": "string"
                },
                "secondary": {
                  "type": "string"
                }
              }
            },
            "authCode": {
              "type": "string"
            },
            "authCodeValidated": {
              "type": "boolean"
            },
            "deviceGroupName": {
              "type": "string"
            },
            "licenseServer": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "apiKey": {
                  "type": "string"
                }
              }
            },
            "deviceTemplateName": {
              "type": "string"
            }
          }
        },
        "vmDeploy": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "dnsSecondary": {
          "type": "string"
        }
      }
    },
    "get_network_edge_licenses_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "activatedEdgeCount": {
            "type": "integer"
          },
          "active": {
            "type": "integer"
          },
          "alias": {
            "type": "string"
          },
          "bandwidthTier": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "detail": {
            "type": "object",
            "properties": {
              "regions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "addOns": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "edgeCount": {
            "type": "integer"
          },
          "edition": {
            "type": "string"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "enterpriseCount": {
            "type": "integer"
          },
          "enterpriseProxyCount": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "licenseId": {
            "type": "integer"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "quota": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "termMonths": {
            "type": "integer"
          }
        }
      }
    },
    "vco_diagnostic_bundle": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "requestId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "ageOutTime": {
          "type": "string",
          "format": "date-time"
        },
        "reason": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "blobId": {
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "fileStore": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "jobId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "enterprise_rolemap": {
      "type": "object",
      "properties": {
        "Enterprise Read Only": {
          "type": "string"
        },
        "Enterprise Standard Admin": {
          "type": "string"
        },
        "Enterprise Superuser": {
          "type": "string"
        },
        "Enterprise Support": {
          "type": "string"
        }
      }
    },
    "radius_operator_rolemap": {
      "type": "object",
      "properties": {
        "Operator Standard Admin": {
          "type": "string"
        },
        "Operator Superuser": {
          "type": "string"
        },
        "Operator Support": {
          "type": "string"
        }
      }
    },
    "radius_enterprise_authentication_configuration": {
      "type": "object",
      "properties": {
        "domainAttribute": {
          "type": "string"
        },
        "primaryServer": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "roleAttribute": {
          "type": "string"
        },
        "secondaryServer": {
          "type": "string"
        },
        "sharedSecret": {
          "type": "string"
        },
        "timeoutMilliSeconds": {
          "type": "integer"
        },
        "roleMap": {
          "$ref": "#/definitions/enterprise_rolemap"
        }
      }
    },
    "radius_operator_authentication_configuration": {
      "type": "object",
      "properties": {
        "domainAttribute": {
          "type": "string"
        },
        "operatorDomain": {
          "type": "string"
        },
        "primaryServer": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "roleAttribute": {
          "type": "string"
        },
        "secondaryServer": {
          "type": "string"
        },
        "sharedSecret": {
          "type": "string"
        },
        "timeoutMilliSeconds": {
          "type": "integer"
        },
        "roleMap": {
          "$ref": "#/definitions/radius_operator_rolemap"
        }
      }
    },
    "operator_sso_authentication_configuration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "configuration": {
          "type": "object",
          "properties": {
            "authorizationEndpoint": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "issuer": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            },
            "redirectEndpoint": {
              "type": "string"
            },
            "tokenEndpoint": {
              "type": "string"
            },
            "userInfoEndpoint": {
              "type": "string"
            },
            "wellKnownConfigurationUrl": {
              "type": "string"
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "roleConfig": {
              "type": "object",
              "properties": {
                "defaultRole": {
                  "type": "string"
                },
                "oidcRolesEnabled": {
                  "type": "boolean"
                },
                "roleAttribute": {
                  "type": "string"
                },
                "vcoToIdpRoleMap": {
                  "type": "object",
                  "properties": {
                    "Operator Business": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Operator Standard Admin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Operator Superuser": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Operator Support": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "enterprise_proxy_sso_authentication_configuration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "configuration": {
          "type": "object",
          "properties": {
            "authorizationEndpoint": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "issuer": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            },
            "redirectEndpoint": {
              "type": "string"
            },
            "tokenEndpoint": {
              "type": "string"
            },
            "userInfoEndpoint": {
              "type": "string"
            },
            "wellKnownConfigurationUrl": {
              "type": "string"
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "roleConfig": {
              "type": "object",
              "properties": {
                "defaultRole": {
                  "type": "string"
                },
                "oidcRolesEnabled": {
                  "type": "boolean"
                },
                "roleAttribute": {
                  "type": "string"
                },
                "vcoToIdpRoleMap": {
                  "type": "object",
                  "properties": {
                    "MSP Business": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "MSP Standard Admin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "MSP Superuser": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "MSP Support": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "enterprise_sso_authentication_configuration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        },
        "configuration": {
          "type": "object",
          "properties": {
            "authorizationEndpoint": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "issuer": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            },
            "redirectEndpoint": {
              "type": "string"
            },
            "tokenEndpoint": {
              "type": "string"
            },
            "userInfoEndpoint": {
              "type": "string"
            },
            "wellKnownConfigurationUrl": {
              "type": "string"
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "roleConfig": {
              "type": "object",
              "properties": {
                "defaultRole": {
                  "type": "string"
                },
                "oidcRolesEnabled": {
                  "type": "boolean"
                },
                "roleAttribute": {
                  "type": "string"
                },
                "vcoToIdpRoleMap": {
                  "type": "object",
                  "properties": {
                    "Enterprise Read Only": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Enterprise Standard Admin": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Enterprise Superuser": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Enterprise Support": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "enterprise_authentication_configuration": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "radius": {
          "description": "",
          "$ref": "#/definitions/radius_enterprise_authentication_configuration"
        }
      }
    },
    "operator_authentication_configuration": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "radius": {
          "description": "Returns radius configuration or null (if no configuration available)",
          "$ref": "#/definitions/radius_operator_authentication_configuration"
        },
        "sso": {
          "description": "Returns sso configuration or null (if no configuration available)",
          "$ref": "#/definitions/operator_sso_authentication_configuration"
        }
      }
    },
    "system_property_get_authentication_configuration_result": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/operator_authentication_configuration"
        },
        "enterprise": {
          "$ref": "#/definitions/enterprise_authentication_configuration"
        }
      }
    },
    "system_property_set_authentication_configuration_result": {
      "type": "object",
      "properties": {
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      }
    },
    "sso_get_sso_properties_result": {
      "type": "object",
      "properties": {
        "redirectUri": {
          "type": "string"
        }
      }
    },
    "openid_well_known_config": {
      "type": "object",
      "properties": {
        "issuer": {
          "type": "string"
        },
        "authorization_endpoint": {
          "type": "string"
        },
        "token_endpoint": {
          "type": "string"
        },
        "revocation_endpoint": {
          "type": "string"
        },
        "userinfo_endpoint": {
          "type": "string"
        },
        "jwks_uri": {
          "type": "string"
        },
        "scopes_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "response_types_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "response_modes_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "claims_supported": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "sso_discover_openid_endpoints_result": {
      "$ref": "#/definitions/openid_well_known_config"
    },
    "operator_user_get_operator_user_authentication_mode_result": {
      "$ref": "#/definitions/system_property_get_system_property_result"
    },
    "enterprise_proxy_insert_or_update_enterprise_proxy_authentication_configuration_result": {
      "type": "object",
      "properties": {
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      }
    },
    "enterprise_proxy_get_enterprise_proxy_authentication_configuration_result": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "sso": {
          "$ref": "#/definitions/enterprise_proxy_sso_authentication_configuration",
          "description": "Returns sso configuration or null (if no configuration available)"
        }
      }
    },
    "enterprise_insert_or_update_enterprise_authentication_configuration_result": {
      "type": "object",
      "properties": {
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      }
    },
    "enterprise_get_enterprise_authentication_configuration_result": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "sso": {
          "description": "Returns sso configuration or null (if no configuration available)",
          "$ref": "#/definitions/enterprise_sso_authentication_configuration"
        }
      }
    },
    "granted_privilege": {
      "type": "object",
      "properties": {
        "privilege": {
          "type": "string",
          "enum": [
            "EDIT_RESTRICTED_SYSTEM_PROPERTIES",
            "VIEW_USER_IDENTIFIABLE_FLOW_STATS",
            "VIEW_FLOW_STATS",
            "VIEW_PATH_STATS",
            "CREATE_DMZ_GATEWAY",
            "CONFIGURE_EDGE_FIREWALL_LOGGING",
            "CONFIGURE_PROFILE_FIREWALL_LOGGING",
            "DUPLICATE_ENTERPRISE_PROFILE",
            "VIEW_FIREWALL_LOGS",
            "ASSIGN_EDGE_PROFILE",
            "VIEW_ENTERPRISE_ROUTING",
            "SHUTDOWN_EDGE",
            "DEACTIVATE_EDGE",
            "UPDATE_CUSTOMER_SMS_ALERT",
            "REMOTE_RESET_USB_MODEM",
            "REMOTE_SCAN_FOR_WIFI_ACCESS_POINTS",
            "REMOTE_VPN_TEST",
            "REMOTE_CLOUD_TRAFFIC_ROUTING",
            "VIEW_TAB_GATEWAY_LIST",
            "VIEW_TAB_OPERATOR_PROFILE",
            "ENABLE_HA_STANDBY_PAIR",
            "ENABLE_HA_VELOCLOUD_CLUSTER",
            "ENABLE_HA_VRRP_PAIR",
            "RESTRICT_EDIT_EDGE_WIFI_RADIO_SITE_COUNTRY",
            "MODIFY_NETWORK_CUSTOM_ROLES",
            "MODIFY_ENTERPRISE_CUSTOM_ROLES",
            "MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES",
            "APPLY_ROLE_CUSTOMIZATION_PACKAGE",
            "VIEW_SYSLOG_FORWARDING",
            "VIEW_ENTERPRISE_SENSITIVE_DATA",
            "VIEW_EDGE_ANALYTICS",
            "DOWNLOAD_GATEWAY_DIAGNOSTICS",
            "DOWNLOAD_EDGE_DIAGNOSTICS",
            "VIEW_EDGE_SOURCES",
            "VIEW_STATEFUL_FIREWALL",
            "VIEW_PROFILE_FIREWALL_LOGGING",
            "REMOTE_CLEAR_ARP_CACHE",
            "REMOTE_DNS_DHCP_RESTART",
            "REMOTE_FLUSH_FLOWS",
            "REMOTE_FLUSH_NAT",
            "REMOTE_LIST_PATHS",
            "REMOTE_MIBS_FOR_EDGE",
            "REMOTE_NAT_TABLE_DUMP",
            "REMOTE_SYSTEM_INFO",
            "REMOTE_WAN_LINK_BANDWIDTH_TEST",
            "REMOTE_LIST_CURRENT_IKE_CHILD_SAS",
            "REMOTE_LIST_CURRENT_IKE_SAS",
            "REMOTE_RESET_SFP_FIRMWARE_CONFIGURATION",
            "REMOTE_REBALANCE_HUB_CLUSTER",
            "REMOTE_LTE_SWITCH_SIM_SLOT",
            "MODIFY_EDGE_ACCESS_MODE"
          ]
        },
        "action": {
          "type": "string",
          "enum": [
            "CREATE",
            "READ",
            "UPDATE",
            "DELETE",
            "DOWNLOAD",
            "MANAGE",
            "NONE"
          ]
        },
        "object": {
          "type": "string",
          "enum": [
            "AUTHENTICATION_NETWORK_SERVICE",
            "BASTION_VCO",
            "CLIENT_DEVICE",
            "CLIENT_USER",
            "CLOUD_SECURITY_NETWORK_SERVICE",
            "DIAGNOSTICS",
            "DIAGNOSTIC_BUNDLE",
            "DNS_NETWORK_SERVICE",
            "EDGE",
            "EDGE_BUSINESS_POLICY_RATE_LIMIT",
            "EDGE_CLUSTER_NETWORK_SERVICE",
            "EDGE_DEVICE_AUTHENTICATION_SETTINGS",
            "EDGE_DEVICE_BGP_SETTINGS",
            "EDGE_DEVICE_CLOUD_SECURITY_SERVICE",
            "EDGE_DEVICE_CLOUD_VPN",
            "EDGE_DEVICE_CLOUD_VPN_QOS_SETTINGS",
            "EDGE_DEVICE_DEVICE_SETTINGS",
            "EDGE_DEVICE_HIGH_AVAILABILITY",
            "EDGE_DEVICE_ICMP_PROBES",
            "EDGE_DEVICE_ICMP_RESPONDERS",
            "EDGE_DEVICE_MANAGEMENT_IP",
            "EDGE_DEVICE_MULTICAST_SETTINGS",
            "EDGE_DEVICE_SYSLOG_SETTINGS",
            "EDGE_DEVICE_NETFLOW_SETTINGS",
            "EDGE_DEVICE_NTP_SETTINGS",
            "EDGE_DEVICE_SNMP_SETTINGS",
            "EDGE_DEVICE_VQM_SETTINGS",
            "EDGE_DEVICE_WIFI_SETTINGS",
            "EDGE_DEVICE_CONFIG_VISIBILITY_MODE",
            "EDGE_DEVICE_DNS_SETTINGS",
            "EDGE_FIREWALL_EDGE_ACCESS",
            "EDGE_OVERVIEW_PROFILE",
            "EDGE_OVERVIEW_PROPERTIES",
            "EDGE_OVERVIEW_PROPERTIES_ACTIVATION_EMAIL",
            "EDGE_OVERVIEW_PROPERTIES_ACTIVATION_EXPIRATION",
            "EDGE_OVERVIEW_PROPERTIES_AUTH_MODE",
            "EDGE_OVERVIEW_PROPERTIES_DESCRIPTION",
            "EDGE_OVERVIEW_PROPERTIES_ENABLE_ALERTS",
            "EDGE_OVERVIEW_PROPERTIES_NAME",
            "EDGE_OVERVIEW_PROPERTIES_SERIAL_NUMBER",
            "ENTERPRISE",
            "ENTERPRISE_ALERT",
            "ENTERPRISE_AUTHENTICATION",
            "ENTERPRISE_PROXY_AUTHENTICATION",
            "ENTERPRISE_DELEGATION",
            "ENTERPRISE_EVENT",
            "ENTERPRISE_KEYS",
            "ENTERPRISE_PKI",
            "ENTERPRISE_PROFILE",
            "ENTERPRISE_PROXY_DELEGATION",
            "ENTERPRISE_SEGMENT",
            "ENTERPRISE_USER",
            "GATEWAY",
            "INVENTORY",
            "IAAS_SUBSCRIPTION_NETWORK_SERVICE",
            "LICENSE",
            "NETWORK",
            "NETWORK_ALLOCATION",
            "NETWORK_SEGMENT",
            "NETWORK_SERVICE",
            "NVS_NETWORK_SERVICE",
            "OPERATOR",
            "OPERATOR_ALERT",
            "OPERATOR_AUTHENTICATION",
            "USER_AGREEMENT",
            "OPERATOR_EVENT",
            "OPERATOR_PKI",
            "OPERATOR_PROFILE",
            "OPERATOR_USER",
            "OVERLAY_FLOW_CONTROL",
            "OVERVIEW_PROPERTIES_LOCAL_CREDENTIALS",
            "PCAP_BUNDLE",
            "PRIVATE_NETWORK_NAME_NETWORK_SERVICE",
            "PROFILE",
            "PROFILE_BUSINESS_POLICY_RATE_LIMIT",
            "PROFILE_DEVICE_AUTHENTICATION_SETTINGS",
            "PROFILE_DEVICE_BGP_SETTINGS",
            "PROFILE_DEVICE_CLOUD_SECURITY_SERVICE",
            "PROFILE_DEVICE_CLOUD_VPN",
            "PROFILE_DEVICE_CLOUD_VPN_QOS_SETTINGS",
            "PROFILE_DEVICE_DEVICE_SETTINGS",
            "PROFILE_DEVICE_EDGE_ACCESS",
            "PROFILE_DEVICE_MANAGEMENT_IP",
            "PROFILE_DEVICE_MULTICAST_SETTINGS",
            "PROFILE_DEVICE_SYSLOG_SETTINGS",
            "PROFILE_DEVICE_NETFLOW_SETTINGS",
            "PROFILE_DEVICE_NETWORK_SETTINGS",
            "PROFILE_DEVICE_NTP_SETTINGS",
            "PROFILE_DEVICE_OSPF_SETTINGS",
            "PROFILE_DEVICE_SNMP_SETTINGS",
            "PROFILE_DEVICE_VQM_SETTINGS",
            "PROFILE_DEVICE_WIFI_SETTINGS",
            "PROFILE_DEVICE_CONFIG_VISIBILITY_MODE",
            "PROFILE_DEVICE_DNS_SETTINGS",
            "PROFILE_OVERVIEW_DESCRIPTION",
            "PROXY",
            "PROXY_EVENT",
            "PROXY_USER",
            "REMOTE_ACTIONS",
            "REMOTE_DIAGNOSTICS",
            "REPLICATION",
            "SOFTWARE_PACKAGE",
            "SYSTEM_PROPERTY",
            "SYSTEM_SETTINGS_GENERAL_INFO",
            "SYSTEM_SETTINGS_EDGE_CONFIG",
            "SYSTEM_SETTINGS_PRIVACY_SETTINGS",
            "SYSTEM_SETTINGS_CONTACT_INFO",
            "VCO_DIAGNOSTICS",
            "VNF_NETWORK_SERVICE",
            "VNF_LICENSE_NETWORK_SERVICE",
            "VPN_HUB_NETWORK_SERVICE",
            "ENTERPRISE_TOKEN",
            "OPERATOR_TOKEN",
            "PROXY_TOKEN",
            "ROLE_CUSTOMIZATION_PACKAGE",
            "ENTERPRISE_SECURITY_POLICY",
            "ENTERPRISE_PROXY_PKI",
            "OBJECT_GROUP",
            "EDGE_OVERVIEW",
            "EDGE_BUSINESS_POLICY",
            "EDGE_FIREWALL",
            "PROFILE_OVERVIEW",
            "PROFILE_BUSINESS_POLICY",
            "PROFILE_FIREWALL",
            "EDGE_DEVICE_L2_SETTINGS",
            "PROFILE_DEVICE_L2_SETTINGS",
            "EDGE_DEVICE_BFD_RULES",
            "PROFILE_DEVICE_BFD_RULES",
            "EDGE_DEVICE_LAN_SIDE_NAT_RULES",
            "PROFILE_DEVICE_LAN_SIDE_NAT_RULES",
            "EDGE_DEVICE_STATIC_ROUTE_SETTINGS",
            "EDGE_DEVICE_VRRP_SETTINGS",
            "PROFILE_DEVICE_ANALYTICS_SETTINGS",
            "EDGE_DEVICE_SECURITY_VNF",
            "EDGE_DEVICE_GATEWAY_HANDOFF_ASSIGNMENT",
            "PROFILE_DEVICE_GATEWAY_HANDOFF_ASSIGNMENT",
            "EDGE_DEVICE_INTERFACE_SETTINGS",
            "EDGE_DEVICE_WAN_SETTINGS",
            "PROFILE_DEVICE_INTERFACE_SETTINGS",
            "ENTERPRISE_ALERT_NOTIFICATION",
            "ENTERPRISE_SERVICE_NSD_GATEWAY_BGP",
            "ENTERPRISE_SERVICE_NSD_GATEWAY_BFD",
            "EDGE_FIREWALL_STATEFUL_FIREWALL_SETTINGS",
            "PROFILE_FIREWALL_STATEFUL_FIREWALL_SETTINGS",
            "EDGE_FIREWALL_NETWORK_FLOOD_PROTECTION_SETTINGS",
            "PROFILE_FIREWALL_NETWORK_FLOOD_PROTECTION_SETTINGS",
            "VCO_SERVICE_LICENSE",
            "VCO_AUTHENTICATION_KEYS",
            "OPERATOR_SCOPED_ROLE",
            "MSP_SCOPED_ROLE",
            "ENTERPRISE_SCOPED_ROLE",
            "CWS_SECURITY_POLICY",
            "CWS_WEB_SECURITY_RULES",
            "CWS_CASB_RULES",
            "CWS_CONFIGURATION",
            "CWS_MONITORING",
            "RAS",
            "GATEWAY_DEVICE_SYSLOG_SETTINGS",
            "GATEWAY_MIGRATION",
            "SELF_SSH_KEY",
            "OPERATOR_SSH_KEY",
            "ENTERPRISE_SSH_KEY",
            "PARTNER_SSH_KEY"
          ]
        },
        "isDeny": {
          "type": "integer",
          "enum": [
            0,
            1
          ]
        }
      }
    },
    "get_session_privileges_result": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/granted_privilege"
      }
    },
    "object_group": {
      "allOf": [
        {
          "$ref": "#/definitions/enterprise_object_base"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/object_group_data"
            }
          }
        }
      ]
    },
    "object_group_data": {
      "type": "object"
    },
    "ip_group_object": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP address"
        },
        "mask": {
          "type": "string",
          "description": "Netmask, e.g. 255.255.255.0"
        },
        "rule_type": {
          "type": "string",
          "enum": [
            "exact",
            "prefix",
            "netmask",
            "wildcard"
          ],
          "description": "Rule type"
        }
      },
      "required": [
        "ip",
        "rule_type"
      ]
    },
    "domain_group_object": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Domain name"
        }
      },
      "required": [
        "domain"
      ]
    },
    "address_group_object": {
      "type": "object"
    },
    "address_group": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/address_group_object"
      }
    },
    "port_group_object": {
      "type": "object",
      "properties": {
        "proto": {
          "type": "integer",
          "description": "Integer ID corresponding to a protocol"
        },
        "port_low": {
          "type": "integer",
          "description": "Lower bound of a port range"
        },
        "port_high": {
          "type": "integer",
          "description": "Upper bound of a port range"
        }
      },
      "required": [
        "proto",
        "port_low"
      ]
    },
    "port_group": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/port_group_object"
      }
    },
    "create_api_token_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "api_token_revoke_api_token_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "api_token_get_api_tokens_result": {
      "allOf": [
        {
          "$ref": "#/definitions/api_token"
        }
      ]
    },
    "api_token_get_user_api_tokens_result": {
      "allOf": [
        {
          "$ref": "#/definitions/user_api_tokens"
        }
      ]
    },
    "api_token_download_api_token_result": {
      "allOf": [
        {
          "$ref": "#/definitions/downloaded_api_token"
        }
      ]
    },
    "api_token": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "tokenUuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        },
        "downloaded": {
          "type": "string",
          "format": "date-time"
        },
        "isRevoked": {
          "type": "boolean"
        },
        "createdByEnterpriseUserId": {
          "type": "integer"
        },
        "createdByOperatorUserId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "createdForOperatorUserId": {
          "type": "integer"
        },
        "createdForEnterpriseUserId": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "user_api_tokens": {
      "allOf": [
        {
          "$ref": "#/definitions/api_token"
        },
        {
          "type": "object",
          "properties": {
            "tenantName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "downloaded_api_token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "wifi_radio_channel": {
      "type": "object"
    },
    "wifi_radio_band": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Band frequency 2.4 or 5"
        },
        "supportedChannels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/wifi_radio_channel"
          }
        }
      }
    },
    "get_supported_wifi_channels_result": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/wifi_radio_band"
      }
    },
    "get_network_cloneable_enterprises_result_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "gatewayPoolId": {
          "type": "integer"
        },
        "configurationId": {
          "type": "integer"
        },
        "enableEnterpriseDelegationToOperator": {
          "type": "boolean"
        },
        "enableEnterpriseUserManagementDelegationToOperator": {
          "type": "boolean"
        },
        "endpointPkiMode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_DISABLED",
            "CERTIFICATE_OPTIONAL",
            "CERTIFICATE_REQUIRED"
          ]
        },
        "enableExportRestriction": {
          "type": "boolean"
        },
        "edgeLicenseIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "id",
        "name",
        "gatewayPoolId",
        "configurationId",
        "enableEnterpriseDelegationToOperator",
        "enableEnterpriseUserManagementDelegationToOperator",
        "endpointPkiMode"
      ]
    },
    "get_enterprise_proxy_cloneable_enterprises_result_item": {
      "allOf": [
        {
          "$ref": "#/definitions/get_network_cloneable_enterprises_result_item"
        },
        {
          "type": "object",
          "properties": {
            "enableEnterpriseDelegationToProxy": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "upstream_api_response": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "contentType": {
          "type": "string"
        },
        "responseData": {
          "type": "string"
        }
      }
    },
    "iaas_vendor_credentials": {
      "type": "object"
    },
    "microsoft_azure_client_credentials": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        }
      }
    },
    "zscaler_cloud_subscription_credentials": {
      "type": "object",
      "properties": {
        "apiHost": {
          "type": "string"
        },
        "apiToken": {
          "type": "string"
        },
        "apiPath": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      },
      "required": [
        "apiHost",
        "apiToken",
        "username",
        "password",
        "domain"
      ]
    },
    "role_update_role_customization_package_result": {
      "allOf": [
        {
          "$ref": "#/definitions/rows_modified_confirmation"
        }
      ]
    },
    "get_role_customization_effective_privilege_result_object": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "integer"
        },
        "userType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/granted_privilege"
          }
        }
      }
    },
    "get_role_customization_privileges_result_object": {
      "type": "object",
      "properties": {
        "roleId": {
          "type": "integer"
        },
        "userType": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/granted_privilege"
          }
        },
        "effectivePrivileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/granted_privilege"
          }
        }
      }
    },
    "get_role_customization_privileges_result": {
      "type": "object",
      "properties": {
        "packageName": {
          "type": "string"
        },
        "packageDescription": {
          "type": "string"
        },
        "level": {
          "type": "object",
          "properties": {
            "enterpriseId": {
              "type": "integer"
            },
            "enterpriseProxyId": {
              "type": "integer"
            },
            "networkId": {
              "type": "integer"
            }
          }
        },
        "definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/get_role_customization_privileges_result_object"
          }
        }
      }
    },
    "get_role_customization_effective_privilege_result": {
      "type": "object",
      "properties": {
        "packageName": {
          "type": "string"
        },
        "packageDescription": {
          "type": "string"
        },
        "definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/get_role_customization_effective_privilege_result_object"
          }
        }
      }
    },
    "role_apply_role_customization_result_object": {
      "type": "object",
      "properties": {
        "forRoleId": {
          "type": "integer"
        },
        "addPrivileges": {
          "type": "object",
          "properties": {
            "customRoleId": {
              "type": "integer"
            },
            "roleCustomizationId": {
              "type": "integer"
            },
            "insertedPrivileges": {
              "type": "integer"
            }
          }
        },
        "removePrivileges": {
          "type": "object",
          "properties": {
            "deletedPrivileges": {
              "type": "integer"
            },
            "deletedRoleCustomizations": {
              "type": "integer"
            },
            "deletedRoles": {
              "type": "integer"
            },
            "deletedRoleCustomizationAssoc": {
              "type": "integer"
            },
            "roleCustomizationId": {
              "type": "integer"
            }
          }
        }
      }
    },
    "role_apply_role_customization_package_result": {
      "type": "object",
      "properties": {
        "customizationResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/role_apply_role_customization_result_object"
          }
        }
      }
    },
    "enterprise_get_enterprise_network_overview_info_result": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "minimum": 0
            },
            "activated": {
              "type": "integer",
              "minimum": 0
            },
            "connected": {
              "type": "integer",
              "minimum": 0
            },
            "degraded": {
              "type": "integer",
              "minimum": 0
            },
            "down": {
              "type": "integer",
              "minimum": 0
            },
            "upToDate": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "hubs": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "minimum": 0
            },
            "activated": {
              "type": "integer",
              "minimum": 0
            },
            "connected": {
              "type": "integer",
              "minimum": 0
            },
            "degraded": {
              "type": "integer",
              "minimum": 0
            },
            "down": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "links": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "minimum": 0
            },
            "stable": {
              "type": "integer",
              "minimum": 0
            },
            "unstable": {
              "type": "integer",
              "minimum": 0
            },
            "down": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "hubLinks": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "minimum": 0
            },
            "stable": {
              "type": "integer",
              "minimum": 0
            },
            "unstable": {
              "type": "integer",
              "minimum": 0
            },
            "down": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "vnfs": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "minimum": 0
            },
            "on": {
              "type": "integer",
              "minimum": 0
            },
            "off": {
              "type": "integer",
              "minimum": 0
            },
            "error": {
              "type": "integer",
              "minimum": 0
            }
          }
        },
        "ha": {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "minimum": 0
            },
            "pending": {
              "type": "integer",
              "minimum": 0
            },
            "ready": {
              "type": "integer",
              "minimum": 0
            },
            "failed": {
              "type": "integer",
              "minimum": 0
            }
          }
        }
      }
    },
    "insert_or_update_rate_limit_request_value": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SYSTEM",
            "OPERATOR_USER",
            "ENTERPRISE_USER",
            "MSP_USER",
            "ENTERPRISE",
            "PROXY"
          ]
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "match": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "ALL",
                      "METHOD",
                      "METHOD_PREFIX"
                    ]
                  },
                  "value": {
                    "type": "string"
                  }
                }
              },
              "rules": {
                "type": "object"
              }
            }
          }
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "enterprise_assign_enterprise_operator_configurations_result_item": {
      "type": "object",
      "properties": {
        "configurationAssociationId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "isTemplate": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "logicalId": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "configurationType": {
          "type": "string",
          "enum": [
            "NETWORK_BASED",
            "SEGMENT_BASED"
          ]
        },
        "bastionState": {
          "type": "string",
          "enum": [
            "UNCONFIGURED",
            "STAGE_REQUESTED",
            "UNSTAGE_REQUESTED",
            "STAGED",
            "UNSTAGED"
          ]
        },
        "schemaVersion": {
          "type": "string"
        },
        "effective": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "set_default_enterprise_operator_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/insertion_confirmation"
        }
      ]
    },
    "enterprise_get_enterprises_with_property_request": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "enterpriseIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "enterprise_get_enterprises_with_property_response": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/enterprise"
      }
    },
    "add_enterprise_operator_configuration_request": {
      "type": "object",
      "properties": {
        "configurationId": {
          "type": "integer"
        },
        "enterpriseIds": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "required": [
        "configurationId",
        "enterpriseIds"
      ]
    },
    "add_enterprise_operator_configuration_response": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "integer"
        }
      }
    },
    "nullable_privilege": {
      "type": "string",
      "enum": [
        "EDIT_RESTRICTED_SYSTEM_PROPERTIES",
        "VIEW_USER_IDENTIFIABLE_FLOW_STATS",
        "VIEW_FLOW_STATS",
        "VIEW_PATH_STATS",
        "CREATE_DMZ_GATEWAY",
        "CONFIGURE_EDGE_FIREWALL_LOGGING",
        "CONFIGURE_PROFILE_FIREWALL_LOGGING",
        "DUPLICATE_ENTERPRISE_PROFILE",
        "VIEW_FIREWALL_LOGS",
        "ASSIGN_EDGE_PROFILE",
        "VIEW_ENTERPRISE_ROUTING",
        "SHUTDOWN_EDGE",
        "DEACTIVATE_EDGE",
        "UPDATE_CUSTOMER_SMS_ALERT",
        "REMOTE_RESET_USB_MODEM",
        "REMOTE_SCAN_FOR_WIFI_ACCESS_POINTS",
        "REMOTE_VPN_TEST",
        "REMOTE_CLOUD_TRAFFIC_ROUTING",
        "VIEW_TAB_GATEWAY_LIST",
        "VIEW_TAB_OPERATOR_PROFILE",
        "ENABLE_HA_STANDBY_PAIR",
        "ENABLE_HA_VELOCLOUD_CLUSTER",
        "ENABLE_HA_VRRP_PAIR",
        "RESTRICT_EDIT_EDGE_WIFI_RADIO_SITE_COUNTRY",
        "MODIFY_NETWORK_CUSTOM_ROLES",
        "MODIFY_ENTERPRISE_CUSTOM_ROLES",
        "MODIFY_ENTERPRISE_PROXY_CUSTOM_ROLES",
        "APPLY_ROLE_CUSTOMIZATION_PACKAGE",
        "VIEW_SYSLOG_FORWARDING",
        "VIEW_ENTERPRISE_SENSITIVE_DATA",
        "VIEW_EDGE_ANALYTICS",
        "DOWNLOAD_GATEWAY_DIAGNOSTICS",
        "DOWNLOAD_EDGE_DIAGNOSTICS",
        "VIEW_EDGE_SOURCES",
        "VIEW_STATEFUL_FIREWALL",
        "VIEW_PROFILE_FIREWALL_LOGGING",
        "REMOTE_CLEAR_ARP_CACHE",
        "REMOTE_DNS_DHCP_RESTART",
        "REMOTE_FLUSH_FLOWS",
        "REMOTE_FLUSH_NAT",
        "REMOTE_LIST_PATHS",
        "REMOTE_MIBS_FOR_EDGE",
        "REMOTE_NAT_TABLE_DUMP",
        "REMOTE_SYSTEM_INFO",
        "REMOTE_WAN_LINK_BANDWIDTH_TEST",
        "REMOTE_LIST_CURRENT_IKE_CHILD_SAS",
        "REMOTE_LIST_CURRENT_IKE_SAS",
        "REMOTE_RESET_SFP_FIRMWARE_CONFIGURATION",
        "REMOTE_REBALANCE_HUB_CLUSTER",
        "REMOTE_LTE_SWITCH_SIM_SLOT",
        "MODIFY_EDGE_ACCESS_MODE"
      ]
    },
    "eligible_privilege_object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the privilege record"
        },
        "object": {
          "type": "string",
          "enum": [
            "AUTHENTICATION_NETWORK_SERVICE",
            "BASTION_VCO",
            "CLIENT_DEVICE",
            "CLIENT_USER",
            "CLOUD_SECURITY_NETWORK_SERVICE",
            "DIAGNOSTICS",
            "DIAGNOSTIC_BUNDLE",
            "DNS_NETWORK_SERVICE",
            "EDGE",
            "EDGE_BUSINESS_POLICY_RATE_LIMIT",
            "EDGE_CLUSTER_NETWORK_SERVICE",
            "EDGE_DEVICE_AUTHENTICATION_SETTINGS",
            "EDGE_DEVICE_BGP_SETTINGS",
            "EDGE_DEVICE_CLOUD_SECURITY_SERVICE",
            "EDGE_DEVICE_CLOUD_VPN",
            "EDGE_DEVICE_CLOUD_VPN_QOS_SETTINGS",
            "EDGE_DEVICE_DEVICE_SETTINGS",
            "EDGE_DEVICE_HIGH_AVAILABILITY",
            "EDGE_DEVICE_ICMP_PROBES",
            "EDGE_DEVICE_ICMP_RESPONDERS",
            "EDGE_DEVICE_MANAGEMENT_IP",
            "EDGE_DEVICE_MULTICAST_SETTINGS",
            "EDGE_DEVICE_SYSLOG_SETTINGS",
            "EDGE_DEVICE_NETFLOW_SETTINGS",
            "EDGE_DEVICE_NTP_SETTINGS",
            "EDGE_DEVICE_SNMP_SETTINGS",
            "EDGE_DEVICE_VQM_SETTINGS",
            "EDGE_DEVICE_WIFI_SETTINGS",
            "EDGE_DEVICE_CONFIG_VISIBILITY_MODE",
            "EDGE_DEVICE_DNS_SETTINGS",
            "EDGE_FIREWALL_EDGE_ACCESS",
            "EDGE_OVERVIEW_PROFILE",
            "EDGE_OVERVIEW_PROPERTIES",
            "EDGE_OVERVIEW_PROPERTIES_ACTIVATION_EMAIL",
            "EDGE_OVERVIEW_PROPERTIES_ACTIVATION_EXPIRATION",
            "EDGE_OVERVIEW_PROPERTIES_AUTH_MODE",
            "EDGE_OVERVIEW_PROPERTIES_DESCRIPTION",
            "EDGE_OVERVIEW_PROPERTIES_ENABLE_ALERTS",
            "EDGE_OVERVIEW_PROPERTIES_NAME",
            "EDGE_OVERVIEW_PROPERTIES_SERIAL_NUMBER",
            "ENTERPRISE",
            "ENTERPRISE_ALERT",
            "ENTERPRISE_AUTHENTICATION",
            "ENTERPRISE_PROXY_AUTHENTICATION",
            "ENTERPRISE_DELEGATION",
            "ENTERPRISE_EVENT",
            "ENTERPRISE_KEYS",
            "ENTERPRISE_PKI",
            "ENTERPRISE_PROFILE",
            "ENTERPRISE_PROXY_DELEGATION",
            "ENTERPRISE_SEGMENT",
            "ENTERPRISE_USER",
            "GATEWAY",
            "INVENTORY",
            "IAAS_SUBSCRIPTION_NETWORK_SERVICE",
            "LICENSE",
            "NETWORK",
            "NETWORK_ALLOCATION",
            "NETWORK_SEGMENT",
            "NETWORK_SERVICE",
            "NVS_NETWORK_SERVICE",
            "OPERATOR",
            "OPERATOR_ALERT",
            "OPERATOR_AUTHENTICATION",
            "USER_AGREEMENT",
            "OPERATOR_EVENT",
            "OPERATOR_PKI",
            "OPERATOR_PROFILE",
            "OPERATOR_USER",
            "OVERLAY_FLOW_CONTROL",
            "OVERVIEW_PROPERTIES_LOCAL_CREDENTIALS",
            "PCAP_BUNDLE",
            "PRIVATE_NETWORK_NAME_NETWORK_SERVICE",
            "PROFILE",
            "PROFILE_BUSINESS_POLICY_RATE_LIMIT",
            "PROFILE_DEVICE_AUTHENTICATION_SETTINGS",
            "PROFILE_DEVICE_BGP_SETTINGS",
            "PROFILE_DEVICE_CLOUD_SECURITY_SERVICE",
            "PROFILE_DEVICE_CLOUD_VPN",
            "PROFILE_DEVICE_CLOUD_VPN_QOS_SETTINGS",
            "PROFILE_DEVICE_DEVICE_SETTINGS",
            "PROFILE_DEVICE_EDGE_ACCESS",
            "PROFILE_DEVICE_MANAGEMENT_IP",
            "PROFILE_DEVICE_MULTICAST_SETTINGS",
            "PROFILE_DEVICE_SYSLOG_SETTINGS",
            "PROFILE_DEVICE_NETFLOW_SETTINGS",
            "PROFILE_DEVICE_NETWORK_SETTINGS",
            "PROFILE_DEVICE_NTP_SETTINGS",
            "PROFILE_DEVICE_OSPF_SETTINGS",
            "PROFILE_DEVICE_SNMP_SETTINGS",
            "PROFILE_DEVICE_VQM_SETTINGS",
            "PROFILE_DEVICE_WIFI_SETTINGS",
            "PROFILE_DEVICE_CONFIG_VISIBILITY_MODE",
            "PROFILE_DEVICE_DNS_SETTINGS",
            "PROFILE_OVERVIEW_DESCRIPTION",
            "PROXY",
            "PROXY_EVENT",
            "PROXY_USER",
            "REMOTE_ACTIONS",
            "REMOTE_DIAGNOSTICS",
            "REPLICATION",
            "SOFTWARE_PACKAGE",
            "SYSTEM_PROPERTY",
            "SYSTEM_SETTINGS_GENERAL_INFO",
            "SYSTEM_SETTINGS_EDGE_CONFIG",
            "SYSTEM_SETTINGS_PRIVACY_SETTINGS",
            "SYSTEM_SETTINGS_CONTACT_INFO",
            "VCO_DIAGNOSTICS",
            "VNF_NETWORK_SERVICE",
            "VNF_LICENSE_NETWORK_SERVICE",
            "VPN_HUB_NETWORK_SERVICE",
            "ENTERPRISE_TOKEN",
            "OPERATOR_TOKEN",
            "PROXY_TOKEN",
            "ROLE_CUSTOMIZATION_PACKAGE",
            "ENTERPRISE_SECURITY_POLICY",
            "ENTERPRISE_PROXY_PKI",
            "OBJECT_GROUP",
            "EDGE_OVERVIEW",
            "EDGE_BUSINESS_POLICY",
            "EDGE_FIREWALL",
            "PROFILE_OVERVIEW",
            "PROFILE_BUSINESS_POLICY",
            "PROFILE_FIREWALL",
            "EDGE_DEVICE_L2_SETTINGS",
            "PROFILE_DEVICE_L2_SETTINGS",
            "EDGE_DEVICE_BFD_RULES",
            "PROFILE_DEVICE_BFD_RULES",
            "EDGE_DEVICE_LAN_SIDE_NAT_RULES",
            "PROFILE_DEVICE_LAN_SIDE_NAT_RULES",
            "EDGE_DEVICE_STATIC_ROUTE_SETTINGS",
            "EDGE_DEVICE_VRRP_SETTINGS",
            "PROFILE_DEVICE_ANALYTICS_SETTINGS",
            "EDGE_DEVICE_SECURITY_VNF",
            "EDGE_DEVICE_GATEWAY_HANDOFF_ASSIGNMENT",
            "PROFILE_DEVICE_GATEWAY_HANDOFF_ASSIGNMENT",
            "EDGE_DEVICE_INTERFACE_SETTINGS",
            "EDGE_DEVICE_WAN_SETTINGS",
            "PROFILE_DEVICE_INTERFACE_SETTINGS",
            "ENTERPRISE_ALERT_NOTIFICATION",
            "ENTERPRISE_SERVICE_NSD_GATEWAY_BGP",
            "ENTERPRISE_SERVICE_NSD_GATEWAY_BFD",
            "EDGE_FIREWALL_STATEFUL_FIREWALL_SETTINGS",
            "PROFILE_FIREWALL_STATEFUL_FIREWALL_SETTINGS",
            "EDGE_FIREWALL_NETWORK_FLOOD_PROTECTION_SETTINGS",
            "PROFILE_FIREWALL_NETWORK_FLOOD_PROTECTION_SETTINGS",
            "VCO_SERVICE_LICENSE",
            "VCO_AUTHENTICATION_KEYS",
            "OPERATOR_SCOPED_ROLE",
            "MSP_SCOPED_ROLE",
            "ENTERPRISE_SCOPED_ROLE",
            "CWS_SECURITY_POLICY",
            "CWS_WEB_SECURITY_RULES",
            "CWS_CASB_RULES",
            "CWS_CONFIGURATION",
            "CWS_MONITORING",
            "RAS",
            "GATEWAY_DEVICE_SYSLOG_SETTINGS",
            "GATEWAY_MIGRATION",
            "SELF_SSH_KEY",
            "OPERATOR_SSH_KEY",
            "ENTERPRISE_SSH_KEY",
            "PARTNER_SSH_KEY"
          ]
        },
        "action": {
          "type": "string",
          "enum": [
            "CREATE",
            "READ",
            "UPDATE",
            "DELETE",
            "DOWNLOAD",
            "MANAGE",
            "NONE"
          ]
        },
        "privilege": {
          "$ref": "#/definitions/nullable_privilege"
        },
        "isDeny": {
          "type": "integer",
          "enum": [
            0,
            1
          ]
        },
        "isAssociated": {
          "type": "integer",
          "enum": [
            0,
            1
          ],
          "description": "Indicates whether privilege is associated with the role"
        }
      }
    },
    "eligible_privileges_result": {
      "type": "object",
      "properties": {
        "allowPrivileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eligible_privilege_object"
          }
        },
        "denyPrivileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eligible_privilege_object"
          }
        }
      }
    },
    "role_customization_definition": {
      "type": "object",
      "properties": {
        "forRoleId": {
          "type": "integer"
        },
        "addPrivileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/granted_privilege"
          }
        },
        "removePrivileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/granted_privilege"
          }
        }
      },
      "required": [
        "forRoleId"
      ]
    },
    "role_customization_package": {
      "type": "object",
      "properties": {
        "enterpriseId": {
          "type": "integer"
        },
        "enterpriseProxyId": {
          "type": "integer"
        },
        "networkId": {
          "type": "integer"
        },
        "roleCustomizations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/role_customization_definition"
          }
        }
      }
    },
    "role_customization_object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "forRoleId": {
          "type": "integer"
        },
        "roleName": {
          "type": "string"
        },
        "roleId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "isSystemCustomization": {
          "type": "integer",
          "enum": [
            0,
            1
          ]
        }
      }
    },
    "role_customizations_list": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/role_customization_object"
      }
    },
    "role_insert_role_customization_package_result": {
      "$ref": "#/definitions/application_metadata"
    },
    "path_metric": {
      "enum": [
        "bytesRx",
        "bytesTx",
        "totalBytes",
        "packetsRx",
        "packetsTx",
        "totalPackets",
        "p1BytesRx",
        "p1BytesTx",
        "p1PacketsRx",
        "p1PacketsTx",
        "p2BytesRx",
        "p2BytesTx",
        "p2PacketsRx",
        "p2PacketsTx",
        "p3BytesRx",
        "p3BytesTx",
        "p3PacketsRx",
        "p3PacketsTx",
        "controlBytesRx",
        "controlBytesTx",
        "controlPacketsRx",
        "controlPacketsTx",
        "bpsRx",
        "bpsRxMin",
        "bpsRxMax",
        "bpsTx",
        "bpsTxMin",
        "bpsTxMax",
        "latencyRx",
        "latencyRxMin",
        "latencyRxMax",
        "latencyTx",
        "latencyTxMin",
        "latencyTxMax",
        "jitterRx",
        "jitterRxMin",
        "jitterRxMax",
        "jitterTx",
        "jitterTxMin",
        "jitterTxMax",
        "packetLossRx",
        "packetLossRxMin",
        "packetLossRxMax",
        "packetLossTx",
        "packetLossTxMin",
        "packetLossTxMax",
        "scoreBeforeVoice",
        "scoreBeforeVideo",
        "scoreBeforeTrans",
        "scoreAfterVoice",
        "scoreAfterVideo",
        "scoreAfterTrans"
      ],
      "type": "string"
    },
    "path_metrics": {
      "items": {
        "$ref": "#/definitions/path_metric"
      },
      "type": "array"
    },
    "path_metrics_object": {
      "properties": {
        "bytesRx": {
          "type": "integer"
        },
        "bytesTx": {
          "type": "integer"
        },
        "totalBytes": {
          "type": "integer"
        },
        "packetsRx": {
          "type": "integer"
        },
        "packetsTx": {
          "type": "integer"
        },
        "totalPackets": {
          "type": "integer"
        },
        "p1BytesRx": {
          "type": "integer"
        },
        "p1BytesTx": {
          "type": "integer"
        },
        "p1PacketsRx": {
          "type": "integer"
        },
        "p1PacketsTx": {
          "type": "integer"
        },
        "p2BytesRx": {
          "type": "integer"
        },
        "p2BytesTx": {
          "type": "integer"
        },
        "p2PacketsRx": {
          "type": "integer"
        },
        "p2PacketsTx": {
          "type": "integer"
        },
        "p3BytesRx": {
          "type": "integer"
        },
        "p3BytesTx": {
          "type": "integer"
        },
        "p3PacketsRx": {
          "type": "integer"
        },
        "p3PacketsTx": {
          "type": "integer"
        },
        "controlBytesRx": {
          "type": "integer"
        },
        "controlBytesTx": {
          "type": "integer"
        },
        "controlPacketsRx": {
          "type": "integer"
        },
        "controlPacketsTx": {
          "type": "integer"
        },
        "bpsRx": {
          "type": "integer"
        },
        "bpsRxMin": {
          "type": "integer"
        },
        "bpsRxMax": {
          "type": "integer"
        },
        "bpsTx": {
          "type": "integer"
        },
        "bpsTxMin": {
          "type": "integer"
        },
        "bpsTxMax": {
          "type": "integer"
        },
        "latencyRx": {
          "type": "integer"
        },
        "latencyRxMin": {
          "type": "integer"
        },
        "latencyRxMax": {
          "type": "integer"
        },
        "latencyTx": {
          "type": "integer"
        },
        "latencyTxMin": {
          "type": "integer"
        },
        "latencyTxMax": {
          "type": "integer"
        },
        "jitterRx": {
          "type": "integer"
        },
        "jitterRxMin": {
          "type": "integer"
        },
        "jitterRxMax": {
          "type": "integer"
        },
        "jitterTx": {
          "type": "integer"
        },
        "jitterTxMin": {
          "type": "integer"
        },
        "jitterTxMax": {
          "type": "integer"
        },
        "packetLossRx": {
          "type": "number",
          "format": "double"
        },
        "packetLossRxMin": {
          "type": "number",
          "format": "double"
        },
        "packetLossRxMax": {
          "type": "number",
          "format": "double"
        },
        "packetLossTx": {
          "type": "number",
          "format": "double"
        },
        "packetLossTxMin": {
          "type": "number",
          "format": "double"
        },
        "packetLossTxMax": {
          "type": "number",
          "format": "double"
        },
        "scoreBeforeVoice": {
          "type": "number",
          "format": "double"
        },
        "scoreBeforeVideo": {
          "type": "number",
          "format": "double"
        },
        "scoreBeforeTrans": {
          "type": "number",
          "format": "double"
        },
        "scoreAfterVoice": {
          "type": "number",
          "format": "double"
        },
        "scoreAfterVideo": {
          "type": "number",
          "format": "double"
        },
        "scoreAfterTrans": {
          "type": "number",
          "format": "double"
        }
      },
      "type": "object"
    },
    "get_edge_sdwan_peer_path_metrics_path": {
      "properties": {
        "status": {
          "type": "string"
        },
        "source": {
          "type": "object",
          "properties": {
            "linkLogicalId": {
              "type": "string"
            },
            "linkName": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            },
            "deviceLogicalId": {
              "type": "string"
            }
          }
        },
        "destination": {
          "type": "object",
          "properties": {
            "linkLogicalId": {
              "type": "string"
            },
            "linkName": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            },
            "deviceLogicalId": {
              "type": "string"
            }
          }
        },
        "metrics": {
          "$ref": "#/definitions/path_metrics_object"
        }
      },
      "type": "object"
    },
    "get_edge_sdwan_peers_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "edge_get_edge_sdwan_peers_result_item": {
      "type": "object",
      "properties": {
        "edgeLogicalId": {
          "type": "string"
        },
        "deviceLogicalId": {
          "type": "string"
        },
        "peerName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "peerType": {
          "type": "string",
          "enum": [
            "BRANCH",
            "HUB",
            "GATEWAY"
          ]
        },
        "scoreAfterVoice": {
          "type": "number",
          "format": "double"
        },
        "scoreAfterVideo": {
          "type": "number",
          "format": "double"
        },
        "scoreAfterTrans": {
          "type": "number",
          "format": "double"
        },
        "pathStatusCount": {
          "type": "object",
          "properties": {
            "stable": {
              "type": "integer"
            },
            "unstable": {
              "type": "integer"
            },
            "standby": {
              "type": "integer"
            },
            "dead": {
              "type": "integer"
            },
            "unknown": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            }
          }
        },
        "pathQoe": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "metrics_get_edge_sdwan_peer_path_metrics_result": {
      "type": "object",
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/get_edge_sdwan_peer_path_metrics_path"
          },
          "type": "array"
        },
        "_aggregate": {
          "properties": {
            "dataVol": {
              "type": "integer"
            },
            "bytesTx": {
              "type": "integer"
            },
            "bytesRx": {
              "type": "integer"
            },
            "packetsTx": {
              "type": "integer"
            },
            "packetsRx": {
              "type": "integer"
            }
          },
          "type": "object"
        }
      }
    },
    "metrics_get_edge_sdwan_peer_path_series_result_item": {
      "type": "object",
      "properties": {
        "source": {
          "type": "object",
          "properties": {
            "linkLogicalId": {
              "type": "string"
            },
            "linkName": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            },
            "deviceLogicalId": {
              "type": "string"
            }
          }
        },
        "destination": {
          "type": "object",
          "properties": {
            "linkLogicalId": {
              "type": "string"
            },
            "linkName": {
              "type": "string"
            },
            "deviceName": {
              "type": "string"
            },
            "deviceLogicalId": {
              "type": "string"
            }
          }
        },
        "timeSeries": {
          "items": {
            "$ref": "#/definitions/time_series"
          },
          "type": "array"
        }
      }
    },
    "system_get_version_info_result_item": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "build": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        }
      }
    },
    "enterprise_get_enterprise_operator_configuration_result": {
      "allOf": [
        {
          "$ref": "#/definitions/model_configuration"
        },
        {
          "required": [
            "configurationType",
            "created",
            "description",
            "effective",
            "id",
            "logicalId",
            "modified",
            "name",
            "schemaVersion",
            "version",
            "bastionState"
          ]
        }
      ]
    },
    "configuration_update_application_map_content_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "logicalId": {
            "type": "string"
          }
        }
      }
    },
    "configuration_update_application_map_profiles_result": {
      "type": "object",
      "properties": {
        "profiles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "logicalId": {
                "type": "string"
              },
              "metaDataVersion": {
                "type": "string"
              },
              "data": {
                "type": "string"
              },
              "moduleId": {
                "type": "integer"
              },
              "moduleVersion": {
                "type": "string"
              }
            }
          }
        },
        "enterprises": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "logicalId": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "vco_management_item": {
      "type": "object",
      "properties": {
        "vcoStatus": {
          "type": "string",
          "enum": [
            "NONE",
            "ACTIVATED",
            "ACTIVATION_FAILED",
            "ACTIVE",
            "INACTIVE"
          ]
        },
        "lastSuccessfulHeartbeat": {
          "type": "string",
          "format": "date-time"
        },
        "vcoAddress": {
          "type": "string"
        },
        "vcoSourceIp": {
          "type": "string"
        },
        "vcoType": {
          "type": "string",
          "enum": [
            "MANAGING",
            "MANAGED",
            "BASTION_PRIVATE",
            "BASTION_PUBLIC"
          ]
        }
      }
    },
    "nullable_vco_management_type_mode": {
      "type": "string",
      "enum": [
        "MANAGING",
        "MANAGED",
        "BASTION_PRIVATE",
        "BASTION_PUBLIC"
      ]
    },
    "bastion_state_numbers": {
      "type": "object",
      "properties": {
        "total": {
          "type": "number"
        },
        "unconfigured": {
          "type": "number"
        },
        "stage_requested": {
          "type": "number"
        },
        "staged": {
          "type": "number"
        },
        "unstage_requested": {
          "type": "number"
        },
        "unstaged": {
          "type": "number"
        },
        "promotion_requested": {
          "type": "number"
        },
        "promotion_pending": {
          "type": "number"
        },
        "promoted": {
          "type": "number"
        }
      }
    },
    "entity_bastion_state_numbers": {
      "type": "object",
      "properties": {
        "edges": {
          "$ref": "#/definitions/bastion_state_numbers"
        },
        "gateways": {
          "$ref": "#/definitions/bastion_state_numbers"
        }
      }
    },
    "enterprise_service_license": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "ztnad_service_license": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "maxPops": {
          "type": "integer"
        }
      }
    },
    "get_enterprise_service_license_result": {
      "type": "object",
      "properties": {
        "SDWAN": {
          "$ref": "#/definitions/enterprise_service_license"
        },
        "CWS": {
          "$ref": "#/definitions/enterprise_service_license"
        },
        "ZTNAD": {
          "$ref": "#/definitions/ztnad_service_license"
        }
      }
    },
    "get_bastion_state_result": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/nullable_vco_management_type_mode"
        },
        "vco": {
          "$ref": "#/definitions/vco_management_item"
        },
        "entityStatus": {
          "$ref": "#/definitions/entity_bastion_state_numbers"
        }
      }
    },
    "bastion_vco_ping_response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "set_enterprise_service_license_result": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "rows": {
          "type": "integer"
        }
      }
    },
    "get_migration_gateways_result": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "original": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "ipAddress": {
                "type": "string"
              },
              "state": {
                "type": "string",
                "enum": [
                  "NEVER_ACTIVATED",
                  "DEGRADED",
                  "QUIESCED",
                  "DISABLED",
                  "OUT_OF_SERVICE",
                  "CONNECTED",
                  "OFFLINE"
                ]
              },
              "site": {
                "$ref": "#/definitions/site"
              }
            }
          },
          "replacement": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "ipAddress": {
                "type": "string"
              },
              "site": {
                "$ref": "#/definitions/site"
              }
            }
          },
          "isSuperGateway": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          },
          "migrationDate": {
            "type": "integer"
          }
        },
        "required": [
          "original",
          "replacement",
          "status",
          "migrationDate"
        ]
      }
    },
    "get_migration_actions_result": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "gatewayId": {
          "type": "integer"
        },
        "enterpriseObjectId": {
          "type": "integer"
        },
        "enterpriseId": {
          "type": "integer"
        },
        "edgeId": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "statusHistory": {
          "type": "string"
        },
        "gatewayName": {
          "type": "string"
        },
        "gatewayIpAddress": {
          "type": "string"
        },
        "gatewayState": {
          "type": "string",
          "enum": [
            "NEVER_ACTIVATED",
            "DEGRADED",
            "QUIESCED",
            "DISABLED",
            "OUT_OF_SERVICE",
            "CONNECTED",
            "OFFLINE"
          ]
        }
      }
    },
    "verify_nsd_tunnels_result": {
      "type": "object",
      "properties": {
        "tunnelVerified": {
          "type": "boolean"
        }
      }
    },
    "data_center_bgp_filter_set": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "data_center_bgp_neighbor": {
      "type": "object",
      "properties": {
        "neighborAS": {
          "type": "string"
        },
        "neighborIp": {
          "type": "string"
        },
        "defaultRoute": {
          "type": "boolean"
        },
        "enableBfd": {
          "type": "boolean"
        },
        "inboundFilter": {
          "$ref": "#/definitions/data_center_bgp_filter_set"
        },
        "outboundFilter": {
          "$ref": "#/definitions/data_center_bgp_filter_set"
        },
        "allowAS": {
          "type": "boolean"
        },
        "localIP": {
          "type": "string"
        },
        "connect": {
          "type": "string"
        },
        "maxHop": {
          "type": "string"
        },
        "holdtime": {
          "type": "string"
        },
        "keepalive": {
          "type": "string"
        },
        "enableMd5": {
          "type": "boolean"
        },
        "md5Password": {
          "type": "string"
        }
      }
    },
    "imageManifest": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              }
            }
          }
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "deviceType": {
          "type": "string"
        },
        "buildNumber": {
          "type": "string"
        },
        "buildType": {
          "type": "string"
        },
        "deviceFamily": {
          "type": "string"
        },
        "deviceCategory": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "updateType": {
          "type": "string"
        },
        "digestAlgorithm": {
          "type": "string"
        }
      }
    },
    "imageUploadDetails": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "storageType": {
          "type": "string"
        }
      }
    },
    "image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "blobId": {
          "type": "integer"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "buildNumber": {
          "type": "string"
        },
        "buildType": {
          "type": "string"
        },
        "deprecated": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "updateType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "downloadUrl": {
          "type": "string"
        },
        "downloadToken": {
          "type": "string"
        },
        "deviceFamily": {
          "type": "string"
        },
        "deviceCategory": {
          "type": "string"
        },
        "uploadDetails": {
          "$ref": "#/definitions/imageUploadDetails"
        },
        "manifest": {
          "$ref": "#/definitions/imageManifest"
        }
      }
    },
    "image_get_image_update_list_result": {
      "title": "image_get_image_update_list_result",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/image"
          }
        },
        "metaData": {
          "$ref": "#/definitions/list_metadata"
        },
        "count": {
          "$ref": "#/definitions/count_result"
        }
      }
    },
    "image_get_image_update_list_filters": {
      "$ref": "#/definitions/api_filters"
    },
    "get_secure_edge_access_mode": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        }
      }
    },
    "insert_or_update_secure_edge_access_mode": {
      "type": "object",
      "properties": {
        "enterpriseId": {
          "type": "integer"
        },
        "mode": {
          "type": "string",
          "enum": [
            "PASSWORD",
            "SSH_KEY"
          ]
        }
      }
    },
    "insert_or_update_secure_edge_access_mode_result": {
      "type": "object",
      "properties": {
        "rows": {
          "description": "The number of rows modified",
          "type": "integer"
        }
      }
    },
    "get_ssh_keys_object": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "duration": {
          "type": "string",
          "format": "date-time"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "get_ssh_keys": {
      "allOf": [
        {
          "$ref": "#/definitions/get_ssh_keys_object"
        }
      ]
    },
    "revoke_ssh_keys": {
      "allOf": [
        {
          "$ref": "#/definitions/deletion_confirmation"
        }
      ]
    }
  },
  "parameters": {
    "auth_param": {
      "name": "authorization",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/auth_object"
      }
    }
  },
  "responses": {
    "generic_200": {
      "description": "Request was successfully processed",
      "schema": {
        "type": "object"
      }
    },
    "generic_400": {
      "description": "Invalid Request: Please check your request schema",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "generic_500": {
      "description": "Error parsing or processing request",
      "schema": {
        "$ref": "#/definitions/error"
      }
    },
    "no_credentials": {
      "description": "Authorization Cookie not Received"
    },
    "forbidden": {
      "description": "Insufficient Permissions"
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "ApiKeyAuth": [
        "read"
      ]
    }
  ]
}
